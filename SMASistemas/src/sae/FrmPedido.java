/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmPedido.java
 *
 * Created on 20/02/2010, 15:23:17
 */

package sae;

import Classes.claAcessoDados;
import Classes.claFuncoes;
import Classes.claVariaveis;
import RegraNF.claNotaPadrao;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.TabExpander;
import javax.swing.table.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.util.*;
import java.awt.AWTException;
import java.awt.Robot;
import java.awt.event.KeyEvent;


import javax.*;
import javax.swing.text.JTextComponent;
/**
 *
 * @author thiago
 */
public class FrmPedido extends javax.swing.JDialog {
    /** Creates new form FrmPedido */
    claVariaveis variaveis = new claVariaveis();
    claAcessoDados AcessoDados = new claAcessoDados();
    claFuncoes funcoes = new claFuncoes();
    claNotaPadrao CalculaNFPadrao = new claNotaPadrao();
    private String vm_tipo_end, vm_base_calculo_icms_TELA;
    private ResultSet rs;
    private ResultSet rsLote;
    private double vmAliqICMS, vmAliqIPI, vmAliqICMSSUB, vmAliqDDIF, vmREDUCAOICMS;
    private DefaultTableModel dtm = new DefaultTableModel();
    private String vDescricaoProduto;
    Dimension dP = new Dimension();

    public FrmPedido(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        funcoes.F_AtribuirClasse(rootPane);
        btnSalvar1.setFocusTraversalKeysEnabled(false);
        btnNovo.setFocusTraversalKeysEnabled(false);
        btnSalvar.setFocusTraversalKeysEnabled(false);
        TableEnterAction(grDados);
        //grDados.setDefaultRenderer(Object.class, new TabelaItemPedido());
        MontaColunasGrid();
        grDados.setDefaultRenderer(Object.class, new TabelaItemPedido());
        

        //Pega o tamanho da tela
        //Toolkit toolkit = Toolkit.getDefaultToolkit();
        //Dimension screenSize = toolkit.getScreenSize();

        //Calcula a posição do frame a partir da resolucao usada
        //int x = (screenSize.width - this.getWidth()) / 2;
        //int y = (screenSize.height - this.getHeight()) / 2;

        //Define a posicao (centralizada)
        //this.setLocation(x, y);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnSalvar1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtDataFaturamento = new javax.swing.JFormattedTextField();
        txtDataEmissao = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        txtNota = new javax.swing.JTextField();
        lbID = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnSair = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnNFE = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnCancelarFaturamento = new javax.swing.JButton();
        btnDuplicarPedido = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        lbStatus = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbItem = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grDados = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ddlTipoPedido = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        txtCodEmpresa = new javax.swing.JTextField();
        btnPesquisaEmpresa = new javax.swing.JButton();
        txtEmpresa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodCliente = new javax.swing.JTextField();
        btnPesquisaCliente = new javax.swing.JButton();
        txtCliente = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtCodVendedor = new javax.swing.JTextField();
        btnPesquisaVendedor = new javax.swing.JButton();
        txtVendedor = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtCodVendedor2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtCodVendedor1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtDescontoPorcent = new javax.swing.JTextField();
        txtDescontoDinheiro = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodCondicaoPagamento = new javax.swing.JTextField();
        btnPesquisaCondicaoPagamento = new javax.swing.JButton();
        txtCondicaoPagamento = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pedido de Venda");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        btnSalvar1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        btnSalvar1.setText("Digitar Itens");
        btnSalvar1.setToolTipText("");
        btnSalvar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalvar1.setEnabled(false);
        btnSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar1ActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10))); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel8.setText("N° Pedido:");
        jLabel8.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel9.setText("Data Emissao:");
        jLabel9.setToolTipText("");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel10.setText("Data Faturamento:");
        jLabel10.setToolTipText("");

        txtDataFaturamento.setEditable(false);
        txtDataFaturamento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataFaturamento.setToolTipText("");
        txtDataFaturamento.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtDataFaturamento.setFocusable(false);
        txtDataFaturamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDataFaturamento.setName("ped_data_faturamento"); // NOI18N

        txtDataEmissao.setEditable(false);
        txtDataEmissao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataEmissao.setToolTipText("");
        txtDataEmissao.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtDataEmissao.setFocusable(false);
        txtDataEmissao.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDataEmissao.setName("ped_data_emissao"); // NOI18N

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel17.setText("Nota Fiscal:");
        jLabel17.setToolTipText("");

        txtNota.setBackground(new java.awt.Color(238, 238, 238));
        txtNota.setEditable(false);
        txtNota.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtNota.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNota.setToolTipText("Número");
        txtNota.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtNota.setFocusable(false);
        txtNota.setName("ped_numero_nota_fiscal"); // NOI18N
        txtNota.setRequestFocusEnabled(false);

        lbID.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        lbID.setForeground(new java.awt.Color(51, 102, 255));
        lbID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbID.setText("0");
        lbID.setToolTipText("ID");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel17)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lbID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDataEmissao, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                        .addComponent(txtDataFaturamento, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                    .addComponent(txtNota, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtDataFaturamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtNota, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Sair.gif"))); // NOI18N
        btnSair.setBorderPainted(false);
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/novo.gif"))); // NOI18N
        btnNovo.setToolTipText("Incluir");
        btnNovo.setBorderPainted(false);
        btnNovo.setPreferredSize(new java.awt.Dimension(90, 26));
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/alterar.gif"))); // NOI18N
        btnAlterar.setToolTipText("Alterar");
        btnAlterar.setBorderPainted(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir.gif"))); // NOI18N
        btnExcluir.setToolTipText("Excluir");
        btnExcluir.setBorderPainted(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Localizar.gif"))); // NOI18N
        btnPesquisar.setToolTipText("Pesquisar");
        btnPesquisar.setBorderPainted(false);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnNFE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cifrao.png"))); // NOI18N
        btnNFE.setToolTipText("Faturar");
        btnNFE.setBorderPainted(false);
        btnNFE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNFEActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar.gif"))); // NOI18N
        btnSalvar.setToolTipText("Salvar");
        btnSalvar.setBorderPainted(false);
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cancelar.gif"))); // NOI18N
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.setBorderPainted(false);
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnCancelarFaturamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Alerta.png"))); // NOI18N
        btnCancelarFaturamento.setToolTipText("Cancelar Faturamento");
        btnCancelarFaturamento.setBorderPainted(false);
        btnCancelarFaturamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarFaturamentoActionPerformed(evt);
            }
        });

        btnDuplicarPedido.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        btnDuplicarPedido.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/duplicar.gif"))); // NOI18N
        btnDuplicarPedido.setToolTipText("Duplicar Pedido");
        btnDuplicarPedido.setBorderPainted(false);
        btnDuplicarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDuplicarPedidoActionPerformed(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Imprimir.gif"))); // NOI18N
        btnImprimir.setToolTipText("Imprimir");
        btnImprimir.setBorderPainted(false);
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNFE, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelarFaturamento, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDuplicarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSalvar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnNovo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE)
                                    .addComponent(btnAlterar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE)
                                    .addComponent(btnSair, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE))
                                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnNFE, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCancelarFaturamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnDuplicarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        lbStatus.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        lbStatus.setForeground(new java.awt.Color(153, 153, 153));
        lbStatus.setText("Registro ");
        lbStatus.setToolTipText("");
        jToolBar2.add(lbStatus);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel4.setText("Total de Itens:");
        jLabel4.setToolTipText("");

        lbItem.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lbItem.setForeground(new java.awt.Color(51, 102, 255));
        lbItem.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbItem.setText("00");
        lbItem.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel7.setText("Total Pedido:");
        jLabel7.setToolTipText("");

        grDados.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        grDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        grDados.setToolTipText("");
        grDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grDadosMouseClicked(evt);
            }
        });
        grDados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                grDadosFocusGained(evt);
            }
        });
        grDados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grDadosKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grDadosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(grDados);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel13.setText("--- Itens Pedido ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        jLabel13.setToolTipText("");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cabeçalho do Pedido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel1.setText("Movimento:");
        jLabel1.setToolTipText("");

        ddlTipoPedido.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        ddlTipoPedido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "V - Venda", "P - Pendente", "O - Orçamento", "D - Devolução", "B - Bonificação", "E - Entrada", "F - Faturado", "C - Cancelado" }));
        ddlTipoPedido.setToolTipText("");
        ddlTipoPedido.setEnabled(false);
        ddlTipoPedido.setName("ped_tipo_pedido"); // NOI18N
        ddlTipoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddlTipoPedidoActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel11.setText("Empresa:");
        jLabel11.setToolTipText("");

        txtCodEmpresa.setColumns(8);
        txtCodEmpresa.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodEmpresa.setToolTipText("Código");
        txtCodEmpresa.setEnabled(false);
        txtCodEmpresa.setName("ped_emp_codigo_id"); // NOI18N
        txtCodEmpresa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodEmpresaFocusLost(evt);
            }
        });
        txtCodEmpresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodEmpresaKeyPressed(evt);
            }
        });

        btnPesquisaEmpresa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaEmpresa.setToolTipText("");
        btnPesquisaEmpresa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaEmpresa.setEnabled(false);
        btnPesquisaEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaEmpresaActionPerformed(evt);
            }
        });

        txtEmpresa.setEditable(false);
        txtEmpresa.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtEmpresa.setForeground(new java.awt.Color(102, 102, 255));
        txtEmpresa.setToolTipText("");
        txtEmpresa.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtEmpresa.setFocusable(false);
        txtEmpresa.setName(""); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel2.setText("Cliente:");
        jLabel2.setToolTipText("");

        txtCodCliente.setColumns(8);
        txtCodCliente.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodCliente.setToolTipText("Código");
        txtCodCliente.setEnabled(false);
        txtCodCliente.setName("ped_par_codigo_id"); // NOI18N
        txtCodCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodClienteFocusLost(evt);
            }
        });
        txtCodCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodClienteKeyPressed(evt);
            }
        });

        btnPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaCliente.setToolTipText("");
        btnPesquisaCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaCliente.setEnabled(false);
        btnPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaClienteActionPerformed(evt);
            }
        });

        txtCliente.setEditable(false);
        txtCliente.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCliente.setForeground(new java.awt.Color(102, 102, 255));
        txtCliente.setToolTipText("");
        txtCliente.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtCliente.setFocusable(false);
        txtCliente.setName(""); // NOI18N

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel16.setText("Vendedor:");
        jLabel16.setToolTipText("");

        txtCodVendedor.setColumns(8);
        txtCodVendedor.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodVendedor.setToolTipText("Código");
        txtCodVendedor.setEnabled(false);
        txtCodVendedor.setName("ped_func_codigo_id"); // NOI18N
        txtCodVendedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodVendedorFocusLost(evt);
            }
        });
        txtCodVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodVendedorKeyPressed(evt);
            }
        });

        btnPesquisaVendedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaVendedor.setToolTipText("");
        btnPesquisaVendedor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaVendedor.setEnabled(false);
        btnPesquisaVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaVendedorActionPerformed(evt);
            }
        });

        txtVendedor.setEditable(false);
        txtVendedor.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtVendedor.setForeground(new java.awt.Color(102, 102, 255));
        txtVendedor.setToolTipText("");
        txtVendedor.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtVendedor.setFocusable(false);
        txtVendedor.setName(""); // NOI18N

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel19.setText("O.C. Cliente:");
        jLabel19.setToolTipText("");

        txtCodVendedor2.setColumns(20);
        txtCodVendedor2.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodVendedor2.setToolTipText("");
        txtCodVendedor2.setEnabled(false);
        txtCodVendedor2.setName("ped_oc_cliente"); // NOI18N
        txtCodVendedor2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodVendedor2FocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel3.setText("Observação:");
        jLabel3.setToolTipText("");

        txtCodVendedor1.setColumns(255);
        txtCodVendedor1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodVendedor1.setToolTipText("");
        txtCodVendedor1.setEnabled(false);
        txtCodVendedor1.setName("ped_observacao"); // NOI18N
        txtCodVendedor1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodVendedor1FocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ddlTipoPedido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCodVendedor, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnPesquisaVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(txtCodEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisaEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCliente)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodVendedor2, 0, 0, Short.MAX_VALUE))))
                    .addComponent(txtCodVendedor1, 0, 1, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPesquisaEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ddlTipoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCodEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16))
                    .addComponent(btnPesquisaVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19))
                    .addComponent(txtCodVendedor2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodVendedor1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setEditable(false);
        jLabel12.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 255));
        jLabel12.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jLabel12.setToolTipText("Valor");
        jLabel12.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        jLabel12.setFocusable(false);
        jLabel12.setName("ped_total_pedido"); // NOI18N

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel14.setText("Desconto %:");
        jLabel14.setToolTipText("");

        txtDescontoPorcent.setColumns(13);
        txtDescontoPorcent.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDescontoPorcent.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescontoPorcent.setToolTipText("%");
        txtDescontoPorcent.setEnabled(false);
        txtDescontoPorcent.setName("ped_percentual_desconto"); // NOI18N
        txtDescontoPorcent.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoPorcentFocusLost(evt);
            }
        });

        txtDescontoDinheiro.setColumns(13);
        txtDescontoDinheiro.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDescontoDinheiro.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescontoDinheiro.setToolTipText("%");
        txtDescontoDinheiro.setEnabled(false);
        txtDescontoDinheiro.setName("ped_valor_desconto"); // NOI18N
        txtDescontoDinheiro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoDinheiroFocusLost(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel15.setText("Desconto $:");
        jLabel15.setToolTipText("");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel5.setText("Condição Pgto:");
        jLabel5.setToolTipText("");

        txtCodCondicaoPagamento.setColumns(8);
        txtCodCondicaoPagamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodCondicaoPagamento.setToolTipText("Código");
        txtCodCondicaoPagamento.setEnabled(false);
        txtCodCondicaoPagamento.setName("ped_cpgto_codigo_id"); // NOI18N
        txtCodCondicaoPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodCondicaoPagamentoFocusLost(evt);
            }
        });
        txtCodCondicaoPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodCondicaoPagamentoKeyPressed(evt);
            }
        });

        btnPesquisaCondicaoPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaCondicaoPagamento.setToolTipText("Pesquisa Condições");
        btnPesquisaCondicaoPagamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaCondicaoPagamento.setEnabled(false);
        btnPesquisaCondicaoPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaCondicaoPagamentoActionPerformed(evt);
            }
        });

        txtCondicaoPagamento.setEditable(false);
        txtCondicaoPagamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCondicaoPagamento.setForeground(new java.awt.Color(102, 102, 255));
        txtCondicaoPagamento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCondicaoPagamento.setToolTipText("");
        txtCondicaoPagamento.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtCondicaoPagamento.setFocusable(false);
        txtCondicaoPagamento.setName(""); // NOI18N

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel20.setText("Parcela(s)");
        jLabel20.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescontoPorcent, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescontoDinheiro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisaCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 917, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, 0, 147, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(txtDescontoPorcent, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)
                        .addComponent(txtDescontoDinheiro, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(txtCodCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel20)
                        .addComponent(jLabel7)
                        .addComponent(jLabel4)
                        .addComponent(lbItem)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPesquisaCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        if(funcoes.Permissao("001", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
        {
         funcoes.limparTodosCampos(rootPane);
         funcoes.HabilitaCampos(rootPane, true);
         txtCodEmpresa.requestFocus();
         Date data = new Date(System.currentTimeMillis());
         SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
         txtDataEmissao.setText(formatarDate.format(data));
         lbItem.setText("00");
         jLabel12.setText("0,00");
         variaveis.status = "I";
         lbStatus.setText(" Incluindo...");
        }


    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:

        if (lbID.getText().equals("0"))
        {
            JOptionPane.showMessageDialog(null,"Nenhum pedido selecionado para alteração!");
            return;
        }

        if (ddlTipoPedido.getSelectedIndex() == 6)
        {
            JOptionPane.showMessageDialog(null,"Pedido já faturado. Alteração não permitida!");
            return;
        }
        if (ddlTipoPedido.getSelectedIndex() == 7)
        {
            JOptionPane.showMessageDialog(null,"Pedido Cancelado. Alteração não permitida!");
            return;
        }
        if(funcoes.Permissao("002", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
        {

        funcoes.HabilitaCampos(rootPane, true);
        lbStatus.setText(" Alterando");
        txtCodEmpresa.requestFocus();
        variaveis.status = "A";
        }
 
    }//GEN-LAST:event_btnAlterarActionPerformed
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        if(funcoes.Permissao("003", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
        {
        if (!txtDataFaturamento.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Pedido já faturado. Exclusão não permitida!");
            return;
        }

        if (lbID.getText().equals("0"))
        {
            JOptionPane.showMessageDialog(null,"Nenhum pedido selecionado para exclusão!");
            return;
        }
        Object[] options = { " Sim ", " Não " };
            int confirmar = JOptionPane.showOptionDialog(null, "Confirma Exclusão", " Mensagem...",JOptionPane.DEFAULT_OPTION, JOptionPane. QUESTION_MESSAGE,null,options, options[0]);
            if(confirmar==1){
                //txtDescricao.requestFocus();
                return;
               }
            try
            {

            String  vmCondicaoItem = " ITEM_PED_PEDIDO_CODIGO_ID = " + lbID.getText();
            AcessoDados.Excluir("item_pedido", vmCondicaoItem);

            String  vmCondicao = "PED_CODIGO_ID = " + lbID.getText();
            AcessoDados.Excluir("PEDIDOS", vmCondicao);


            }catch (Exception e) {
                e.printStackTrace();
            }

          btnCancelarActionPerformed(null);
          funcoes.HabilitaCampos(rootPane, false);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code her
       if(funcoes.Permissao("004", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
       {
         variaveis.xColuna1 = "ped_codigo_id";
         variaveis.xColuna2 = "ped_numero_nota_fiscal";
         variaveis.xColuna3 = "ped_tipo_pedido";
         variaveis.xColuna4 = "to_char(ped_data_emissao, 'DD/MM/YYYY')";
         variaveis.xColuna5 = "to_char(ped_data_faturamento, 'DD/MM/YYYY')";
         variaveis.xColuna6 = "TRIM(to_char(ped_total_pedido,'9G999G999D99'))";
         variaveis.xColuna7 = "PAR_NOME_RAZAO_SOCIAL";
         variaveis.xColuna8 = "EMP_NOME";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Pedido";
         variaveis.xColunaNome2 = "Nota";
         variaveis.xColunaNome3 = "Tipo Pedido";
         variaveis.xColunaNome4 = "Emissão";
         variaveis.xColunaNome5 = "Faturamento";
         variaveis.xColunaNome6 = "Valor";
         variaveis.xColunaNome7 = "Cliente";
         variaveis.xColunaNome8 = "Empresa";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 80;
         variaveis.xColunaTamanho3 = 70;
         variaveis.xColunaTamanho4 = 80;
         variaveis.xColunaTamanho5 = 80;
         variaveis.xColunaTamanho6 = 80;
         variaveis.xColunaTamanho7 = 320;
         variaveis.xColunaTamanho8 = 230;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "ped_codigo_id";
         variaveis.xColunaNomeStart = "Pedido";
         variaveis.xTabela = "pedidos";
         variaveis.xSql = " INNER JOIN PARCEIROS ON (PAR_CODIGO_ID = ped_par_codigo_id) " +
                          " INNER JOIN EMPRESAS  ON (EMP_CODIGO_ID = ped_emp_codigo_id) "; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(980, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Pedidos - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);
       if(!md.getRetorno().trim().equals("") ||!md.getRetorno().equals(null))
       {
       lbID.setText((String) md.getRetorno());
       }
       if(!lbID.getText().equals(""))
       {
          String vmCampos = "PEDIDOS.*, FPGTO_DESCRICAO, CPGTO_DESCRICAO, par_nome_razao_social";
          String vmCondicao_Consulta = " LEFT JOIN PARCEIROS ON (PAR_CODIGO_ID = PED_PAR_CODIGO_ID) "
                  + "LEFT JOIN FORMA_DE_PAGAMENTO ON (FPGTO_CODIGO_ID = PED_FPGTO_CODIGO_ID) "
                  + "LEFT JOIN CONDICAO_PAGAMENTO ON (CPGTO_CODIGO_ID =  PED_CPGTO_CODIGO_ID) "
                  + " WHERE ped_codigo_id = " + lbID.getText();
            try
            {
                    funcoes.RetornarSelecao(rootPane,"PEDIDOS", vmCampos, vmCondicao_Consulta);
                    MontaGrid();
                    somaValores();
                    calculaValores();
                    btnAlterar.requestFocus();
                    
          }catch (Exception e) {
           e.printStackTrace();
        }
        }
       }
}//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_btnSairActionPerformed

    private void btnPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaClienteActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "par_codigo_id";
         variaveis.xColuna2 = "par_nome_razao_social";
         variaveis.xColuna3 = "par_fantasia";
         variaveis.xColuna4 = "par_cnpj_cpf";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Nome / Razão Social";
         variaveis.xColunaNome3 = "Fantasia";
         variaveis.xColunaNome4 = "CPF / CNPJ";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 450;
         variaveis.xColunaTamanho3 = 260;
         variaveis.xColunaTamanho4 = 120;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "par_nome_razao_social";
         variaveis.xColunaNomeStart = "Nome / Razão Social";
         variaveis.xTabela = "parceiros";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(900, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Parceiros - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);
       txtCodCliente.setText(null);
       txtCodCliente.setText((String) md.getRetorno());
       txtCodCliente.requestFocus();
       if(!txtCodCliente.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE par_codigo_id = " + txtCodCliente.getText();
          try
        {
        rs = AcessoDados.Selecao("parceiros", vmCampos, vmCondicao_Consulta);
        rs.next();
        txtCliente.setText(rs.getString("par_nome_razao_social"));
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }
    }//GEN-LAST:event_btnPesquisaClienteActionPerformed

    private void txtCodCondicaoPagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodCondicaoPagamentoFocusLost
        // TODO add your handling code here:
   

       if(!txtCodCondicaoPagamento.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE cpgto_codigo_id = " + txtCodCondicaoPagamento.getText();
          try
        {
        rs = AcessoDados.Selecao("condicao_pagamento", vmCampos, vmCondicao_Consulta);
        if (!rs.next())
        {
            JOptionPane.showMessageDialog(null,"Condição de pagamento não cadastrado no sistema");
            txtCodCondicaoPagamento.setText(null);
            txtCondicaoPagamento.setText(null);
            txtCodCondicaoPagamento.requestFocus();
            return;
        }
        txtCondicaoPagamento.setText(rs.getString("cpgto_qtde_parcelas"));
        if(!txtCondicaoPagamento.isEnabled()) txtCondicaoPagamento.transferFocus();
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }
       else
           txtCondicaoPagamento.setText(null);

}//GEN-LAST:event_txtCodCondicaoPagamentoFocusLost

    private void txtCodCondicaoPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodCondicaoPagamentoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== 114) //tecla F3 para pesquisa
            btnPesquisaCondicaoPagamentoActionPerformed(null);
}//GEN-LAST:event_txtCodCondicaoPagamentoKeyPressed

    private void btnPesquisaCondicaoPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaCondicaoPagamentoActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "cpgto_codigo_id";
         variaveis.xColuna2 = "cpgto_qtde_parcelas";
         variaveis.xColuna3 = "cpgto_prazo_medio";
         variaveis.xColuna4 = "cpgto_descricao";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Qtde Parcelas";
         variaveis.xColunaNome3 = "Prazo Médio";
         variaveis.xColunaNome4 = "Descrição";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 70;
         variaveis.xColunaTamanho2 = 110;
         variaveis.xColunaTamanho3 = 110;
         variaveis.xColunaTamanho4 = 150;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "cpgto_descricao";
         variaveis.xColunaNomeStart = "Descrição";
         variaveis.xTabela = "condicao_pagamento";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(450, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Cond. Pagamento - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);

       txtCondicaoPagamento.setText(null);
       txtCodCondicaoPagamento.setText((String) md.getRetorno());

       txtCodCondicaoPagamento.requestFocus();
       if(!txtCodCondicaoPagamento.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE cpgto_codigo_id = " + txtCodCondicaoPagamento.getText();
          try
        {
        rs = AcessoDados.Selecao("condicao_pagamento", vmCampos, vmCondicao_Consulta);
        rs.next();
        txtCondicaoPagamento.setText(rs.getString("cpgto_qtde_parcelas"));

        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }
}//GEN-LAST:event_btnPesquisaCondicaoPagamentoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        if (grDados.getRowCount() == 0)
        {
             JOptionPane.showMessageDialog(null,"Nenhum produto informado para esse pedido!");
             btnSalvar1.requestFocus();
             return;
        }
        
        if(ddlTipoPedido.getSelectedIndex() == 6 || ddlTipoPedido.getSelectedIndex() == 7)
        {
            JOptionPane.showMessageDialog(null,"Tipo de Pedido Inválido");
            ddlTipoPedido.requestFocus();
            return;
        }


        //Consiste Itens
       for(int i = 0; i <= grDados.getRowCount() -1; i++)
       {
           String xCodigo = grDados.getValueAt(i, 1).toString();
           if(xCodigo.equals(""))
           {
               javax.swing.table.DefaultTableModel Ex = (javax.swing.table.DefaultTableModel)grDados.getModel();
               Ex.removeRow(i);
               i= 0;
           }
        }

       for(int i = 0; i <= grDados.getRowCount() - 1; i++)
       {
           String xProduto = grDados.getValueAt(i, 1).toString();
           if(xProduto.equals(""))
           {
              JOptionPane.showMessageDialog(null,"Produto não informado.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(1, 1);
              //grDados.editCellAt(i, 1);
              grDados.requestFocus();
              return;
           }


           try
           {
           double xQtde = Double.parseDouble(grDados.getValueAt(i, 4).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"Quantidade informada inválida.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(4, 4);
              grDados.editCellAt(i, 4);
              grDados.requestFocus();
              return;
           }


           try
           {
           double xValorUnit = Double.parseDouble(grDados.getValueAt(i, 5).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"Valor unitário inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(5, 5);
              grDados.editCellAt(i, 5);
              grDados.requestFocus();
              return;
           }

           try
           {
           double xDesconto = Double.parseDouble(grDados.getValueAt(i, 6).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"Desconto inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(6, 6);
              grDados.editCellAt(i, 6);
              grDados.requestFocus();
              return;
           }


           String xCFOP = grDados.getValueAt(i, 7).toString();
           if(xCFOP.equals(""))
           {
              JOptionPane.showMessageDialog(null,"CFOP não informado.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(7, 7);
              grDados.editCellAt(i, 7);
              grDados.requestFocus();
              return;
           }

           String xCST = grDados.getValueAt(i, 8).toString();
           if(xCST.equals(""))
           {
              JOptionPane.showMessageDialog(null,"CST não informada.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(8, 8);
              grDados.editCellAt(i, 8);
              grDados.requestFocus();
              return;
           }

           try
           {
           double xPecICMS = Double.parseDouble(grDados.getValueAt(i, 9).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"% ICMS inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(9, 9);
              grDados.editCellAt(i, 9);
              grDados.requestFocus();
              return;
           }

           try
           {
           double xPecIPI = Double.parseDouble(grDados.getValueAt(i, 11).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"% IPI inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(11, 11);
              grDados.editCellAt(i, 11);
              grDados.requestFocus();
              return;
           }

           try
           {
           double xSubst = Double.parseDouble(grDados.getValueAt(i, 13).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"ICMS Subst. inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(13, 13);
              grDados.editCellAt(i, 13);
              grDados.requestFocus();
              return;
           }

       }

       
        if (txtCodEmpresa.getText().equals(null) || (txtCodEmpresa.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Empresa não informada!");
                txtCodEmpresa.requestFocus();
                return;
            }
         if (txtCodCliente.getText().equals(null) || (txtCodCliente.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Cliente não informado!");
                txtCodCliente.requestFocus();
                return;
            }
        if (txtCodCondicaoPagamento.getText().equals(null) || (txtCodCondicaoPagamento.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Condição de Pagamento não informada!");
                txtCodCondicaoPagamento.requestFocus();
                return;
            }


        funcoes.GravarDados(lbID.getText(), rootPane, "PEDIDOS", "ped_codigo_id",false);
        lbStatus.setText(" Registro");
        if(lbID.getText().equals("0")) lbID.setText(funcoes.RetornaId("Pedidos", "ped_codigo_id"));
        //Incluir Item Pedido
        String vmCamposItem = "   item_ped_pedido_codigo_id, " +
                              "item_ped_prod_codigo_id," +
                              "item_ped_quantidade,"+
                              "item_ped_percentual_desconto,"+
                              "item_ped_cfop,"+
                              "item_ped_icms,"+
                              "item_ped_ipi,"+
                              "item_ped_icms_sub_trib,"+
                              "item_ped_valor_unitario,"+
                              "item_ped_valor_total,"+
                              "item_pedido_base_calculo_icms,"+
                              "item_ped_aliquota_icms,"+
                              "item_ped_aliquota_ipi,"+
                              "item_ped_peso_liquido,"+
                              "item_ped_peso_bruto,"+
                              "item_ped_cst,"+
                              "item_pedido_lote";
                                

            try
            {
            AcessoDados.Excluir("item_pedido", " item_ped_pedido_codigo_id = " + lbID.getText());
            for(int i = 0; i <= grDados.getRowCount() - 1; i++)
            {
                String vmParametroItem="";
                String vBaseICMS = "0.00";
                if (!grDados.getValueAt(i, 8).toString().equals("060"))
                {
                    vBaseICMS =  grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", ".");
                }

               
                vmParametroItem = lbID.getText() + ",";
                vmParametroItem +=   grDados.getValueAt(i, 0).toString() + "," +
                                     grDados.getValueAt(i, 4).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 6).toString().replace(".", "").replace(",", ".") + ",'" +
                                     grDados.getValueAt(i, 7).toString() + "'," +
                                     grDados.getValueAt(i, 10).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 12).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 13).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 5).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", ".") + "," +
                                     vBaseICMS + "," + //base de calculo icms
                                     grDados.getValueAt(i, 9).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 11).toString().replace(".", "").replace(",", ".") + "," +
                                     RetornaPesoProduto(grDados.getValueAt(i, 0).toString())+ ",'"+
                                     grDados.getValueAt(i, 8).toString() + "','" +
                                     grDados.getValueAt(i, 16).toString()+"'";

            AcessoDados.Inserir("item_pedido", vmCamposItem, vmParametroItem);
            }

            }catch (Exception e) {
                e.printStackTrace();
            }
       

            if(!lbID.getText().equals(""))
            {
               String vmCampos = "PEDIDOS.*, FPGTO_DESCRICAO, CPGTO_DESCRICAO, par_nome_razao_social";
               String vmCondicao_Consulta = " LEFT JOIN PARCEIROS ON (PAR_CODIGO_ID = PED_PAR_CODIGO_ID) LEFT JOIN FORMA_DE_PAGAMENTO ON (FPGTO_CODIGO_ID = PED_FPGTO_CODIGO_ID) LEFT JOIN CONDICAO_PAGAMENTO ON (CPGTO_CODIGO_ID =  PED_CPGTO_CODIGO_ID)  WHERE ped_codigo_id = " + lbID.getText();
            try
            {
                   funcoes.RetornarSelecao(rootPane,"PEDIDOS", vmCampos, vmCondicao_Consulta);
                   txtCodClienteFocusLost(null);
                   MontaGrid();
                   somaValores();
                   calculaValores();
                   funcoes.HabilitaCampos(rootPane, false);

          }catch (Exception e) {
           e.printStackTrace();
          }
          }
          lbStatus.setText(" Registro");
            
    }//GEN-LAST:event_btnSalvarActionPerformed

    public void AcertoEstoquemenos()
    {

        try
        {
        rs = AcessoDados.Selecao("ITEM_PEDIDO", "*", "WHERE ITEM_PED_PEDIDO_CODIGO_ID = " + lbID.getText());

        while(rs.next())
        {
             String vmParametros = "lot_qtde = lot_qtde - " +  rs.getString("item_ped_quantidade"); // sinal de -
             String CondicaoConsulta = " lot_prod_codigo_id = "
                     + rs.getString("item_ped_prod_codigo_id") 
                     + " and lot_numero_lot = '" 
                     + rs.getString("item_pedido_lote") 
                     +"'" ;
             AcessoDados.Alterar("lotes", vmParametros, CondicaoConsulta);
        }
        }catch (Exception e) {
               e.printStackTrace();
        }

    }
     
     
      public void AcertoEstoquemais()
    {

        try
        {
        rs = AcessoDados.Selecao("ITEM_PEDIDO", "*", "WHERE ITEM_PED_PEDIDO_CODIGO_ID = " + lbID.getText());

        while(rs.next())
        {
             String vmParametros = "lot_qtde = lot_qtde + " +  rs.getString("item_ped_quantidade"); // sinal de +
             String CondicaoConsulta = " lot_prod_codigo_id = "
                     + rs.getString("item_ped_prod_codigo_id") 
                     + " and lot_numero_lot = '" 
                     + rs.getString("item_pedido_lote") 
                     +"'" ;
             AcessoDados.Alterar("lotes", vmParametros, CondicaoConsulta);
        }
        }catch (Exception e) {
               e.printStackTrace();
        }

    }
       
    
    
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        funcoes.HabilitaCampos(rootPane, false);
        funcoes.limparTodosCampos(rootPane);
        btnNovo.requestFocus();
        lbItem.setText("00");
}//GEN-LAST:event_btnCancelarActionPerformed

    private void txtDescontoPorcentFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoPorcentFocusLost
        // TODO add your handling code here:
        if(txtDescontoPorcent.getText().equals(""))txtDescontoPorcent.setText("0");
        calculaValores();
    }//GEN-LAST:event_txtDescontoPorcentFocusLost

    private void txtDescontoDinheiroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoDinheiroFocusLost
        // TODO add your handling code here:
        if(txtDescontoDinheiro.getText().equals(""))txtDescontoDinheiro.setText("0");
        calculaValores();
       
    }//GEN-LAST:event_txtDescontoDinheiroFocusLost

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
            
    }//GEN-LAST:event_formKeyPressed

    private void btnNFEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNFEActionPerformed
        // TODO add your handling code here:
        if(funcoes.Permissao("006", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
        {
        if (lbID.getText().equals("0"))
        {
            JOptionPane.showMessageDialog(null,"Nenhum pedido selecionado para emissão de NF-e!");
            return;
        }
        
        if(ddlTipoPedido.getSelectedIndex() == 1 )
        {
            JOptionPane.showMessageDialog(null,"Pedido PENDENTE. faturamento não permitido.");
            return;
        }
        if(ddlTipoPedido.getSelectedIndex() == 2 )
        {
            JOptionPane.showMessageDialog(null,"Pedido em ORÇAMENTO. faturamento não permitido.");
            return;
        }

        variaveis.vm_Pedido = lbID.getText();
        variaveis.vmEmpresaID = txtCodEmpresa.getText();

        FrmFaturamento md = new FrmFaturamento(null, true);
        md.setLocationRelativeTo(null);
        md.setVisible(true);

        String vmCampos = "PEDIDOS.*, FPGTO_DESCRICAO, CPGTO_DESCRICAO, par_nome_razao_social";
        String vmCondicao_Consulta = " LEFT JOIN PARCEIROS ON (PAR_CODIGO_ID = PED_PAR_CODIGO_ID) LEFT JOIN FORMA_DE_PAGAMENTO ON (FPGTO_CODIGO_ID = PED_FPGTO_CODIGO_ID) LEFT JOIN CONDICAO_PAGAMENTO ON (CPGTO_CODIGO_ID =  PED_CPGTO_CODIGO_ID)  WHERE ped_codigo_id = " + lbID.getText();
        try{
            funcoes.RetornarSelecao(rootPane,"PEDIDOS", vmCampos, vmCondicao_Consulta);
            MontaGrid();
            somaValores();
            calculaValores();
            AcertoEstoquemenos(); // Retira o valor para o estoque
            btnPesquisar.requestFocus();
            String xCancelamento = "";
          }catch (Exception e) {
           e.printStackTrace();
          }
        }
    }//GEN-LAST:event_btnNFEActionPerformed

     
    public void CalculaImposto(String Desconto, String Quantidade, String Unitario){
        if(Desconto.equals(""))Desconto ="0";
        if(Quantidade.equals(""))Desconto ="0";
        if(Unitario.equals(""))Desconto ="0";
        CalculaNFPadrao.calculaNota(vmAliqICMS, vmAliqIPI, Double.parseDouble(Desconto.replace(".", "").replace(",", ".")),
                                                           Double.parseDouble(Quantidade.replace(".", "").replace(",", ".")),
                                                           Double.parseDouble(Unitario.replace(".", "").replace(",", ".")),vmAliqDDIF, vmREDUCAOICMS);
        vm_base_calculo_icms_TELA = (funcoes.formataMoeda(Double.toString(variaveis.vm_base_calculo_icms),"BD"));
    }
    private void btnSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar1ActionPerformed
        // TODO add your handling code here:
        JTextField fieldx = new JTextField();  
        DefaultCellEditor editor = new DefaultCellEditor(fieldx) {  
            @Override  
            public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {  
                Component comp = super.getTableCellEditorComponent(table, value, isSelected, row, column);  
                if (comp instanceof JTextComponent) {  
                    ((JTextComponent)comp).setBackground(new java.awt.Color(255,255,188));
                    ((JTextComponent)comp).selectAll();  
                }  
                return comp;  
            }  
        };  
        grDados.getColumnModel().getColumn(1).setCellEditor(editor);        
        grDados.getColumnModel().getColumn(3).setCellEditor(editor);        
        grDados.getColumnModel().getColumn(4).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(5).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(6).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(7).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(8).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(9).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(11).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(13).setCellEditor(editor);    

        int t = grDados.getRowCount();
        if(grDados.getRowCount() == 0)
        {
        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)grDados.getModel();
        dtm.addRow(new Object[]{"","","","","","","","","","","","","","","","",""});
        grDados.setCellSelectionEnabled(true);
        grDados.setRowSelectionInterval(0, 0);
        grDados.setColumnSelectionInterval(1, 1);
        //grDados.editCellAt(0, 1);
        }else
        {
          javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)grDados.getModel();
          dtm.addRow(new Object[]{"","","","","","","","","","","","","","","","",""});
          grDados.setCellSelectionEnabled(true);
          grDados.setRowSelectionInterval(t, t);
          grDados.setColumnSelectionInterval(1, 1);
          //grDados.editCellAt(t, 1);
        }
        grDados.requestFocus();
     
        {
                 variaveis.xColuna1 = "prod_codigo_id";
                 variaveis.xColuna2 = "prod_codigo_produto";
                 variaveis.xColuna3 = "prod_descricao";
                 variaveis.xColuna4 = "prod_descricao_generica";
                 variaveis.xColuna5 = "''";
                 variaveis.xColuna6 = "''";
                 variaveis.xColuna7 = "''";
                 variaveis.xColuna8 = "''";
                 variaveis.xColuna9 = "''";
    
                 variaveis.xColunaNome1 = "Código";
                 variaveis.xColunaNome2 = "Cód Produto";
                 variaveis.xColunaNome3 = "Descrição";
                 variaveis.xColunaNome4 = "Descrição Genérica";
                 variaveis.xColunaNome5 = "";
                 variaveis.xColunaNome6 = "";
                 variaveis.xColunaNome7 = "";
                 variaveis.xColunaNome8 = "";
                 variaveis.xColunaNome9 = "";
                 variaveis.xColunaTamanho1 = 60;
                 variaveis.xColunaTamanho2 = 80;
                 variaveis.xColunaTamanho3 = 400;
                 variaveis.xColunaTamanho4 = 300;
                 variaveis.xColunaTamanho5 = 0;
                 variaveis.xColunaTamanho6 = 0;
                 variaveis.xColunaTamanho7 = 0;
                 variaveis.xColunaTamanho8 = 0;
                 variaveis.xColunaTamanho9 = 0;
                 variaveis.xColunaStart = "prod_descricao";
                 variaveis.xColunaNomeStart = "Descrição";
                 variaveis.xTabela = "produtos";
                 variaveis.xSql = ""; 
         
                 FpesqPesquisa md = new FpesqPesquisa(null, true);
                             
                 dP.setSize(850, 480); 
                 md.setSize(dP);
                 md.setTitle("Pesquisa Produto - ENTER ou DUPLO CLICK no registro retorna dados.");
                 md.setLocationRelativeTo(null);
                 md.setVisible(true);
                 try
                 {
                     rs = AcessoDados.Selecao("produtos", "*", " where prod_codigo_id = " + md.getRetorno());
                     rs.next();
                     DefaultTableModel tabela = (DefaultTableModel) grDados.getModel(); 
                     tabela.setValueAt(rs.getString("prod_codigo_produto"), grDados.getSelectedRow(), 1);
                  }catch (Exception r) {
                     r.printStackTrace();
                 }
            }
        

}//GEN-LAST:event_btnSalvar1ActionPerformed
     class ButtonColumn extends AbstractCellEditor
        implements TableCellRenderer, TableCellEditor, ActionListener
    {
        JTable table;
        JButton renderButton;
        JButton renderButton1;
        JButton editButton;
        Icon imgExcluir;
        String text;

        public ButtonColumn(JTable table, int column)
        {
            super();
            //btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Localizar.gif")));;;
            this.table = table;
            imgExcluir = new ImageIcon("..MTDS/Imagens/excluir.gif");
            renderButton = new JButton(imgExcluir);
            renderButton.setBorderPainted(false);
            renderButton.setToolTipText("Excluir Item");
            renderButton.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
            renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir.gif")));

            editButton = new JButton();
            editButton.setFocusPainted( false );
            editButton.addActionListener( this );
            editButton.setBorderPainted(false);
            editButton.setToolTipText("Excluir Item");
            editButton.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
            editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir.gif")));


            TableColumnModel columnModel = table.getColumnModel();
            columnModel.getColumn(column).setCellRenderer( this );
            columnModel.getColumn(column).setCellEditor( this );
        }

        public Component getTableCellRendererComponent(
            JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
        {
            if (hasFocus)
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }
            else if (isSelected)
            {
                renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
            else
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }

            renderButton.setText( (value == null) ? "" : value.toString() );
            return renderButton;
        }

        public Component getTableCellEditorComponent(
            JTable table, Object value, boolean isSelected, int row, int column)
        {
            text = (value == null) ? "" : value.toString();
            editButton.setText( text );
            return editButton;
        }

        public Object getCellEditorValue()
        {
            return text;
        }

        public void actionPerformed(ActionEvent e)
        {
            fireEditingStopped();
            System.out.println( e.getActionCommand() + " : " + table.getSelectedRow());
            if(txtCodCliente.isEnabled())
            {
            DefaultTableModel tableModel =(DefaultTableModel) grDados.getModel();
            tableModel.removeRow(grDados.getSelectedRow());
            calculaValores();
            btnSalvar1.requestFocus();

            }
        }
    }

  public void somaValores()
  {
           String vmCampos = " SUM(item_pedido_base_calculo_icms) AS BASE_ICMS, " +
                          "  SUM(item_ped_icms) AS ICMS, " +
                          "  SUM(item_ped_icms_sub_trib) AS ICMSSUB, " +
                          "  SUM(item_ped_ipi) AS IPI, " +
                          "  SUM(item_ped_valor_total) AS TOT_PRODUTO, " +
                          "  SUM(item_ped_valor_total) AS TOT_NOTA ";

           String vmCondicao_Consulta = " WHERE item_ped_pedido_codigo_id = " + lbID.getText();
          try
        {
        rs = AcessoDados.Selecao("item_pedido", vmCampos, vmCondicao_Consulta);
        rs.next();
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }
  }

   public void calculaValores()
  {
       Double vTotBruto = 0.00;
       Double vTotProduto = 0.00;
       Double vDesconto = 0.00;
       Double vIPI = 0.00;
       Double vICMS = 0.00;
 
       for(int i = 0; i <= grDados.getRowCount() - 1; i++)
       {
          vTotBruto +=  Double.parseDouble(grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", "."));
          vTotProduto +=  Double.parseDouble(grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", "."));
          vIPI += Double.parseDouble(grDados.getValueAt(i, 12).toString().replace(".", "").replace(",", "."));
          vICMS += Double.parseDouble(grDados.getValueAt(i, 10).toString().replace(".", "").replace(",", "."));
       }
       lbItem.setText(funcoes.StrZero(grDados.getRowCount(),Byte.parseByte("2")));

       vDesconto = Double.parseDouble(txtDescontoPorcent.getText().replace(".", "").replace(",", "."));

       double vm_total_prdutos = vTotProduto;
       double vm_total_desconto = Double.parseDouble(txtDescontoDinheiro.getText().replace(".", "").replace(",", "."));
       double vm_total_pedido = vm_total_prdutos - vm_total_desconto;
       Double vPercdesconto = (vm_total_pedido * vDesconto) / 100;
       vm_total_pedido =  vm_total_pedido - vPercdesconto;
       jLabel12.setText(funcoes.formataMoeda(Double.toString(vm_total_pedido + vIPI ),"BD"));

  }
   
  public void MontaGrid()
    {
        String vmCampos = "   item_ped_pedido_codigo_id, " +
                              "item_ped_prod_codigo_id," +
                              "item_ped_quantidade,"+
                              "item_ped_percentual_desconto,"+
                              "item_ped_cfop,"+
                              "item_ped_icms,"+
                              "item_ped_ipi,"+
                              "item_ped_icms_sub_trib,"+
                              "item_ped_valor_unitario,"+
                              "item_ped_valor_total,"+
                              "item_pedido_base_calculo_icms,"+
                              "item_ped_aliquota_icms,"+
                              "item_ped_aliquota_ipi,"+
                              "item_ped_peso_liquido,"+
                              "item_ped_peso_bruto,"+
                              "item_ped_cst,"+
                              "item_pedido_lote, " +
                              "unid_unidade,"+
                              "prod_codigo_produto,"+
                              "prod_descricao";
                         

        String vmCondicao_Consulta = " left join item_pedido on (item_ped_pedido_codigo_id = ped_codigo_id) " +
                                     " left join produtos on (prod_codigo_id = item_ped_prod_codigo_id) " +
                                     " left join unidade_de_medida on (unid_codigo_id = prod_unid_codigo_id) " +
                                     " where item_ped_pedido_codigo_id = " + lbID.getText();
        try
        {
        rs = AcessoDados.Selecao("pedidos", vmCampos, vmCondicao_Consulta);
        MontaColunasGrid();
        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)grDados.getModel();
        while (rs.next())
        {
            dtm.addRow(new Object[]{rs.getString("item_ped_prod_codigo_id"),
                                    rs.getString("prod_codigo_produto"),
                                    rs.getString("prod_descricao"),
                                    rs.getString("unid_unidade"),
                                    rs.getString("item_ped_quantidade").replace(".",","),
                                    funcoes.formataMoeda(rs.getString("item_ped_valor_unitario"),"BD"),
                                    funcoes.formataPercentual(rs.getString("item_ped_percentual_desconto").replace(".",",")),
                                    rs.getString("item_ped_cfop"),
                                    rs.getString("item_ped_cst"),
                                    funcoes.formataMoeda(rs.getString("item_ped_aliquota_icms"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ped_icms"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ped_aliquota_ipi"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ped_ipi"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ped_icms_sub_trib"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ped_valor_total"),"BD"),
                                    "",
                                    rs.getString("item_pedido_lote")});
        }
        rs.close();
         }catch (Exception e) {
           e.printStackTrace();
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       MontaGrid();

    }//GEN-LAST:event_formWindowOpened

    private void txtCodClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodClienteFocusLost
        // TODO add your handling code here:
       if(!txtCodCliente.getText().equals(""))
        {
            String vmCampos = "*";
            String vmCondicao_Consulta = " where par_codigo_id = " + txtCodCliente.getText();
            try
            {
                rs = AcessoDados.Selecao("parceiros", vmCampos, vmCondicao_Consulta);
                    if (!rs.next())
                    {
                         JOptionPane.showMessageDialog(null,"Cliente não cadastrado no sistema");
                         txtCodCliente.setText(null);
                         txtCliente.setText(null);
                         txtCodCliente.requestFocus();
                         return;
                    }
                 rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
            try
            {
                rs = AcessoDados.Selecao("parceiros", vmCampos, vmCondicao_Consulta);
                while (rs.next())
                {
                    txtCliente.setText(rs.getString("par_nome_razao_social"));
                }
                rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }else
       {
        txtCliente.setText("");
       }

    }//GEN-LAST:event_txtCodClienteFocusLost

    private void btnPesquisaEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaEmpresaActionPerformed
        // TODO add your handling code here:
       
         variaveis.xColuna1 = "emp_codigo_id";
         variaveis.xColuna2 = "emp_nome";
         variaveis.xColuna3 = "emp_nome_fantasia";
         variaveis.xColuna4 = "emp_cnpj";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Razão Social";
         variaveis.xColunaNome3 = "Fantasia";
         variaveis.xColunaNome4 = "CPF / CNPJ";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 450;
         variaveis.xColunaTamanho3 = 260;
         variaveis.xColunaTamanho4 = 120;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "emp_nome";
         variaveis.xColunaNomeStart = "Razão Social";
         variaveis.xTabela = "empresas";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(900, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Empresa - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);
       txtCodEmpresa.setText(null);
       txtCodEmpresa.setText((String) md.getRetorno());
       txtCodEmpresa.requestFocus();
       if(!txtCodEmpresa.getText().equals(""))
       {
           txtCodEmpresaFocusLost(null);
       }

    }//GEN-LAST:event_btnPesquisaEmpresaActionPerformed

    private void txtCodEmpresaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodEmpresaFocusLost
        // TODO add your handling code here:
       if(!txtCodEmpresa.getText().equals(""))
        {
            String vmCampos = "*";
            String vmCondicao_Consulta = " where emp_codigo_id = " + txtCodEmpresa.getText();
            try
            {
                rs = AcessoDados.Selecao("empresas", vmCampos, vmCondicao_Consulta);
                    if (!rs.next())
                    {
                         JOptionPane.showMessageDialog(null,"Empresa não cadastrado no sistema");
                         txtCodEmpresa.setText(null);
                         txtEmpresa.setText(null);
                         txtCodEmpresa.requestFocus();
                         return;
                    }
                 rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
            try
            {
                rs = AcessoDados.Selecao("Empresas", vmCampos, vmCondicao_Consulta);
                while (rs.next())
                {
                    txtEmpresa.setText(rs.getString("emp_nome"));
                }
                rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }else
       {
        txtEmpresa.setText("");
       }

        
    }//GEN-LAST:event_txtCodEmpresaFocusLost

    private void grDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grDadosMouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_grDadosMouseClicked

    private void grDadosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grDadosFocusGained
        // TODO add your handling code here:
}//GEN-LAST:event_grDadosFocusGained

    private void grDadosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grDadosKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 114) //tecla F3 para pesquisa
        {
            if(grDados.getSelectedColumn() == 1)
            {
                 variaveis.xColuna1 = "prod_codigo_id";
                 variaveis.xColuna2 = "prod_codigo_produto";
                 variaveis.xColuna3 = "prod_descricao";
                 variaveis.xColuna4 = "prod_descricao_generica";
                 variaveis.xColuna5 = "''";
                 variaveis.xColuna6 = "''";
                 variaveis.xColuna7 = "''";
                 variaveis.xColuna8 = "''";
                 variaveis.xColuna9 = "''";
    
                 variaveis.xColunaNome1 = "Código";
                 variaveis.xColunaNome2 = "Cód Produto";
                 variaveis.xColunaNome3 = "Descrição";
                 variaveis.xColunaNome4 = "Descrição Genérica";
                 variaveis.xColunaNome5 = "";
                 variaveis.xColunaNome6 = "";
                 variaveis.xColunaNome7 = "";
                 variaveis.xColunaNome8 = "";
                 variaveis.xColunaNome9 = "";
                 variaveis.xColunaTamanho1 = 60;
                 variaveis.xColunaTamanho2 = 80;
                 variaveis.xColunaTamanho3 = 400;
                 variaveis.xColunaTamanho4 = 300;
                 variaveis.xColunaTamanho5 = 0;
                 variaveis.xColunaTamanho6 = 0;
                 variaveis.xColunaTamanho7 = 0;
                 variaveis.xColunaTamanho8 = 0;
                 variaveis.xColunaTamanho9 = 0;
                 variaveis.xColunaStart = "prod_descricao";
                 variaveis.xColunaNomeStart = "Descrição";
                 variaveis.xTabela = "produtos";
                 variaveis.xSql = ""; 
         
                 FpesqPesquisa md = new FpesqPesquisa(null, true);
                             
                 dP.setSize(850, 480); 
                 md.setSize(dP);
                 md.setTitle("Pesquisa Produto - ENTER ou DUPLO CLICK no registro retorna dados.");
                 md.setLocationRelativeTo(null);
                 md.setVisible(true);
                 try
                 {
                     rs = AcessoDados.Selecao("produtos", "*", " where prod_codigo_id = " + md.getRetorno());
                     rs.next();
                     DefaultTableModel tabela = (DefaultTableModel) grDados.getModel(); 
                     tabela.setValueAt(rs.getString("prod_codigo_produto"), grDados.getSelectedRow(), 1);
                  }catch (Exception r) {
                     r.printStackTrace();
                 }
            }
            
            if(grDados.getSelectedColumn() == 7)
            {
               variaveis.xColuna1 = "cfop_codigo_id";
               variaveis.xColuna2 = "cfop_cfop";
               variaveis.xColuna3 = "cfop_descricao";
               variaveis.xColuna4 = "''";
               variaveis.xColuna5 = "''";
               variaveis.xColuna6 = "''";
               variaveis.xColuna7 = "''";
               variaveis.xColuna8 = "''";
               variaveis.xColuna9 = "''";
         
               variaveis.xColunaNome1 = "Código";
               variaveis.xColunaNome2 = "CFOP";
               variaveis.xColunaNome3 = "Descrição";
               variaveis.xColunaNome4 = "";
               variaveis.xColunaNome5 = "";
               variaveis.xColunaNome6 = "";
               variaveis.xColunaNome7 = "";
               variaveis.xColunaNome8 = "";
               variaveis.xColunaNome9 = "";
         
               variaveis.xColunaTamanho1 = 60;
               variaveis.xColunaTamanho2 = 60;
               variaveis.xColunaTamanho3 = 340;
               variaveis.xColunaTamanho4 = 0;
               variaveis.xColunaTamanho5 = 0;
               variaveis.xColunaTamanho6 = 0;
               variaveis.xColunaTamanho7 = 0;
               variaveis.xColunaTamanho8 = 0;
               variaveis.xColunaTamanho9 = 0;
         
               variaveis.xColunaStart = "cfop_descricao";
               variaveis.xColunaNomeStart = "Descrição";
               variaveis.xTabela = "cfop";
               variaveis.xSql = ""; 
         
               FpesqPesquisa md = new FpesqPesquisa(null, true);
               dP.setSize(470, 480); 
               md.setSize(dP);
               md.setTitle("Pesquisa CFOP - ENTER ou DUPLO CLICK no registro retorna dados.");

               md.setLocationRelativeTo(null);
               md.setVisible(true);
                          
               try
               {
                     rs = AcessoDados.Selecao("cfop", "*", " where cfop_codigo_id = " + md.getRetorno());
                     rs.next();
                     String CFOP =rs.getString("cfop_cfop");
                     DefaultTableModel tabela = (DefaultTableModel) grDados.getModel(); 
                     tabela.setValueAt(rs.getString("cfop_cfop"), grDados.getSelectedRow(), 7);
                }catch (Exception r) {
                     r.printStackTrace();
               }

            }
            
        }

    }//GEN-LAST:event_grDadosKeyPressed

    private void grDadosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grDadosKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_grDadosKeyReleased

    private void txtCodVendedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodVendedorFocusLost
        // TODO add your handling code here:
       if(!txtCodVendedor.getText().equals(""))
        {
            String vmCampos = "*";
            String vmCondicao_Consulta = " WHERE func_codigo_id = " + txtCodVendedor.getText();
            try
            {
                rs = AcessoDados.Selecao("funcionarios", vmCampos, vmCondicao_Consulta);
                    if (!rs.next())
                    {
                         JOptionPane.showMessageDialog(null,"Vendedor não cadastrado no sistema");
                         txtCodVendedor.setText(null);
                         txtVendedor.setText(null);
                         txtCodVendedor.requestFocus();
                         return;
                    }
                txtVendedor.setText(rs.getString("func_nome"));
                 rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }else
       {
        txtVendedor.setText("");
       }


    }//GEN-LAST:event_txtCodVendedorFocusLost

    private void btnPesquisaVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaVendedorActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "func_codigo_id";
         variaveis.xColuna2 = "func_nome";
         variaveis.xColuna3 = "func_cargo";
         variaveis.xColuna4 = "''";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Nome";
         variaveis.xColunaNome3 = "Cargo";
         variaveis.xColunaNome4 = "";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 400;
         variaveis.xColunaTamanho3 = 190;
         variaveis.xColunaTamanho4 = 0;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "func_nome";
         variaveis.xColunaNomeStart = "Nome";
         variaveis.xTabela = "funcionarios";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(660, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Funcionário - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);

       txtCodVendedor.setText(null);
       txtCodVendedor.setText((String) md.getRetorno());
       txtCodVendedor.requestFocus();
       if(!txtCodVendedor.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE func_codigo_id = " + txtCodVendedor.getText();
          try
        {
        rs = AcessoDados.Selecao("funcionarios", vmCampos, vmCondicao_Consulta);
        rs.next();
        txtVendedor.setText(rs.getString("func_nome"));
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }

    }//GEN-LAST:event_btnPesquisaVendedorActionPerformed

    private void txtCodVendedor1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodVendedor1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodVendedor1FocusLost

    private void txtCodVendedor2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodVendedor2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodVendedor2FocusLost

    private void btnCancelarFaturamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarFaturamentoActionPerformed
        // TODO add your handling code here:
        if(funcoes.Permissao("003", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
        {
        if (lbID.getText().equals("0"))
        {
            JOptionPane.showMessageDialog(null,"Nenhum pedido selecionado para cancelar faturamento!");
            return;
        }

        if (txtDataFaturamento.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Pedido não foi faturado!");
            return;
        }

       
        try
        {
        String Campos = "*";
        String Condicoes = " INNER JOIN RECEBIMENTO_CONTAS_RECEBER ON (CR_CODIGO_ID = rcr_cr_codigo_id) WHERE CR_NOTA_FISCAL = " + txtNota.getText();
        rs = AcessoDados.Selecao("CONTAS_RECEBER", Campos, Condicoes);
        if(rs.next())
        {
            JOptionPane.showMessageDialog(null,"Existem recebimento contas receber para esse pedido. Cancelamento não permitido.");
            return;
        }
        }catch (Exception e) {
            e.printStackTrace();
        }


        Object[] options = { " Sim ", " Não " };
            int confirmar = JOptionPane.showOptionDialog(null, "Confirma cancelamento de faturamento?", " Mensagem...",JOptionPane.DEFAULT_OPTION, JOptionPane. QUESTION_MESSAGE,null,options, options[0]);
            if(confirmar==1){
                AcertoEstoquemais();// volta valor para o estoque
                //txtDescricao.requestFocus();
                return;
               }

            try
            {
             rs = AcessoDados.Selecao("nota_fiscal", "not_chave_nfe, not_numero_recebimento, not_situacao_nfe", " where not_codigo_id = " + txtNota.getText());
             rs.next();
             String Nota = new File("NF-e/" + rs.getString("not_chave_nfe") +"-nfe.xml").getAbsolutePath(); 
             if(!rs.getString("not_numero_recebimento").equals(""))
             {
                JOptionPane.showMessageDialog(null,"Nota Fiscal já foi transmitida para SEFAZ." + "\n" + "Cancelamento não permitido." + "\n" + "STATUS DA NOTA NA SEFAZ" + "\n" + rs.getString("not_situacao_nfe"));
                return;
             }
             File arquivo;  
             arquivo = new File(Nota);
             arquivo.delete();
            }catch(Exception exerr)
            {
    
            }
            
            try
            {
               
            String  vmCondicaoItem = " not_codigo_id = " + txtNota.getText();
            AcessoDados.Excluir("nota_fiscal", vmCondicaoItem);

            String  vmCondicao = "cr_nota_fiscal = " + txtNota.getText();
            AcessoDados.Excluir("contas_receber", vmCondicao);

            String  vmCondicaoCC = "cc_nota = " + txtNota.getText();
            AcessoDados.Excluir("contas_corrente", vmCondicaoCC);

            //Atualizar Tabela de Pedidos
            String vmCampos_Parametros = " ped_numero_nota_fiscal = NULL ," +
                                         " ped_data_faturamento = NULL, ped_tipo_pedido = 'V - Venda' ";

            String vmCondicao_Alteracao =" ped_codigo_id = " + lbID.getText() ;

            AcessoDados.Alterar("pedidos", vmCampos_Parametros, vmCondicao_Alteracao);
            
          

            }catch (Exception e) {
                e.printStackTrace();
            }
        
        }
       if(!lbID.getText().equals(""))
       {
          String vmCampos = "PEDIDOS.*, FPGTO_DESCRICAO, CPGTO_DESCRICAO, par_nome_razao_social";
          String vmCondicao_Consulta = " LEFT JOIN PARCEIROS ON (PAR_CODIGO_ID = PED_PAR_CODIGO_ID) LEFT JOIN FORMA_DE_PAGAMENTO ON (FPGTO_CODIGO_ID = PED_FPGTO_CODIGO_ID) LEFT JOIN CONDICAO_PAGAMENTO ON (CPGTO_CODIGO_ID =  PED_CPGTO_CODIGO_ID)  WHERE ped_codigo_id = " + lbID.getText();
            try
            {
                    funcoes.RetornarSelecao(rootPane,"PEDIDOS", vmCampos, vmCondicao_Consulta);
                    MontaGrid();
                    somaValores();
                    calculaValores();
                    btnAlterar.requestFocus();
          }catch (Exception e) {
           e.printStackTrace();
        }
        }
    }//GEN-LAST:event_btnCancelarFaturamentoActionPerformed

    private void txtCodEmpresaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodEmpresaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== 114) //tecla F3 para pesquisa
            btnPesquisaEmpresaActionPerformed(null);

    }//GEN-LAST:event_txtCodEmpresaKeyPressed

    private void txtCodClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodClienteKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== 114) //tecla F3 para pesquisa
            btnPesquisaClienteActionPerformed(null);

    }//GEN-LAST:event_txtCodClienteKeyPressed

    private void txtCodVendedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodVendedorKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== 114) //tecla F3 para pesquisa
            btnPesquisaVendedorActionPerformed(null);
        
    }//GEN-LAST:event_txtCodVendedorKeyPressed

    private void btnDuplicarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDuplicarPedidoActionPerformed
        // TODO add your handling code here:
        if (lbID.getText().equals("0"))
        {
            JOptionPane.showMessageDialog(null,"Nenhum pedido selecionado para duplicação!");
            return;
        }
         Object[] options = { " Sim ", " Não " };
            int confirmar = JOptionPane.showOptionDialog(null, "Confirma duplicação do pedido?", " Mensagem...",JOptionPane.DEFAULT_OPTION, JOptionPane. QUESTION_MESSAGE,null,options, options[0]);
            if(confirmar==1){
                return;
               }
         Date data = new Date(System.currentTimeMillis());
         SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
         txtDataEmissao.setText(formatarDate.format(data));
         txtDataFaturamento.setText("");
         lbID.setText("0");
         txtNota.setText("");
         ddlTipoPedido.setSelectedIndex(0);
         btnSalvarActionPerformed(null);
         funcoes.HabilitaCampos(rootPane, false);
         JOptionPane.showMessageDialog(null,"Pedido duplicado com sucesso!"+"\n"+"Número pedido gerado: "+lbID.getText());
               
       
    }//GEN-LAST:event_btnDuplicarPedidoActionPerformed

    private void ddlTipoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlTipoPedidoActionPerformed
        // TODO add your handling code here:
        //if(ddlTipoPedido.getSelectedIndex() == 6 || ddlTipoPedido.getSelectedIndex() == 7)
        //{
        //    JOptionPane.showMessageDialog(null,"Tipo de Pedido Inválido");
        //    ddlTipoPedido.setSelectedIndex(0);
        //}
    }//GEN-LAST:event_ddlTipoPedidoActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
        if (funcoes.Permissao("005", variaveis.usuario_id, variaveis.usuario_super, this.getTitle())) {
            
        }
    }//GEN-LAST:event_btnImprimirActionPerformed
    public String RetornaPesoProduto(String vCodigoProduto)
    {

        String VRetorno = "";
        String vmCampos = " prod_peso_liquido, prod_peso_bruto ";
        String vmCondicao_Consulta = " where prod_codigo_id = " + vCodigoProduto;
            try
            {
                rs = AcessoDados.Selecao("produtos", vmCampos, vmCondicao_Consulta);
                if (rs.next())
                {
                    VRetorno = rs.getString("prod_peso_liquido").replace(".", ",") + "," + rs.getString("prod_peso_bruto").replace(".", ",");
                }
                rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }

        return VRetorno;
    }
    public void MontaColunasGrid()
    {
        grDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {"","* Código","Produto","UM","QTDE","Vlr Unit.","Desc.%","CFOP","CST","%","ICMS","%","IPI","Subst.","TOTAL","","lote"
            }) { boolean[]  canEdit = new boolean [] {
                false, true, false, false, true, true, true, true, true, true, false, true, false, true,false,true,false
            };
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

        });

        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();


        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);

        grDados.getColumnModel().getColumn(1).setPreferredWidth(45);  //Codigo Produto
        grDados.getColumnModel().getColumn(2).setPreferredWidth(230); //Produto
        grDados.getColumnModel().getColumn(3).setPreferredWidth(5);  //UM
        grDados.getColumnModel().getColumn(4).setPreferredWidth(30);  //Qtde
        grDados.getColumnModel().getColumn(5).setPreferredWidth(40);  //Valor Unitario
        grDados.getColumnModel().getColumn(6).setPreferredWidth(20);  //Desconto
        grDados.getColumnModel().getColumn(7).setPreferredWidth(20);  //Cfop
        grDados.getColumnModel().getColumn(8).setPreferredWidth(10);  //Cst
        grDados.getColumnModel().getColumn(9).setPreferredWidth(8);  //% Icms
        grDados.getColumnModel().getColumn(10).setPreferredWidth(30);  // Icms
        grDados.getColumnModel().getColumn(11).setPreferredWidth(8);  //%ipi
        grDados.getColumnModel().getColumn(12).setPreferredWidth(30);  //ipi
        grDados.getColumnModel().getColumn(13).setPreferredWidth(20); //icms sub
        grDados.getColumnModel().getColumn(14).setPreferredWidth(40); //Total
        grDados.getColumnModel().getColumn(15).setPreferredWidth(10); //Botao


        TableColumn codigoColumn = grDados.getColumnModel().getColumn(0);
        TableColumn LoteColumn = grDados.getColumnModel().getColumn(16);

        codigoColumn.setMinWidth(0);
        codigoColumn.setMaxWidth(0);

        LoteColumn.setMinWidth(0);
        LoteColumn.setMaxWidth(0);

        //grDados.getColumnModel().getColumn(1).setCellRenderer(esquerda);
        //grDados.getColumnModel().getColumn(4).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(5).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(6).setCellRenderer(direita);
        grDados.getColumnModel().getColumn(7).setCellRenderer(centralizado);
        grDados.getColumnModel().getColumn(8).setCellRenderer(centralizado);
        //grDados.getColumnModel().getColumn(9).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(10).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(11).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(12).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(13).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(14).setCellRenderer(direita);

        ButtonColumn buttonColumn = new ButtonColumn(grDados, 15);


    }

  public  void   TableEnterAction(final JTable ao_table) {
      InputMap
      im = ao_table.getInputMap(ao_table.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
      KeyStroke lo_key_enter = KeyStroke.getKeyStroke("ENTER");
      im.put(lo_key_enter, im.get(KeyStroke.getKeyStroke(KeyEvent.VK_GREATER, 0)));
      Action
      enterAction = new AbstractAction() {
                public  void    actionPerformed(ActionEvent e)
                {
                    // Faz o que quiser.
                    int Coluna = ao_table.getSelectedColumn();
                    int linha = ao_table.getSelectedRow();

                    int c =  ao_table.getSelectedRow();
                    int d = ao_table.getRowCount();
                    if(ao_table.getSelectedColumn() == 14)
                    {
                    int xx1 = linha + 1;
                    int xx2 = ao_table.getRowCount();
                    if(xx1 == xx2)
                    {

                        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)ao_table.getModel();
                           dtm.addRow(new Object[]{"","","","","","","","","","","","","","","","",""});
                           Coluna = ao_table.getSelectedColumn();
                           linha++;
                           ao_table.setCellSelectionEnabled(true);
                           //jTable1.setSurrendersFocusOnKeystroke(true);
                           ao_table.setRowSelectionInterval(linha, linha);
                           ao_table.setColumnSelectionInterval(1, 1);
                           //ao_table.editCellAt(linha, 1);
                    }else
                    {
                        ao_table.setCellSelectionEnabled(true);
                        //jTable1.setSurrendersFocusOnKeystroke(true);
                        ao_table.setRowSelectionInterval(linha + 1, linha + 1);
                        ao_table.setColumnSelectionInterval(1, 1);
                        //ao_table.editCellAt(linha + 1, 1);
                    }

                    }else
                    {
                    
                    
                    ao_table.setCellSelectionEnabled(true);
                    ao_table.setColumnSelectionInterval(Coluna + 1, Coluna + 1);
                    ao_table.editCellAt(linha, Coluna + 1);
                    String CodigoProduto = ao_table.getValueAt(linha, 1).toString();


                    if(ao_table.getSelectedColumn() == 5) //qtde coluna 4 saida 5
                    {
                        try
                        {
                           double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString().replace(".", "").replace(",", "."));
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("1", ao_table.getSelectedRow(), 4); // qtde
                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"T"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"T"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"T"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }

                    if(ao_table.getSelectedColumn() == 6) //valor unit coluna 5 saida 6
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString().replace(".", "").replace(",", "."));
                         String newValor = funcoes.formataMoeda(ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString(),"T");
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 5); // valor
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,01", ao_table.getSelectedRow(), 5); // valor

                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }


                    if(ao_table.getSelectedColumn() == 7) //DESCONTO unit coluna 6 saida 7
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString().replace(".", "").replace(",", "."));
                         String newValor = funcoes.formataPercentual(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString());
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 6); // desconto
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 6); // desconto
                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }

                    if(ao_table.getSelectedColumn() == 8) //cfop saida 7 / 8
                    {
                        String CFOP = ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString();
                        if(!CFOP.equals("") && !CFOP.equals("0"))
                        if(!CFOP.contains("."))
                        {
                        try
                        {
                            CFOP = ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString().substring(0,1) + ".";
                            CFOP += ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString().substring(1,4);
                        }catch (Exception ercf)
                        {
                            CFOP = "";
                        }
                        }else
                        {
                            CFOP = ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString();
                        }


                        if(CFOP.equals(""))
                        {
                            ao_table.setValueAt("5.102", ao_table.getSelectedRow(), 7); // cfop
                            CFOP = "5.102";
                        }
                        String vmCampos = "*";
                        String vmCondicao_Consulta = " WHERE cfop_cfop = '" + CFOP + "'";
                        try
                        {
                           rs = AcessoDados.Selecao("cfop", vmCampos, vmCondicao_Consulta);
                           if (!rs.next())
                           {
                              JOptionPane.showMessageDialog(null,"CFOP não cadastrado no sistema!");
                              ao_table.setValueAt("", linha, 7); //cfop
                              ao_table.setColumnSelectionInterval(7, 7);
                              ao_table.setRowSelectionInterval(linha, linha);
                              //ao_table.editCellAt(linha, 7);

                              return;
                           }
                           rs.close();
                           ao_table.setValueAt(CFOP, ao_table.getSelectedRow(), 7); // cfop
                           }catch (Exception ecfop) {
                              ecfop.printStackTrace();
                           }
                    }

                    if(ao_table.getSelectedColumn() == 9) //cst coluna 8 saida 9
                    {
                         String CST = ao_table.getValueAt(ao_table.getSelectedRow(), 8).toString();
                         if(CST.equals(""))
                             CST = "000";
                         if(!CST.equals("000")
                         && !CST.equals("010")
                         && !CST.equals("020")
                         && !CST.equals("030")
                         && !CST.equals("040")
                         && !CST.equals("041")
                         && !CST.equals("050")
                         && !CST.equals("051")
                         && !CST.equals("060")
                         && !CST.equals("070")
                         && !CST.equals("090")
                         && !CST.equals("100")
                         && !CST.equals("110")
                         && !CST.equals("120")
                         && !CST.equals("130")
                         && !CST.equals("140")
                         && !CST.equals("141")
                         && !CST.equals("150")
                         && !CST.equals("151")
                         && !CST.equals("160")
                         && !CST.equals("170")
                         && !CST.equals("190"))
                         {
                             JOptionPane.showMessageDialog(null,"CST Inválida.");
                             ao_table.setValueAt("", linha, 8); //cfop
                             ao_table.setColumnSelectionInterval(8, 8);
                             ao_table.setRowSelectionInterval(linha, linha);
                             //ao_table.editCellAt(linha, 8);
                             return;
                         }
                         
                         ao_table.setValueAt(CST, linha, 8); //Cst

                    }


                    if(ao_table.getSelectedColumn() == 10) //%icms coluna 9 saida 10
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 9).toString().replace(",", "."));
                         String newValor = funcoes.formataPercentual(ao_table.getValueAt(ao_table.getSelectedRow(), 9).toString());
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 9); // %icms
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 9); // %icm
                        }
                  
                         if(ao_table.getValueAt(linha, 8).equals("060"))
                         {
                              ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 9); // %icm
                         }
                        vmAliqICMS = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 9).toString().replace(",", "."));
                        vmAliqIPI = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 11).toString().replace(",", "."));
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }

                    if(ao_table.getSelectedColumn() == 12) //%ipi coluna 11 saida 12
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 11).toString().replace(",", "."));
                         String newValor = funcoes.formataPercentual(ao_table.getValueAt(ao_table.getSelectedRow(), 11).toString());
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 11); // %icms
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 11); // %icm
                        }
                        vmAliqICMS = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 9).toString().replace(",", "."));
                        vmAliqIPI = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 11).toString().replace(",", "."));
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }


                    if(ao_table.getSelectedColumn() == 14) //subst coluna 13 saida 14
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 13).toString().replace(".", "").replace(",", "."));
                         String newValor = funcoes.formataMoeda(ao_table.getValueAt(ao_table.getSelectedRow(), 13).toString(),"T");
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 13); // valor
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 13); // valor
                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }
                   
                    if(!CodigoProduto.equals(""))
                    {
                        if(ao_table.getSelectedColumn() == 2) //Produto
                        {
                        //Buscando Produto
                        String vmCampos = "*";
                        String vmCondicao_Consulta = " inner join unidade_de_medida on (prod_unid_codigo_id = unid_codigo_id) WHERE prod_codigo_produto = '" + CodigoProduto + "'";
                        try
                        {
                          rs = AcessoDados.Selecao("produtos", vmCampos, vmCondicao_Consulta);
                          if (!rs.next())
                          {
                              JOptionPane.showMessageDialog(null,"Produto não cadastrado no sistema");
                              ao_table.setValueAt("", linha, 1); //Codigo Produto
                              ao_table.setValueAt("", linha, 2); // DescriçãoProduto
                              ao_table.setValueAt("", linha, 3); // Unidade Medida
                              ao_table.setValueAt("", linha, 0); // ID Produto
                              ao_table.setValueAt("", linha, 8); // cst
                              ao_table.setValueAt("", linha, 9); // %icm
                              ao_table.setValueAt("", linha, 11); // %ipi
                              ao_table.setValueAt("", linha, 5); // %venda
                              ao_table.setValueAt("", linha, 6); // %desconto
                              ao_table.setValueAt("", linha, 13); // substituicao
                              ao_table.setValueAt("", linha, 14); // total


                              ao_table.setColumnSelectionInterval(1, 1);
                              return;
                          }
                             ao_table.setValueAt("0", linha, 16); // Lote
                             ao_table.setValueAt(rs.getString("prod_codigo_produto"), linha, 1); // Codigo Produto
                             ao_table.setValueAt(rs.getString("prod_descricao"), linha, 2); // DescriçãoProduto
                             ao_table.setValueAt(rs.getString("unid_unidade"), linha, 3); // Unidade Medida
                             ao_table.setValueAt(rs.getString("prod_codigo_id"), linha, 0); // ID Produto
                             ao_table.setValueAt(rs.getString("prod_cst"), linha, 8); // cst
                             double pVenda = rs.getDouble("prod_preco_venda");
                             if(pVenda > 0) ao_table.setValueAt(funcoes.formataMoeda(rs.getString("prod_preco_venda"),"T"), linha, 5); // perco venda
                             ao_table.setValueAt(funcoes.formataPercentual(rs.getString("prod_icms").replace(".", ",")), linha, 9); // %icm
                             ao_table.setValueAt(funcoes.formataPercentual(rs.getString("prod_aliq_de_ipi").replace(".", ",")), linha, 11); // %ipi

                             vmAliqICMS = rs.getDouble("PROD_ICMS");
                             vmAliqIPI = rs.getDouble("prod_aliq_de_ipi");
                             vmAliqDDIF = rs.getDouble("prod_aliq_diferenciada_icms");
                             vmREDUCAOICMS = rs.getDouble("prod_reducao_icms");

                             rs.close();
                         }catch (Exception r) {
                              r.printStackTrace();
                        }
                        }

                        int nCodigo = 0;
                        //verifica duplicidade de codigo
                        for(int i = 0; i <= grDados.getRowCount() - 1; i++)
                        {
                        String XCodigo = ao_table.getValueAt(i, 1).toString();
                        if(XCodigo.equals(CodigoProduto))
                        {
                            nCodigo++;
                        }
                        if(nCodigo > 1)
                        {
                              JOptionPane.showMessageDialog(null,"Produto já lançado...");
                              ao_table.setValueAt("", linha, 1); //Codigo Produto
                              ao_table.setValueAt("", linha, 2); // DescriçãoProduto
                              ao_table.setValueAt("", linha, 3); // Unidade Medida
                              ao_table.setValueAt("", linha, 0); // ID Produto
                              ao_table.setValueAt("", linha, 8); // cst
                              ao_table.setValueAt("", linha, 9); // %icm
                              ao_table.setValueAt("", linha, 11); // %ipi
                              ao_table.setValueAt("", linha, 5); // %venda
                              ao_table.setValueAt("", linha, 6); // %desconto
                              ao_table.setValueAt("", linha, 13); // substituicao
                              ao_table.setValueAt("", linha, 14); // total
                              ao_table.setColumnSelectionInterval(1, 1);
                              return;
                        }
                        }
                        }else
                        {
                          javax.swing.table.DefaultTableModel Ex = (javax.swing.table.DefaultTableModel)ao_table.getModel();
                          Ex.removeRow(ao_table.getSelectedRow());
                          ao_table.transferFocus();
                          return;
                        }
                    }
                }
        };

        ao_table.getActionMap().put(im.get(lo_key_enter), enterAction);
    }


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmPedido dialog = new FrmPedido(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelarFaturamento;
    private javax.swing.JButton btnDuplicarPedido;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnNFE;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisaCliente;
    private javax.swing.JButton btnPesquisaCondicaoPagamento;
    private javax.swing.JButton btnPesquisaEmpresa;
    private javax.swing.JButton btnPesquisaVendedor;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvar1;
    private javax.swing.JComboBox ddlTipoPedido;
    private javax.swing.JTable grDados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JTextField jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbItem;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCodCliente;
    private javax.swing.JTextField txtCodCondicaoPagamento;
    private javax.swing.JTextField txtCodEmpresa;
    private javax.swing.JTextField txtCodVendedor;
    private javax.swing.JTextField txtCodVendedor1;
    private javax.swing.JTextField txtCodVendedor2;
    private javax.swing.JTextField txtCondicaoPagamento;
    private javax.swing.JFormattedTextField txtDataEmissao;
    private javax.swing.JFormattedTextField txtDataFaturamento;
    private javax.swing.JTextField txtDescontoDinheiro;
    private javax.swing.JTextField txtDescontoPorcent;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtNota;
    private javax.swing.JTextField txtVendedor;
    // End of variables declaration//GEN-END:variables

}
