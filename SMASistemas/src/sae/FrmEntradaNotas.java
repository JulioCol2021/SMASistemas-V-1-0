/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmPedido.java
 *
 * Created on 20/02/2010, 15:23:17
 */

package sae;

import Classes.claAcessoDados;
import Classes.claFuncoes;
import Classes.claVariaveis;
import RegraNF.claNotaPadrao;
import com.lowagie.text.Element;
import de.hunsicker.jalopy.swing.BracesSettingsPage;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.TabExpander;
import javax.swing.table.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.text.DecimalFormat;
import java.util.*;

import javax.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.JTextComponent;
import javax.swing.text.MaskFormatter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXParseException;
/**
 *
 * @author thiago
 */
public class FrmEntradaNotas extends javax.swing.JDialog {
    /** Creates new form FrmPedido */
    claVariaveis variaveis = new claVariaveis();
    claAcessoDados AcessoDados = new claAcessoDados();
    claFuncoes funcoes = new claFuncoes();
    claNotaPadrao CalculaNFPadrao = new claNotaPadrao();
    private String vm_tipo_end, vm_base_calculo_icms_TELA;
    private ResultSet rs;
    private ResultSet rsLote;
    private double vmAliqICMS, vmAliqIPI, vmAliqICMSSUB, vmAliqDDIF, vmREDUCAOICMS;
    private DefaultTableModel dtm = new DefaultTableModel();
    private String vDescricaoProduto;
    Double vdiferenca = 0.00 ;
    Dimension dP = new Dimension(); 
    
            

    public FrmEntradaNotas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        funcoes.F_AtribuirClasse(rootPane);
        btnSalvar1.setFocusTraversalKeysEnabled(false);
        btnNovo.setFocusTraversalKeysEnabled(false);
        btnSalvar.setFocusTraversalKeysEnabled(false);
        TableEnterAction(grDados);
        grDados.setDefaultRenderer(Object.class, new TabelaItemPedido());
        //grDados.setDefaultRenderer(Object.class, new TabelaItemPedido());
        MontaColunasGrid();
        btnExcluir.setVisible(false);
              
        grParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {"Vencimento","Parcela"
            }) { boolean[]  canEdit = new boolean [] {
                false, false
            };
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

        });
        //Pega o tamanho da tela
        //Toolkit toolkit = Toolkit.getDefaultToolkit();
        //Dimension screenSize = toolkit.getScreenSize();

        //Calcula a posição do frame a partir da resolucao usada
        //int x = (screenSize.width - this.getWidth()) / 2;
        //int y = (screenSize.height - this.getHeight()) / 2;

        //Define a posicao (centralizada)
        //this.setLocation(x, y);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnSalvar1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnSair = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnPesquisar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnXML = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        lbStatus = new javax.swing.JLabel();
        lbItem = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grDados = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFatura = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNota = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDataEmissao = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDataEntrada = new javax.swing.JFormattedTextField();
        jLabel26 = new javax.swing.JLabel();
        txtTotalNota = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtCodEmpresa = new javax.swing.JTextField();
        btnPesquisaEmpresa = new javax.swing.JButton();
        txtEmpresa = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodCliente = new javax.swing.JTextField();
        btnPesquisaCliente = new javax.swing.JButton();
        txtCliente = new javax.swing.JTextField();
        lbID = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtOC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtCodFormaPagamento = new javax.swing.JTextField();
        btnPesquisaFormaPagamento = new javax.swing.JButton();
        txtFormaPagamento = new javax.swing.JTextField();
        txtCondicaoPagamento = new javax.swing.JTextField();
        btnPesquisaCondicaoPagamento = new javax.swing.JButton();
        txtCodCondicaoPagamento = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtBancoID = new javax.swing.JTextField();
        btnPesquisaBancoID = new javax.swing.JButton();
        txtBancoDescricao = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtBaseICMS = new javax.swing.JTextField();
        txtFrete = new javax.swing.JTextField();
        txtICMS = new javax.swing.JTextField();
        txtSeguro = new javax.swing.JTextField();
        txtDescontos = new javax.swing.JTextField();
        txtBaseICMST = new javax.swing.JTextField();
        txtICMST = new javax.swing.JTextField();
        txtDespesas = new javax.swing.JTextField();
        txtIPI = new javax.swing.JTextField();
        txtTotalProdutos = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        grParcelas = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Entrada de Notas");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        btnSalvar1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        btnSalvar1.setText("Digitar Itens");
        btnSalvar1.setToolTipText("");
        btnSalvar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalvar1.setEnabled(false);
        btnSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar1ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Sair.gif"))); // NOI18N
        btnSair.setBorderPainted(false);
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/novo.gif"))); // NOI18N
        btnNovo.setToolTipText("Incluir");
        btnNovo.setBorderPainted(false);
        btnNovo.setPreferredSize(new java.awt.Dimension(90, 26));
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/alterar.gif"))); // NOI18N
        btnAlterar.setToolTipText("Alterar");
        btnAlterar.setBorderPainted(false);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir.gif"))); // NOI18N
        btnExcluir.setToolTipText("Excluir");
        btnExcluir.setBorderPainted(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Localizar.gif"))); // NOI18N
        btnPesquisar.setToolTipText("Pesquisar");
        btnPesquisar.setBorderPainted(false);
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar.gif"))); // NOI18N
        btnSalvar.setToolTipText("Salvar");
        btnSalvar.setBorderPainted(false);
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cancelar.gif"))); // NOI18N
        btnCancelar.setToolTipText("Cancelar");
        btnCancelar.setBorderPainted(false);
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnXML.setFont(new java.awt.Font("Dialog", 1, 8)); // NOI18N
        btnXML.setText("XML");
        btnXML.setToolTipText("Importar XML");
        btnXML.setBorderPainted(false);
        btnXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXMLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnXML, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnNovo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE)
                                .addComponent(btnAlterar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE)
                                .addComponent(btnSair, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, Short.MAX_VALUE))
                            .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXML, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        lbStatus.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        lbStatus.setForeground(new java.awt.Color(153, 153, 153));
        lbStatus.setText("Registro ");
        lbStatus.setToolTipText("");
        jToolBar2.add(lbStatus);

        lbItem.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        lbItem.setForeground(new java.awt.Color(51, 102, 255));
        lbItem.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbItem.setText("00");
        lbItem.setToolTipText("");

        grDados.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        grDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        grDados.setToolTipText("");
        grDados.getTableHeader().setResizingAllowed(false);
        grDados.getTableHeader().setReorderingAllowed(false);
        grDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grDadosMouseClicked(evt);
            }
        });
        grDados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                grDadosFocusGained(evt);
            }
        });
        grDados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                grDadosKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grDadosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(grDados);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel13.setText("Itens Pedido:---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        jLabel13.setToolTipText("");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Nota:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel1.setText("N° Fatura:");
        jLabel1.setToolTipText("");

        txtFatura.setColumns(15);
        txtFatura.setEnabled(false);
        txtFatura.setName("ent_numero_fatura");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel3.setText("Nº Nota:");
        jLabel3.setToolTipText("");

        txtNota.setColumns(10);
        txtNota.setEnabled(false);
        txtNota.setName("ent_numero_nota");
        txtNota.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNotaFocusLost(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel8.setText("Serie:");
        jLabel8.setToolTipText("");

        txtSerie.setColumns(2);
        txtSerie.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSerie.setEnabled(false);
        txtSerie.setName("ent_serie_nota");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel10.setText("Data de Emissão:");
        jLabel10.setToolTipText("");

        try {
            txtDataEmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataEmissao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataEmissao.setToolTipText("");
        txtDataEmissao.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtDataEmissao.setEnabled(false);
        txtDataEmissao.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDataEmissao.setName("ent_data_emissao"); // NOI18N
        txtDataEmissao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDataEmissaoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataEmissaoFocusLost(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel9.setText("Data de Entrada:");
        jLabel9.setToolTipText("");

        txtDataEntrada.setEditable(false);
        txtDataEntrada.setForeground(new java.awt.Color(0, 0, 0));
        txtDataEntrada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataEntrada.setToolTipText("");
        txtDataEntrada.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtDataEntrada.setFocusable(false);
        txtDataEntrada.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDataEntrada.setName("ent_data_entrada"); // NOI18N
        txtDataEntrada.setRequestFocusEnabled(false);

        jLabel26.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel26.setText("Valor Total Nota:");
        jLabel26.setToolTipText("");

        txtTotalNota.setEditable(false);
        txtTotalNota.setToolTipText("Valor");
        txtTotalNota.setFocusable(false);
        txtTotalNota.setName("ent_total_nota");
        txtTotalNota.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNota, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFatura, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalNota, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTotalNota, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtFatura, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtDataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jLabel8)
                        .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(txtNota, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(txtDataEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel11.setText("Empresa:");
        jLabel11.setToolTipText("");

        txtCodEmpresa.setColumns(8);
        txtCodEmpresa.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodEmpresa.setToolTipText("Código");
        txtCodEmpresa.setEnabled(false);
        txtCodEmpresa.setName("ent_emp_codigo_id"); // NOI18N
        txtCodEmpresa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodEmpresaFocusLost(evt);
            }
        });
        txtCodEmpresa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodEmpresaKeyPressed(evt);
            }
        });

        btnPesquisaEmpresa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaEmpresa.setToolTipText("");
        btnPesquisaEmpresa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaEmpresa.setEnabled(false);
        btnPesquisaEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaEmpresaActionPerformed(evt);
            }
        });

        txtEmpresa.setEditable(false);
        txtEmpresa.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtEmpresa.setForeground(new java.awt.Color(102, 102, 255));
        txtEmpresa.setToolTipText("");
        txtEmpresa.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtEmpresa.setFocusable(false);
        txtEmpresa.setName(""); // NOI18N

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel2.setText("Fornecedor:");
        jLabel2.setToolTipText("");

        txtCodCliente.setColumns(8);
        txtCodCliente.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodCliente.setToolTipText("Código");
        txtCodCliente.setEnabled(false);
        txtCodCliente.setName("ent_par_codigo_id"); // NOI18N
        txtCodCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodClienteFocusLost(evt);
            }
        });
        txtCodCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodClienteKeyPressed(evt);
            }
        });

        btnPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaCliente.setToolTipText("");
        btnPesquisaCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaCliente.setEnabled(false);
        btnPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaClienteActionPerformed(evt);
            }
        });

        txtCliente.setEditable(false);
        txtCliente.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCliente.setForeground(new java.awt.Color(102, 102, 255));
        txtCliente.setToolTipText("");
        txtCliente.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtCliente.setFocusable(false);
        txtCliente.setName(""); // NOI18N

        lbID.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        lbID.setForeground(new java.awt.Color(51, 102, 255));
        lbID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbID.setText("0");
        lbID.setToolTipText("ID");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel12.setText("Sequencia:");
        jLabel12.setToolTipText("");

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel14.setText("N° O.C:");
        jLabel14.setToolTipText("");

        txtOC.setColumns(8);
        txtOC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtOC.setToolTipText("Número");
        txtOC.setEnabled(false);
        txtOC.setName("ent_numero_oc");
        txtOC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOCFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel11))
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCodEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPesquisaEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btnPesquisaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                    .addComponent(txtCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtOC, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPesquisaEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbID)
                        .addComponent(jLabel12))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(txtOC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel6.setText("Forma de Pgto:");
        jLabel6.setToolTipText("");

        txtCodFormaPagamento.setColumns(8);
        txtCodFormaPagamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodFormaPagamento.setToolTipText("Código");
        txtCodFormaPagamento.setEnabled(false);
        txtCodFormaPagamento.setName("ent_fpgto_codigo_id"); // NOI18N
        txtCodFormaPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodFormaPagamentoFocusLost(evt);
            }
        });
        txtCodFormaPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodFormaPagamentoKeyPressed(evt);
            }
        });

        btnPesquisaFormaPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaFormaPagamento.setToolTipText("Pesquisa Forma Pgto");
        btnPesquisaFormaPagamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaFormaPagamento.setEnabled(false);
        btnPesquisaFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaFormaPagamentoActionPerformed(evt);
            }
        });

        txtFormaPagamento.setEditable(false);
        txtFormaPagamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtFormaPagamento.setForeground(new java.awt.Color(102, 102, 255));
        txtFormaPagamento.setToolTipText("");
        txtFormaPagamento.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtFormaPagamento.setFocusable(false);
        txtFormaPagamento.setName(""); // NOI18N

        txtCondicaoPagamento.setEditable(false);
        txtCondicaoPagamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCondicaoPagamento.setForeground(new java.awt.Color(102, 102, 255));
        txtCondicaoPagamento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCondicaoPagamento.setToolTipText("");
        txtCondicaoPagamento.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtCondicaoPagamento.setFocusable(false);
        txtCondicaoPagamento.setName(""); // NOI18N

        btnPesquisaCondicaoPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaCondicaoPagamento.setToolTipText("Pesquisa Condições");
        btnPesquisaCondicaoPagamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaCondicaoPagamento.setEnabled(false);
        btnPesquisaCondicaoPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaCondicaoPagamentoActionPerformed(evt);
            }
        });

        txtCodCondicaoPagamento.setColumns(8);
        txtCodCondicaoPagamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodCondicaoPagamento.setToolTipText("Código");
        txtCodCondicaoPagamento.setEnabled(false);
        txtCodCondicaoPagamento.setName("ent_cpgto_codigo_id"); // NOI18N
        txtCodCondicaoPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodCondicaoPagamentoFocusLost(evt);
            }
        });
        txtCodCondicaoPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodCondicaoPagamentoKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel5.setText("Condição Pgto:");
        jLabel5.setToolTipText("");

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel18.setText("Banco:");
        jLabel18.setToolTipText("");
        jLabel18.setName(""); // NOI18N

        txtBancoID.setColumns(8);
        txtBancoID.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtBancoID.setToolTipText("Código");
        txtBancoID.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtBancoID.setEnabled(false);
        txtBancoID.setName("ent_banc_codigo_id"); // NOI18N
        txtBancoID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBancoIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBancoIDFocusLost(evt);
            }
        });
        txtBancoID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBancoIDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBancoIDKeyReleased(evt);
            }
        });

        btnPesquisaBancoID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaBancoID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaBancoID.setEnabled(false);
        btnPesquisaBancoID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaBancoIDActionPerformed(evt);
            }
        });
        btnPesquisaBancoID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnPesquisaBancoIDFocusLost(evt);
            }
        });

        txtBancoDescricao.setEditable(false);
        txtBancoDescricao.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtBancoDescricao.setForeground(new java.awt.Color(102, 102, 255));
        txtBancoDescricao.setToolTipText("");
        txtBancoDescricao.setFocusable(false);
        txtBancoDescricao.setName(""); // NOI18N
        txtBancoDescricao.setRequestFocusEnabled(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Impostos:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10))); // NOI18N

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel16.setText("Base Calculo ICMS:");
        jLabel16.setToolTipText("");

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel17.setText("Valor ICMS:");
        jLabel17.setToolTipText("");

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel19.setText("Base Calculo ICMS ST:");
        jLabel19.setToolTipText("");

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel20.setText("Valor ICMS ST:");
        jLabel20.setToolTipText("");

        jLabel21.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel21.setText("Valor Total Produtos:");
        jLabel21.setToolTipText("");

        jLabel22.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel22.setText("Valor Frete:");
        jLabel22.setToolTipText("");

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel23.setText("Valor Seguro:");
        jLabel23.setToolTipText("");

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel15.setText("Desconto:");
        jLabel15.setToolTipText("");

        jLabel24.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel24.setText("Outras Despesas:");
        jLabel24.setToolTipText("");

        jLabel25.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel25.setText("Valor Total IPI:");
        jLabel25.setToolTipText("");

        txtBaseICMS.setColumns(12);
        txtBaseICMS.setEditable(false);
        txtBaseICMS.setToolTipText("Valor");
        txtBaseICMS.setFocusable(false);
        txtBaseICMS.setName("ent_base_calculo_icms");
        txtBaseICMS.setRequestFocusEnabled(false);

        txtFrete.setColumns(12);
        txtFrete.setToolTipText("Valor");
        txtFrete.setEnabled(false);
        txtFrete.setName("ent_valor_frete");
        txtFrete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFreteFocusLost(evt);
            }
        });

        txtICMS.setColumns(12);
        txtICMS.setEditable(false);
        txtICMS.setToolTipText("Valor");
        txtICMS.setFocusable(false);
        txtICMS.setName("ent_valor_icms");
        txtICMS.setRequestFocusEnabled(false);

        txtSeguro.setColumns(12);
        txtSeguro.setToolTipText("Valor");
        txtSeguro.setEnabled(false);
        txtSeguro.setName("ent_valor_seguro");
        txtSeguro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSeguroFocusLost(evt);
            }
        });

        txtDescontos.setColumns(12);
        txtDescontos.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDescontos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescontos.setToolTipText("Valor");
        txtDescontos.setEnabled(false);
        txtDescontos.setName("ent_valor_desconto"); // NOI18N
        txtDescontos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontosFocusLost(evt);
            }
        });

        txtBaseICMST.setColumns(12);
        txtBaseICMST.setEditable(false);
        txtBaseICMST.setToolTipText("Valor");
        txtBaseICMST.setFocusable(false);
        txtBaseICMST.setName("ent_base_calculo_st");
        txtBaseICMST.setRequestFocusEnabled(false);

        txtICMST.setColumns(12);
        txtICMST.setEditable(false);
        txtICMST.setToolTipText("Valor");
        txtICMST.setFocusable(false);
        txtICMST.setName("ent_valor_st");
        txtICMST.setRequestFocusEnabled(false);

        txtDespesas.setColumns(12);
        txtDespesas.setToolTipText("Valor");
        txtDespesas.setEnabled(false);
        txtDespesas.setName("ent_valor_outras_despesas");
        txtDespesas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDespesasFocusLost(evt);
            }
        });

        txtIPI.setColumns(12);
        txtIPI.setEditable(false);
        txtIPI.setToolTipText("Valor");
        txtIPI.setFocusable(false);
        txtIPI.setName("ent_valor_ipi");
        txtIPI.setRequestFocusEnabled(false);

        txtTotalProdutos.setColumns(12);
        txtTotalProdutos.setEditable(false);
        txtTotalProdutos.setToolTipText("Valor");
        txtTotalProdutos.setFocusable(false);
        txtTotalProdutos.setName("ent_total_produtos");
        txtTotalProdutos.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtBaseICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel17)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSeguro, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBaseICMST, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescontos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel24)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtICMST, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDespesas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel25)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtIPI, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel17)
                                .addComponent(txtBaseICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel16)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel19)
                                .addComponent(jLabel20)
                                .addComponent(jLabel21)
                                .addComponent(txtICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel22)
                                .addComponent(jLabel23)
                                .addComponent(txtFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSeguro, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel25)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(jLabel15))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtBaseICMST, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescontos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtICMST, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtTotalProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIPI, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Parcelas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10))); // NOI18N

        grParcelas.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        grParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        grParcelas.setToolTipText("");
        grParcelas.setFocusable(false);
        grParcelas.setName(""); // NOI18N
        grParcelas.setRequestFocusEnabled(false);
        jScrollPane4.setViewportView(grParcelas);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel7.setText("Parcela(s)");
        jLabel7.setToolTipText("");

        jLabel27.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 0, 0));
        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/warning.gif"))); // NOI18N
        jLabel27.setText("Colunas com * - F3 - Pesquisa");
        jLabel27.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(93, 93, 93)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtBancoID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnPesquisaBancoID, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(txtCodFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtCodCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(btnPesquisaCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(btnPesquisaFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtBancoDescricao, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7))
                                    .addComponent(txtFormaPagamento)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel18)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbItem, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(lbItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel18)
                                .addComponent(txtBancoID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnPesquisaBancoID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtBancoDescricao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(txtCodFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnPesquisaFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(txtCodCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnPesquisaCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCondicaoPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.getAccessibleContext().setAccessibleName("Dados");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        if(funcoes.Permissao("001", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
        {
         funcoes.limparTodosCampos(rootPane);
         funcoes.HabilitaCampos(rootPane, true);
 
         Date data = new Date(System.currentTimeMillis());
         SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
         txtDataEntrada.setText(formatarDate.format(data));
         lbItem.setText("00");
         txtCodEmpresa.requestFocus();
         variaveis.status = "I";
        }


    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        // TODO add your handling code here:

        if (lbID.getText().equals("0"))
        {
            JOptionPane.showMessageDialog(null,"Nenhuma Entrada selecionado para alteração!");
            return;
        }

        if(funcoes.Permissao("002", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
        {

        funcoes.HabilitaCampos(rootPane, true);
        lbStatus.setText(" Alterando");
        variaveis.status = "A";
        txtCodEmpresa.requestFocus();
        }
 
    }//GEN-LAST:event_btnAlterarActionPerformed
    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        if(funcoes.Permissao("003", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
        {
        if (lbID.getText().equals("0"))
        {
            JOptionPane.showMessageDialog(null,"Nenhum Entrada selecionado para exclusão!");
            return;
        }
        try
        {
        String Campos = "*";
        String Condicoes = " INNER JOIN RECEBIMENTO_CONTAS_PAGAR ON (CP_CODIGO_ID = rcp_cp_codigo_id) WHERE CP_NOTA_FISCAL = " + txtNota.getText();
        rs = AcessoDados.Selecao("CONTAS_PAGAR", Campos, Condicoes);
        if(rs.next())
        {
            JOptionPane.showMessageDialog(null,"Existem pagamento contas pagar para essa entrada. Cancelamento não permitido.");
            return;
        }
        }catch (Exception e) {
            e.printStackTrace();
        }
        
        Object[] options = { " Sim ", " Não " };
            int confirmar = JOptionPane.showOptionDialog(null, "Confirma Exclusão", " Mensagem...",JOptionPane.DEFAULT_OPTION, JOptionPane. QUESTION_MESSAGE,null,options, options[0]);
            if(confirmar==1){
                //txtDescricao.requestFocus();
                return;
               }
            try
            {

            String  vmCondicaoItem = " ITEM_NOT_CODIGO_ID = " + lbID.getText();
            AcessoDados.Excluir("item_entrada", vmCondicaoItem);

            String  vmCondicao = "ENT_CODIGO_ID = " + lbID.getText();
            AcessoDados.Excluir("ENTRADA_NOTAS", vmCondicao);
            
            String  vmCondicaoCP = "CP_NOTA_FISCAL = " + txtNota.getText() + " AND CP_SERIE_NOTA = '" + txtSerie.getText() + "' AND CP_PAR_CODIGO_ID = " + txtCodCliente.getText();
            AcessoDados.Excluir("CONTAS_PAGAR", vmCondicaoCP);
            
            String  vmCondicaoCC = "cc_nota = " + txtNota.getText();
            AcessoDados.Excluir("contas_corrente", vmCondicaoCC);


            }catch (Exception e) {
                e.printStackTrace();
            }

          btnCancelarActionPerformed(null);
          funcoes.HabilitaCampos(rootPane, false);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code her
       if(funcoes.Permissao("004", variaveis.usuario_id, variaveis.usuario_super, this.getTitle()))
       {
         variaveis.xColuna1 = "ent_codigo_id";
         variaveis.xColuna2 = "ent_numero_nota";
         variaveis.xColuna3 = "ent_serie_nota";
         variaveis.xColuna4 = "to_char(ent_data_emissao, 'DD/MM/YYYY')";
         variaveis.xColuna5 = "par_nome_razao_social";
         variaveis.xColuna6 = "emp_nome";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Nota";
         variaveis.xColunaNome3 = "Série";
         variaveis.xColunaNome4 = "Emissão";
         variaveis.xColunaNome5 = "Fornecedor";
         variaveis.xColunaNome6 = "Empresa";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 80;
         variaveis.xColunaTamanho3 = 40;
         variaveis.xColunaTamanho4 = 80;
         variaveis.xColunaTamanho5 = 380;
         variaveis.xColunaTamanho6 = 250;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "ent_numero_nota";
         variaveis.xColunaNomeStart = "Nota";
         variaveis.xTabela = "entrada_notas";
         variaveis.xSql = " INNER JOIN PARCEIROS ON (PAR_CODIGO_ID = ent_par_codigo_id) " +
                          " INNER JOIN EMPRESAS  ON (EMP_CODIGO_ID = ent_emp_codigo_id) "; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(900, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Entrada de Notas - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);
       if(!md.getRetorno().trim().equals("") ||!md.getRetorno().equals(null))
       {
       lbID.setText((String) md.getRetorno());
       }
       if(!lbID.getText().equals(""))
       {

          String vmCampos = "ENTRADA_NOTAS.*, FPGTO_DESCRICAO, CPGTO_DESCRICAO, par_nome_razao_social";
          String vmCondicao_Consulta = " LEFT JOIN PARCEIROS ON (PAR_CODIGO_ID = ENT_PAR_CODIGO_ID) LEFT JOIN FORMA_DE_PAGAMENTO ON (FPGTO_CODIGO_ID = ENT_FPGTO_CODIGO_ID) LEFT JOIN CONDICAO_PAGAMENTO ON (CPGTO_CODIGO_ID =  ENT_CPGTO_CODIGO_ID)  WHERE ENT_codigo_id = " + lbID.getText();
          funcoes.RetornarSelecao(rootPane,"ENTRADA_NOTAS", vmCampos, vmCondicao_Consulta);
          MontaGrid();
          calculaValores();
          btnAlterar.requestFocus();
                    
        }
      }
}//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        this.dispose();
}//GEN-LAST:event_btnSairActionPerformed

    private void txtCodCondicaoPagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodCondicaoPagamentoFocusLost
        // TODO add your handling code here:
   

       if(!txtCodCondicaoPagamento.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE cpgto_codigo_id = " + txtCodCondicaoPagamento.getText();
          try
        {
        rs = AcessoDados.Selecao("condicao_pagamento", vmCampos, vmCondicao_Consulta);
        if (!rs.next())
        {
            JOptionPane.showMessageDialog(null,"Condição de pagamento não cadastrado no sistema");
            txtCodCondicaoPagamento.setText(null);
            txtCondicaoPagamento.setText(null);
            txtCodCondicaoPagamento.requestFocus();
            return;
        }
        txtCondicaoPagamento.setText(rs.getString("cpgto_qtde_parcelas"));
        CalculaParcelas();
        if(!txtCondicaoPagamento.isEnabled()) txtCondicaoPagamento.transferFocus();
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }
       else
           txtCondicaoPagamento.setText(null);

}//GEN-LAST:event_txtCodCondicaoPagamentoFocusLost

    private void txtCodCondicaoPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodCondicaoPagamentoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== 114) //tecla F3 para pesquisa
            btnPesquisaCondicaoPagamentoActionPerformed(null);
}//GEN-LAST:event_txtCodCondicaoPagamentoKeyPressed

    private void btnPesquisaCondicaoPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaCondicaoPagamentoActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "cpgto_codigo_id";
         variaveis.xColuna2 = "cpgto_qtde_parcelas";
         variaveis.xColuna3 = "cpgto_prazo_medio";
         variaveis.xColuna4 = "cpgto_descricao";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Qtde Parcelas";
         variaveis.xColunaNome3 = "Prazo Médio";
         variaveis.xColunaNome4 = "Descrição";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 70;
         variaveis.xColunaTamanho2 = 110;
         variaveis.xColunaTamanho3 = 110;
         variaveis.xColunaTamanho4 = 150;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "cpgto_descricao";
         variaveis.xColunaNomeStart = "Descrição";
         variaveis.xTabela = "condicao_pagamento";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(450, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Cond. Pagamento - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);

       txtCondicaoPagamento.setText(null);
       txtCodCondicaoPagamento.setText((String) md.getRetorno());

       txtCodCondicaoPagamento.requestFocus();
       if(!txtCodCondicaoPagamento.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE cpgto_codigo_id = " + txtCodCondicaoPagamento.getText();
          try
        {
        rs = AcessoDados.Selecao("condicao_pagamento", vmCampos, vmCondicao_Consulta);
        rs.next();
        txtCondicaoPagamento.setText(rs.getString("cpgto_qtde_parcelas"));
        txtCodFormaPagamento.requestFocus();
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }
}//GEN-LAST:event_btnPesquisaCondicaoPagamentoActionPerformed

    private void txtCodFormaPagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodFormaPagamentoFocusLost
        // TODO add your handling code here:

        if(!txtCodFormaPagamento.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE fpgto_codigo_id = " + txtCodFormaPagamento.getText();
          try
        {
        rs = AcessoDados.Selecao("forma_de_pagamento", vmCampos, vmCondicao_Consulta);
        if (!rs.next())
        {
            JOptionPane.showMessageDialog(null,"Forma de pagamento não cadastrado no sistema");
            txtCodFormaPagamento.setText(null);
            txtFormaPagamento.setText(null);
            txtCodFormaPagamento.requestFocus();
            return;
        }
        txtFormaPagamento.setText(rs.getString("fpgto_descricao"));
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }
       else
           txtFormaPagamento.setText(null);
      
}//GEN-LAST:event_txtCodFormaPagamentoFocusLost

    private void txtCodFormaPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodFormaPagamentoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== 114) //tecla F3 para pesquisa
            btnPesquisaFormaPagamentoActionPerformed(null);
}//GEN-LAST:event_txtCodFormaPagamentoKeyPressed

    private void btnPesquisaFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaFormaPagamentoActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "fpgto_codigo_id";
         variaveis.xColuna2 = "fpgto_descricao";
         variaveis.xColuna3 = "''";
         variaveis.xColuna4 = "''";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Descrição";
         variaveis.xColunaNome3 = "";
         variaveis.xColunaNome4 = "";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 400;
         variaveis.xColunaTamanho3 = 0;
         variaveis.xColunaTamanho4 = 0;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "fpgto_descricao";
         variaveis.xColunaNomeStart = "Descrição";
         variaveis.xTabela = "forma_de_pagamento";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(470, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Forma de Pgto - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);

       txtFormaPagamento.setText(null);
       txtCodFormaPagamento.setText((String) md.getRetorno());
       txtCodFormaPagamento.requestFocus();
       if(!txtFormaPagamento.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE fpgto_codigo_id = " + txtFormaPagamento.getText();
          try
        {
        rs = AcessoDados.Selecao("forma_de_pagamento", vmCampos, vmCondicao_Consulta);
        rs.next();
        txtFormaPagamento.setText(rs.getString("fpgto_descricao"));
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }   



}//GEN-LAST:event_btnPesquisaFormaPagamentoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        if (grDados.getRowCount() == 0)
        {
             JOptionPane.showMessageDialog(null,"Nenhum prodtuo informado para entrada!");
             return;
        }

        //Persistir nota Fornecedor, Numero e Serie

 //Consiste Itens
       for(int i = 0; i <= grDados.getRowCount() -1; i++)
       {
           String xCodigo = grDados.getValueAt(i, 1).toString();
           String DescP =   grDados.getValueAt(i, 2).toString();
           if(xCodigo.equals("") && DescP.equals(""))
           {
               javax.swing.table.DefaultTableModel Ex = (javax.swing.table.DefaultTableModel)grDados.getModel();
               Ex.removeRow(i);
               i= 0;
           }
        }

       for(int i = 0; i <= grDados.getRowCount() - 1; i++)
       {
           String xProduto = grDados.getValueAt(i, 1).toString();
           if(xProduto.equals(""))
           {
              JOptionPane.showMessageDialog(null,"Produto não informado.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(1, 1);
              //grDados.editCellAt(i, 1);
              grDados.requestFocus();
              return;
           }


           try
           {
           double xQtde = Double.parseDouble(grDados.getValueAt(i, 4).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"Quantidade informada inválida.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(4, 4);
              grDados.editCellAt(i, 4);
              grDados.requestFocus();
              return;
           }


           try
           {
           double xValorUnit = Double.parseDouble(grDados.getValueAt(i, 5).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"Valor unitário inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(5, 5);
              grDados.editCellAt(i, 5);
              grDados.requestFocus();
              return;
           }

           try
           {
           double xDesconto = Double.parseDouble(grDados.getValueAt(i, 6).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"Desconto inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(6, 6);
              grDados.editCellAt(i, 6);
              grDados.requestFocus();
              return;
           }


           String xCFOP = grDados.getValueAt(i, 7).toString();
           if(xCFOP.equals(""))
           {
              JOptionPane.showMessageDialog(null,"CFOP não informado.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(7, 7);
              grDados.editCellAt(i, 7);
              grDados.requestFocus();
              return;
           }

           String xCST = grDados.getValueAt(i, 8).toString();
           if(xCST.equals(""))
           {
              JOptionPane.showMessageDialog(null,"CST não informada.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(8, 8);
              grDados.editCellAt(i, 8);
              grDados.requestFocus();
              return;
           }

           try
           {
           double xPecICMS = Double.parseDouble(grDados.getValueAt(i, 9).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"% ICMS inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(9, 9);
              grDados.editCellAt(i, 9);
              grDados.requestFocus();
              return;
           }

           try
           {
           double xPecIPI = Double.parseDouble(grDados.getValueAt(i, 11).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"% IPI inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(11, 11);
              grDados.editCellAt(i, 11);
              grDados.requestFocus();
              return;
           }

           try
           {
           double xSubst = Double.parseDouble(grDados.getValueAt(i, 13).toString().replace(".", "").replace(",", "."));
           }catch(Exception er)
           {
              JOptionPane.showMessageDialog(null,"ICMS Subst. inválido.");
              grDados.setCellSelectionEnabled(true);
              grDados.setRowSelectionInterval(i,i);
              grDados.setColumnSelectionInterval(13, 13);
              grDados.editCellAt(i, 13);
              grDados.requestFocus();
              return;
           }

       }

        if (txtCodEmpresa.getText().equals(null) || (txtCodEmpresa.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Empresa não informada!");
                txtCodEmpresa.requestFocus();
                return;
            }
        if (txtCodCliente.getText().equals(null) || (txtCodCliente.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Fornecedor não informado!");
                txtCodCliente.requestFocus();
                return;
            }
        if (txtCodCondicaoPagamento.getText().equals(null) || (txtCodCondicaoPagamento.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Condição de Pagamento não informada!");
                txtCodCondicaoPagamento.requestFocus();
                return;
            }
         if (txtCodFormaPagamento.getText().equals(null) || (txtCodFormaPagamento.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Forma de Pagamento não informada!");
                txtCodFormaPagamento.requestFocus();
                return;
            }
         if (txtBancoID.getText().equals(null) || (txtBancoID.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Conta bancária não informada!");
                txtBancoID.requestFocus();
                return;
            }
         if (txtDataEmissao.getText().equals("  /  /    "))
            {
                JOptionPane.showMessageDialog(null,"Data de emissão da nota não informada!");
                txtDataEmissao.requestFocus();
                return;
            }

        if(variaveis.status =="I")
        {
        try
        {
        rs = AcessoDados.Selecao("entrada_notas", "*", " WHERE ENT_NUMERO_NOTA = " + txtNota.getText()
                                                                                + " AND ENT_SERIE_NOTA = '"+txtSerie.getText()+"' "
                                                                                + " AND ENT_PAR_CODIGO_ID = "+txtCodCliente.getText());
        if (rs.next())
        {
             JOptionPane.showMessageDialog(null,"Nota fiscal + serie ja lançada para esse fornecedor. Verifique");
             return;
        }
        }catch(Exception erro)
        {
         erro.printStackTrace();   
        }
        }

      
         
         
        funcoes.GravarDados(lbID.getText(), rootPane, "ENTRADA_NOTAS", "ENT_codigo_id",false);
        lbStatus.setText(" Registro");
        if(lbID.getText().equals("0")) lbID.setText(funcoes.RetornaId("Entrada_Notas", "ent_codigo_id"));
        //Incluir Item Entrada
        String vmCamposItem = "   item_not_codigo_id, " +
                              "item_ent_prod_codigo_id," +
                              "item_ent_quantidade,"+
                              "item_ent_percentual_desconto,"+
                              "item_ent_cfop,"+
                              "item_ent_icms,"+
                              "item_ent_ipi,"+
                              "item_ent_icms_sub_trib,"+
                              "item_ent_valor_unitario,"+
                              "item_ent_valor_total,"+
                              "item_ent_base_calculo_icms,"+
                              "item_ent_aliquota_icms,"+
                              "item_ent_aliquota_ipi,"+
                              "item_ent_peso_liquido,"+
                              "item_ent_peso_bruto,"+
                              "item_ent_cst,"+
                              "item_ent_lote";
                                

            try
            {
            AcessoDados.Excluir("item_entrada", " item_not_codigo_id = " + lbID.getText());
            for(int i = 0; i <= grDados.getRowCount() - 1; i++)
            {
                String vmParametroItem="";

               
                vmParametroItem = lbID.getText() + ",";
                vmParametroItem +=   grDados.getValueAt(i, 0).toString() + "," +
                                     grDados.getValueAt(i, 4).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 6).toString().replace(".", "").replace(",", ".") + ",'" +
                                     grDados.getValueAt(i, 7).toString() + "'," +
                                     grDados.getValueAt(i, 10).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 12).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 13).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 5).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", ".") + "," + //base de calculo icms
                                     grDados.getValueAt(i, 9).toString().replace(".", "").replace(",", ".") + "," +
                                     grDados.getValueAt(i, 11).toString().replace(".", "").replace(",", ".") + "," +
                                     RetornaPesoProduto(grDados.getValueAt(i, 0).toString())+ ",'"+
                                     grDados.getValueAt(i, 8).toString() + "','" +
                                     grDados.getValueAt(i, 16).toString()+"'";

            AcessoDados.Inserir("item_entrada", vmCamposItem, vmParametroItem);
            AcertoEstoque(grDados.getValueAt(i, 0).toString(), grDados.getValueAt(i, 16).toString(), grDados.getValueAt(i, 4).toString());

            }
            }catch (Exception e) {
                e.printStackTrace();
            }
            
            if(variaveis.status == "I")
            {
            CalculaParcelas();
            //Gerar Contas Pagar
            //Incluir Parcelas Contas a receber
            vmCamposItem =   "        cp_emp_codigo_id, " +
                                    " cp_par_codigo_id, " +
                                    " cp_nota_fiscal , " +
                                    " cp_serie_nota , " +
                                    " cp_documento , " +
                                    " cp_classificacao, " +
                                    " cp_parcela , " +
                                    " cp_data_emissao , " +
                                    " cp_data_vencimento , " +
                                    " cp_valor_documento , " +
                                    " cp_fpgto_codigo_id , " +
                                    " cp_cpgto_codigo_id , " +
                                    " cp_usuario, " +
                                    " cp_total_parcelas," +
                                    " cp_banc_codigo_id ";

             

             for(int i = 0; i <= grParcelas.getRowCount() - 1; i++)
             {
                String vmParametroItem = txtCodEmpresa.getText() + ",";
                vmParametroItem += txtCodCliente.getText() + ",";
                vmParametroItem += txtNota.getText() + ","; 
                vmParametroItem += "'" + txtSerie.getText() + "',";
                vmParametroItem += "'" + txtFatura.getText() + "-" + Integer.toString(i+1) + "',";
                vmParametroItem += "'E',";// Classificação F de ENTRADA
                vmParametroItem += Integer.toString(i + 1) + ",";
                vmParametroItem += "'" +  txtDataEntrada.getText() + "',";
                vmParametroItem += "'" +  grParcelas.getValueAt(i, 0).toString() + "'," + //Vencimento
                                          grParcelas.getValueAt(i, 1).toString().replace(".", "").replace(",", ".") + ","; //Valor
                vmParametroItem += txtCodFormaPagamento.getText()  + ",";
                vmParametroItem += txtCodCondicaoPagamento.getText() + ",";
                vmParametroItem += "'" + variaveis.nome_usuario + "',";
                vmParametroItem += grParcelas.getRowCount() + ",";
                vmParametroItem += txtBancoID.getText();

                try
                {
                    
                AcessoDados.Inserir("contas_pagar", vmCamposItem, vmParametroItem);

               //Inserir Contas Correntes
                rs = AcessoDados.Selecao("Contas_pagar", " max(cp_codigo_id) as id ", "");
                rs.next();
                String CRid = rs.getString("id");
                String vmCampos1 = "cc_descricao,"+
                                 "cc_banc_codigo_id,"+
                                 "cc_data_lancamento,"+
                                 "cc_documento,"+
                                 "cc_numero_cheque,"+
                                 "cc_historico,"+
                                 "cc_credito,"+
                                 "cc_debito,"+
                                 "cc_realizado,"+
                                 "cc_cp_codigo_id,"+
                                 "cc_cr_codigo_id, cc_nota, cc_data_vencimento";

                String vmParametros1 = "";
                vmParametros1 = "'"+ txtCliente.getText() + "'," +
                                      txtBancoID.getText() + "," +
                                      "'" + txtDataEntrada.getText() + "'," +
                                      "'" + txtFatura.getText() + "-" + Integer.toString(i+1) + "'," +
                                      "''," +
                                      "'LANÇAMENTO GERADO POR ENTRADA NOTA'," +
                                      "0," +
                                      grParcelas.getValueAt(i, 1).toString().replace(".", "").replace(",", ".") + "," + //Valor
                                      "'NÃO'," +
                                      CRid +
                                      ",Null," + txtNota.getText() + ",'" + grParcelas.getValueAt(i, 0).toString() + "'"  ;

            AcessoDados.Inserir("contas_corrente", vmCampos1, vmParametros1);

            }catch(Exception erro)
            {
                
            }
            }
            }

            if(!lbID.getText().equals(""))
            {
               String vmCampos = "ENTRADA_NOTAS.*, FPGTO_DESCRICAO, CPGTO_DESCRICAO, par_nome_razao_social";
               String vmCondicao_Consulta = " LEFT JOIN PARCEIROS ON (PAR_CODIGO_ID = ENT_PAR_CODIGO_ID) LEFT JOIN FORMA_DE_PAGAMENTO ON (FPGTO_CODIGO_ID = ENT_FPGTO_CODIGO_ID) LEFT JOIN CONDICAO_PAGAMENTO ON (CPGTO_CODIGO_ID =  ENT_CPGTO_CODIGO_ID)  WHERE ENT_codigo_id = " + lbID.getText();
            try
            {
                   funcoes.RetornarSelecao(rootPane,"ENTRADA_NOTAS", vmCampos, vmCondicao_Consulta);
                   MontaGrid();
                   //somaValores();
                   calculaValores();
                   funcoes.HabilitaCampos(rootPane, false);

          }catch (Exception e) {
           e.printStackTrace();
          }
          }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        funcoes.HabilitaCampos(rootPane, false);
        funcoes.limparTodosCampos(rootPane);

        btnNovo.requestFocus();
        lbItem.setText("00");
}//GEN-LAST:event_btnCancelarActionPerformed

    private void txtDescontosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontosFocusLost
        // TODO add your handling code here:
        calculaValores();
       
    }//GEN-LAST:event_txtDescontosFocusLost

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
            
    }//GEN-LAST:event_formKeyPressed

    public void CalculaImposto(String Desconto, String Quantidade, String Unitario){
        if(Desconto.equals(""))Desconto ="0";
        if(Quantidade.equals(""))Desconto ="0";
        if(Unitario.equals(""))Desconto ="0";
        CalculaNFPadrao.calculaNota(vmAliqICMS, vmAliqIPI, Double.parseDouble(Desconto.replace(".", "").replace(",", ".")),
                                                           Double.parseDouble(Quantidade.replace(".", "").replace(",", ".")),
                                                           Double.parseDouble(Unitario.replace(".", "").replace(",", ".")),vmAliqDDIF, vmREDUCAOICMS);
        vm_base_calculo_icms_TELA = (funcoes.formataMoeda(Double.toString(variaveis.vm_base_calculo_icms),"BD"));
    }
    private void btnSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar1ActionPerformed
        // TODO add your handling code here:
        JTextField fieldx = new JTextField();  
        DefaultCellEditor editor = new DefaultCellEditor(fieldx) {  
            @Override  
            public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {  
                Component comp = super.getTableCellEditorComponent(table, value, isSelected, row, column);  
                if (comp instanceof JTextComponent) {  
                    ((JTextComponent)comp).setBackground(new java.awt.Color(255,255,188));
                    ((JTextComponent)comp).selectAll();  
                }  
                return comp;  
            }  
        };  
        grDados.getColumnModel().getColumn(1).setCellEditor(editor);        
        grDados.getColumnModel().getColumn(3).setCellEditor(editor);        
        grDados.getColumnModel().getColumn(4).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(5).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(6).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(7).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(8).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(9).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(11).setCellEditor(editor);    
        grDados.getColumnModel().getColumn(13).setCellEditor(editor);    
        
        
        int t = grDados.getRowCount();
        if(grDados.getRowCount() == 0)
        {
        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)grDados.getModel();
        dtm.addRow(new Object[]{"","","","","","","","","","","","","","","","",""});
        grDados.setCellSelectionEnabled(true);
        grDados.setRowSelectionInterval(0, 0);
        grDados.setColumnSelectionInterval(1, 1);
        //grDados.editCellAt(0, 1);
        }else
        {
           String Codigo  = grDados.getValueAt(0, 7).toString();
           
           if(Codigo.equals(""))
           {
             grDados.setCellSelectionEnabled(true);
             grDados.setRowSelectionInterval(0, 0);
             grDados.setColumnSelectionInterval(1, 1);
             //grDados.editCellAt(0, 1);
           }else
           {
             javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)grDados.getModel();
             dtm.addRow(new Object[]{"","","","","","","","","","","","","","","","",""});
             grDados.setCellSelectionEnabled(true);
             grDados.setRowSelectionInterval(t, t);
             grDados.setColumnSelectionInterval(1, 1);
             //grDados.editCellAt(t, 1);
           }
        }
        grDados.requestFocus();
}//GEN-LAST:event_btnSalvar1ActionPerformed
     class ButtonColumn extends AbstractCellEditor
        implements TableCellRenderer, TableCellEditor, ActionListener
    {
        JTable table;
        JButton renderButton;
        JButton renderButton1;
        JButton editButton;
        Icon imgExcluir;
        String text;

        public ButtonColumn(JTable table, int column)
        {
            super();
            //btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Localizar.gif")));;;
            this.table = table;
            imgExcluir = new ImageIcon("..MTDS/Imagens/excluir.gif");
            renderButton = new JButton(imgExcluir);
            renderButton.setBorderPainted(false);
            renderButton.setToolTipText("Excluir Item");
            renderButton.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
            renderButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir.gif")));

            editButton = new JButton();
            editButton.setFocusPainted( false );
            editButton.addActionListener( this );
            editButton.setBorderPainted(false);
            editButton.setToolTipText("Excluir Item");
            editButton.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
            editButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/excluir.gif")));


            TableColumnModel columnModel = table.getColumnModel();
            columnModel.getColumn(column).setCellRenderer( this );
            columnModel.getColumn(column).setCellEditor( this );
        }

        public Component getTableCellRendererComponent(
            JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column)
        {
            if (hasFocus)
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }
            else if (isSelected)
            {
                renderButton.setForeground(table.getSelectionForeground());
                 renderButton.setBackground(table.getSelectionBackground());
            }
            else
            {
                renderButton.setForeground(table.getForeground());
                renderButton.setBackground(UIManager.getColor("Button.background"));
            }

            renderButton.setText( (value == null) ? "" : value.toString() );
            return renderButton;
        }

        public Component getTableCellEditorComponent(
            JTable table, Object value, boolean isSelected, int row, int column)
        {
            text = (value == null) ? "" : value.toString();
            editButton.setText( text );
            return editButton;
        }

        public Object getCellEditorValue()
        {
            return text;
        }

        public void actionPerformed(ActionEvent e)
        {
            fireEditingStopped();
            System.out.println( e.getActionCommand() + " : " + table.getSelectedRow());
            if(txtCodEmpresa.isEnabled())
            {
            DefaultTableModel tableModel =(DefaultTableModel) grDados.getModel();
            tableModel.removeRow(grDados.getSelectedRow());
            calculaValores();
            btnSalvar1.requestFocus();

            }
        }
    }

  public void somaValores()
  {
           String vmCampos = " SUM(item_pedido_base_calculo_icms) AS BASE_ICMS, " +
                          "  SUM(item_ped_icms) AS ICMS, " +
                          "  SUM(item_ped_icms_sub_trib) AS ICMSSUB, " +
                          "  SUM(item_ped_ipi) AS IPI, " +
                          "  SUM(item_ped_valor_total) AS TOT_PRODUTO, " +
                          "  SUM(item_ped_valor_total) AS TOT_NOTA ";

           String vmCondicao_Consulta = " WHERE item_ped_pedido_codigo_id = " + lbID.getText();
          try
        {
        rs = AcessoDados.Selecao("item_pedido", vmCampos, vmCondicao_Consulta);
        rs.next();
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }
  }

   public void calculaValores()
  {
       Double vTotBruto = 0.00;
       Double vTotProduto = 0.00;
       Double vDesconto = 0.00;
       Double vIPI = 0.00;
       Double vICMS = 0.00;
       Double vICMSst = 0.00;
       Double vBASEICMSst = 0.00;
       Double vBASEICMS = 0.00;
 
       for(int i = 0; i <= grDados.getRowCount() - 1; i++)
       {
          try
          {
          vTotBruto +=  Double.parseDouble(grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", "."));
          vTotProduto +=  Double.parseDouble(grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", "."));
          vICMS += Double.parseDouble(grDados.getValueAt(i, 10).toString().replace(".", "").replace(",", "."));
          vIPI += Double.parseDouble(grDados.getValueAt(i, 12).toString().replace(".", "").replace(",", "."));
          if(Double.parseDouble(grDados.getValueAt(i, 10).toString().replace(".", "").replace(",", ".")) > 0)
          {
             vBASEICMS +=  Double.parseDouble(grDados.getValueAt(i, 14).toString().replace(".", "").replace(",", "."));
          }
            vICMSst += Double.parseDouble(grDados.getValueAt(i, 13).toString().replace(".", "").replace(",", "."));
          }catch(Exception erro)
          {
              
          }
       }
       lbItem.setText(funcoes.StrZero(grDados.getRowCount(),Byte.parseByte("2")));

       double vm_total_prdutos = vTotProduto;
       double vm_total_desconto = Double.parseDouble(txtDescontos.getText().replace(".", "").replace(",", "."));
       double vm_frete = Double.parseDouble(txtFrete.getText().replace(".", "").replace(",", "."));
       double vm_despesas = Double.parseDouble(txtDespesas.getText().replace(".", "").replace(",", "."));
       double vm_seguro = Double.parseDouble(txtSeguro.getText().replace(".", "").replace(",", "."));
       double vm_total_nota = (vm_total_prdutos  + vIPI + vm_frete + vm_despesas + vm_seguro) - vm_total_desconto;

       Double vPercdesconto = (vm_total_nota * vDesconto) / 100;
       vm_total_nota =  vm_total_nota - vPercdesconto ;
       txtBaseICMS.setText(funcoes.formataMoeda(Double.toString(vBASEICMS), "BD"));
       txtICMS.setText(funcoes.formataMoeda(Double.toString(vICMS), "BD"));
       txtICMST.setText(funcoes.formataMoeda(Double.toString(vICMSst), "BD"));
       txtIPI.setText(funcoes.formataMoeda(Double.toString(vIPI), "BD"));
       txtTotalProdutos.setText(funcoes.formataMoeda(Double.toString(vTotProduto), "BD"));
       txtTotalNota.setText(funcoes.formataMoeda(Double.toString(vm_total_nota), "BD"));
       CalculaParcelas();
  }
    public void AcertoEstoque(String pProduto, String pLote, String pquantidade)
    {
            try
            {
               //verifica se existe o lote
               String CondicaoConsulta = " where lot_numero_lot = '" + pLote + "' and lot_prod_codigo_id = "+ pProduto ;
               rsLote = AcessoDados.Selecao("lotes", " * ", CondicaoConsulta);
               if (!rsLote.next())
               {
                 //se não achou o lote ele insere um novo
                 String vmCampos = " lot_prod_codigo_id, ";
                 vmCampos += " lot_numero_lot, ";
                 vmCampos += " lot_qtde ";

                String vmParametros = pProduto + "," +
                                      "'" + pLote + "'," +
                                      pquantidade.replace(".", "").replace(",", ".") ;

                AcessoDados.Inserir("lotes", vmCampos, vmParametros);

               }
               else
               {
                 //se achou o lote ele soma a quantidade

                 String vmCampos = " lot_prod_codigo_id, ";
                 vmCampos += " lot_numero_lot, ";
                 vmCampos += " lot_qtde ";

                String vmParametros = "lot_qtde = lot_qtde + " +  pquantidade.replace(".", "").replace(",", ".");
                CondicaoConsulta = " lot_numero_lot = '" + pLote + "' and lot_prod_codigo_id = "+ pProduto ;
                AcessoDados.Alterar("lotes", vmParametros, CondicaoConsulta);
               }
            }catch (Exception e) {
                e.printStackTrace();
            }

    }
   
   
  public void MontaGrid()
    {
        String vmCampos = "   item_not_codigo_id, " +
                              "item_ent_prod_codigo_id," +
                              "item_ent_quantidade,"+
                              "item_ent_percentual_desconto,"+
                              "item_ent_cfop,"+
                              "item_ent_icms,"+
                              "item_ent_ipi,"+
                              "item_ent_icms_sub_trib,"+
                              "item_ent_valor_unitario,"+
                              "item_ent_valor_total,"+
                              "item_ent_base_calculo_icms,"+
                              "item_ent_aliquota_icms,"+
                              "item_ent_aliquota_ipi,"+
                              "item_ent_peso_liquido,"+
                              "item_ent_peso_bruto,"+
                              "item_ent_cst,"+
                              "item_ent_lote, " +
                              "unid_unidade,"+
                              "prod_codigo_produto,"+
                              "prod_descricao";
                         

        String vmCondicao_Consulta = " left join item_entrada on (item_not_codigo_id = ENT_codigo_id) " +
                                     " left join produtos on (prod_codigo_id = item_ent_prod_codigo_id) " +
                                     " left join unidade_de_medida on (unid_codigo_id = prod_unid_codigo_id) " +
                                     " where item_not_codigo_id = " + lbID.getText();
        try
        {
        rs = AcessoDados.Selecao("entrada_notas", vmCampos, vmCondicao_Consulta);
        MontaColunasGrid();
        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)grDados.getModel();
        while (rs.next())
        {
            dtm.addRow(new Object[]{rs.getString("item_ent_prod_codigo_id"),
                                    rs.getString("prod_codigo_produto"),
                                    rs.getString("prod_descricao"),
                                    rs.getString("unid_unidade"),
                                    rs.getString("item_ent_quantidade").replace(".",","),
                                    funcoes.formataMoeda(rs.getString("item_ent_valor_unitario"),"BD"),
                                    funcoes.formataPercentual(rs.getString("item_ent_percentual_desconto").replace(".",",")),
                                    rs.getString("item_ent_cfop"),
                                    rs.getString("item_ent_cst"),
                                    funcoes.formataMoeda(rs.getString("item_ent_aliquota_icms"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ent_icms"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ent_aliquota_ipi"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ent_ipi"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ent_icms_sub_trib"),"BD"),
                                    funcoes.formataMoeda(rs.getString("item_ent_valor_total"),"BD"),
                                    "",
                                    rs.getString("item_ent_lote")});
        }
        rs.close();
         }catch (Exception e) {
           e.printStackTrace();
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       MontaGrid();

    }//GEN-LAST:event_formWindowOpened

    private void btnPesquisaEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaEmpresaActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "emp_codigo_id";
         variaveis.xColuna2 = "emp_nome";
         variaveis.xColuna3 = "emp_nome_fantasia";
         variaveis.xColuna4 = "emp_cnpj";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Razão Social";
         variaveis.xColunaNome3 = "Fantasia";
         variaveis.xColunaNome4 = "CPF / CNPJ";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 450;
         variaveis.xColunaTamanho3 = 260;
         variaveis.xColunaTamanho4 = 120;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "emp_nome";
         variaveis.xColunaNomeStart = "Razão Social";
         variaveis.xTabela = "empresas";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(900, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Empresa - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);
       txtCodEmpresa.setText(null);
       txtCodEmpresa.setText((String) md.getRetorno());
       txtCodEmpresa.requestFocus();
       if(!txtCodEmpresa.getText().equals(""))
       {
           txtCodEmpresaFocusLost(null);

       }

    }//GEN-LAST:event_btnPesquisaEmpresaActionPerformed

    private void txtCodEmpresaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodEmpresaFocusLost
        // TODO add your handling code here:
       if(!txtCodEmpresa.getText().equals(""))
        {
            String vmCampos = "*";
            String vmCondicao_Consulta = " where emp_codigo_id = " + txtCodEmpresa.getText();
            try
            {
                rs = AcessoDados.Selecao("empresas", vmCampos, vmCondicao_Consulta);
                    if (!rs.next())
                    {
                         JOptionPane.showMessageDialog(null,"Empresa não cadastrado no sistema");
                         txtCodEmpresa.setText(null);
                         txtEmpresa.setText(null);
                         txtCodEmpresa.requestFocus();
                         return;
                    }
                 rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
            try
            {
                rs = AcessoDados.Selecao("Empresas", vmCampos, vmCondicao_Consulta);
                while (rs.next())
                {
                    txtEmpresa.setText(rs.getString("emp_nome"));
                }
                rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }else
       {
        txtEmpresa.setText("");
       }

        
    }//GEN-LAST:event_txtCodEmpresaFocusLost

    private void grDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grDadosMouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_grDadosMouseClicked

    private void grDadosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_grDadosFocusGained
        // TODO add your handling code here:
}//GEN-LAST:event_grDadosFocusGained

    private void grDadosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grDadosKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 114) //tecla F3 para pesquisa
        {
            if(grDados.getSelectedColumn() == 1)
            {
                 
                
                if(txtOC.getText().length() == 0)
                {

                 variaveis.xColuna1 = "prod_codigo_id";
                 variaveis.xColuna2 = "prod_codigo_produto";
                 variaveis.xColuna3 = "prod_descricao";
                 variaveis.xColuna4 = "prod_descricao_generica";
                 variaveis.xColuna5 = "''";
                 variaveis.xColuna6 = "''";
                 variaveis.xColuna7 = "''";
                 variaveis.xColuna8 = "''";
                 variaveis.xColuna9 = "''";
    
                 variaveis.xColunaNome1 = "Código";
                 variaveis.xColunaNome2 = "Cód Produto";
                 variaveis.xColunaNome3 = "Descrição";
                 variaveis.xColunaNome4 = "Descrição Genérica";
                 variaveis.xColunaNome5 = "";
                 variaveis.xColunaNome6 = "";
                 variaveis.xColunaNome7 = "";
                 variaveis.xColunaNome8 = "";
                 variaveis.xColunaNome9 = "";
                 variaveis.xColunaTamanho1 = 60;
                 variaveis.xColunaTamanho2 = 80;
                 variaveis.xColunaTamanho3 = 400;
                 variaveis.xColunaTamanho4 = 300;
                 variaveis.xColunaTamanho5 = 0;
                 variaveis.xColunaTamanho6 = 0;
                 variaveis.xColunaTamanho7 = 0;
                 variaveis.xColunaTamanho8 = 0;
                 variaveis.xColunaTamanho9 = 0;
                 variaveis.xColunaStart = "prod_descricao";
                 variaveis.xColunaNomeStart = "Descrição";
                 variaveis.xTabela = "produtos";
                 variaveis.xSql = ""; 
                }else
                {
                           variaveis.xColuna1 = "DISTINCT prod_codigo_id";
                           variaveis.xColuna2 = "prod_codigo_produto";
                           variaveis.xColuna3 = "prod_descricao";
                           variaveis.xColuna4 = "prod_descricao_generica";
                           variaveis.xColuna5 = "''";
                           variaveis.xColuna6 = "''";
                           variaveis.xColuna7 = "''";
                           variaveis.xColuna8 = "''";
                           variaveis.xColuna9 = "''";
         
                           variaveis.xColunaNome1 = "Código";
                           variaveis.xColunaNome2 = "Cód Produto";
                           variaveis.xColunaNome3 = "Descrição";
                           variaveis.xColunaNome4 = "Descrição Genérica";
                           variaveis.xColunaNome5 = "";
                           variaveis.xColunaNome6 = "";
                           variaveis.xColunaNome7 = "";
                           variaveis.xColunaNome8 = "";
                           variaveis.xColunaNome9 = "";
         
                           variaveis.xColunaTamanho1 = 60;
                           variaveis.xColunaTamanho2 = 80;
                           variaveis.xColunaTamanho3 = 400;
                           variaveis.xColunaTamanho4 = 300;
                           variaveis.xColunaTamanho5 = 0;
                           variaveis.xColunaTamanho6 = 0;
                           variaveis.xColunaTamanho7 = 0;
                           variaveis.xColunaTamanho8 = 0;
                           variaveis.xColunaTamanho9 = 0;
         
                           variaveis.xColunaStart = "prod_descricao";
                           variaveis.xColunaNomeStart = "Descrição";
                           variaveis.xTabela = "COTACAO";
                           variaveis.xSql = " INNER JOIN ITEM_COTACAO ON (COT_CODIGO_ID = ITEM_COT_CODIGO_ID) "+
                                            " INNER JOIN PRODUTOS ON (PROD_CODIGO_ID = ITEM_PROD_CODIGO_ID) "; 
                           variaveis.xCondicaoAND= " AND COT_CODIGO_ID = " + txtOC.getText();  //PESQUISA COM MAIS DE UMA CONDIÇÃO
                   
                }
         
                 FpesqPesquisa md = new FpesqPesquisa(null, true);
                             
                 dP.setSize(850, 480); 
                 md.setSize(dP);
                 md.setTitle("Pesquisa Produto - ENTER ou DUPLO CLICK no registro retorna dados.");
                 md.setLocationRelativeTo(null);
                 md.setVisible(true);
                 try
                 {
                     rs = AcessoDados.Selecao("produtos", "*", " where prod_codigo_id = " + md.getRetorno());
                     rs.next();
                     DefaultTableModel tabela = (DefaultTableModel) grDados.getModel(); 
                     tabela.setValueAt(rs.getString("prod_codigo_produto"), grDados.getSelectedRow(), 1);
                  }catch (Exception r) {
                     r.printStackTrace();
                 }
            }
            
            if(grDados.getSelectedColumn() == 7)
            {
               variaveis.xColuna1 = "cfop_codigo_id";
               variaveis.xColuna2 = "cfop_cfop";
               variaveis.xColuna3 = "cfop_descricao";
               variaveis.xColuna4 = "''";
               variaveis.xColuna5 = "''";
               variaveis.xColuna6 = "''";
               variaveis.xColuna7 = "''";
               variaveis.xColuna8 = "''";
               variaveis.xColuna9 = "''";
         
               variaveis.xColunaNome1 = "Código";
               variaveis.xColunaNome2 = "CFOP";
               variaveis.xColunaNome3 = "Descrição";
               variaveis.xColunaNome4 = "";
               variaveis.xColunaNome5 = "";
               variaveis.xColunaNome6 = "";
               variaveis.xColunaNome7 = "";
               variaveis.xColunaNome8 = "";
               variaveis.xColunaNome9 = "";
         
               variaveis.xColunaTamanho1 = 60;
               variaveis.xColunaTamanho2 = 60;
               variaveis.xColunaTamanho3 = 340;
               variaveis.xColunaTamanho4 = 0;
               variaveis.xColunaTamanho5 = 0;
               variaveis.xColunaTamanho6 = 0;
               variaveis.xColunaTamanho7 = 0;
               variaveis.xColunaTamanho8 = 0;
               variaveis.xColunaTamanho9 = 0;
         
               variaveis.xColunaStart = "cfop_descricao";
               variaveis.xColunaNomeStart = "Descrição";
               variaveis.xTabela = "cfop";
               variaveis.xSql = ""; 
         
               FpesqPesquisa md = new FpesqPesquisa(null, true);
               dP.setSize(470, 480); 
               md.setSize(dP);
               md.setTitle("Pesquisa CFOP - ENTER ou DUPLO CLICK no registro retorna dados.");

               md.setLocationRelativeTo(null);
               md.setVisible(true);
                          
               try
               {
                     rs = AcessoDados.Selecao("cfop", "*", " where cfop_codigo_id = " + md.getRetorno());
                     rs.next();
                     String CFOP =rs.getString("cfop_cfop");
                     DefaultTableModel tabela = (DefaultTableModel) grDados.getModel(); 
                     tabela.setValueAt(rs.getString("cfop_cfop"), grDados.getSelectedRow(), 7);
                }catch (Exception r) {
                     r.printStackTrace();
               }

            }
            
        }

    }//GEN-LAST:event_grDadosKeyPressed

    private void grDadosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grDadosKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_grDadosKeyReleased

    private void txtBancoIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBancoIDFocusGained
        // TODO add your handling code here:
        JTextField tf = (JTextField) evt.getComponent();
        tf.selectAll();
    }//GEN-LAST:event_txtBancoIDFocusGained

    private void txtBancoIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBancoIDFocusLost
        // TODO add your handling code here:
        if (!txtBancoID.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " WHERE banc_codigo_id = " + txtBancoID.getText();
            try {
                rs = AcessoDados.Selecao("Contas_bancarias", vmCampos, vmCondicao_Consulta);
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(null, "Banco não cadastrado no sistema");
                    txtBancoID.setText(null);
                    txtBancoDescricao.setText(null);
                    txtBancoID.requestFocus();
                    return;
                }
                txtBancoDescricao.setText(rs.getString("banc_nome_banco"));
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            txtBancoDescricao.setText(null);
        }
}//GEN-LAST:event_txtBancoIDFocusLost

    private void txtBancoIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBancoIDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 114) //tecla F3 para pesquisa
        {
            btnPesquisaBancoIDActionPerformed(null);
        }
}//GEN-LAST:event_txtBancoIDKeyPressed

    private void txtBancoIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBancoIDKeyReleased
        // TODO add your handling code here:
}//GEN-LAST:event_txtBancoIDKeyReleased

    private void btnPesquisaBancoIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaBancoIDActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "banc_codigo_id";
         variaveis.xColuna2 = "banc_nome_banco";
         variaveis.xColuna3 = "banc_numero_agencia";
         variaveis.xColuna4 = "banc_numero_conta";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Descrição";
         variaveis.xColunaNome3 = "Agência";
         variaveis.xColunaNome4 = "C/C";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 250;
         variaveis.xColunaTamanho3 = 75;
         variaveis.xColunaTamanho4 = 75;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "banc_nome_banco";
         variaveis.xColunaNomeStart = "Descrição";
         variaveis.xTabela = "contas_bancarias";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(470, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Conta Bancária - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);

        if(!md.getRetorno().trim().equals("") ||!md.getRetorno().equals(null)) {
            txtBancoID.setText((String) md.getRetorno());
        }
        txtBancoID.requestFocus();
        if (!txtBancoID.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " WHERE banc_codigo_id = " + txtBancoID.getText();
            try {
                rs = AcessoDados.Selecao("Contas_bancarias", vmCampos, vmCondicao_Consulta);
                rs.next();
                txtBancoDescricao.setText(rs.getString("banc_nome_banco"));
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
}//GEN-LAST:event_btnPesquisaBancoIDActionPerformed

    private void btnPesquisaBancoIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnPesquisaBancoIDFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisaBancoIDFocusLost

    private void txtCodClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodClienteFocusLost
        // TODO add your handling code here:
        if (!txtCodCliente.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " where par_codigo_id = " + txtCodCliente.getText();
            try {
                rs = AcessoDados.Selecao("parceiros", vmCampos, vmCondicao_Consulta);
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(null, "Cliente não cadastrado no sistema");
                    txtCodCliente.setText(null);
                    txtCliente.setText(null);
                    txtCodCliente.requestFocus();
                    return;
                }
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
            try {
                rs = AcessoDados.Selecao("parceiros", vmCampos, vmCondicao_Consulta);
                while (rs.next()) {
                    txtCliente.setText(rs.getString("par_nome_razao_social"));
                }
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            txtCliente.setText("");
        }
    }//GEN-LAST:event_txtCodClienteFocusLost

    private void btnPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaClienteActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "par_codigo_id";
         variaveis.xColuna2 = "par_nome_razao_social";
         variaveis.xColuna3 = "par_fantasia";
         variaveis.xColuna4 = "par_cnpj_cpf";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Nome / Razão Social";
         variaveis.xColunaNome3 = "Fantasia";
         variaveis.xColunaNome4 = "CPF / CNPJ";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 450;
         variaveis.xColunaTamanho3 = 260;
         variaveis.xColunaTamanho4 = 120;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "par_nome_razao_social";
         variaveis.xColunaNomeStart = "Nome / Razão Social";
         variaveis.xTabela = "parceiros";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(900, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Parceiros - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);
        txtCodCliente.setText(null);
        txtCodCliente.setText((String) md.getRetorno());
        txtCodCliente.requestFocus();
        if (!txtCodCliente.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " WHERE par_codigo_id = " + txtCodCliente.getText();
            try {
                rs = AcessoDados.Selecao("parceiros", vmCampos, vmCondicao_Consulta);
                rs.next();
                txtCliente.setText(rs.getString("par_nome_razao_social"));
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_btnPesquisaClienteActionPerformed

    private void txtDataEmissaoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataEmissaoFocusGained
        // TODO add your handling code here:
        JTextField tf = (JTextField) evt.getComponent();
        tf.selectAll();
    }//GEN-LAST:event_txtDataEmissaoFocusGained

    private void txtDataEmissaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataEmissaoFocusLost
        // TODO add your handling code here:
        if (txtDataEntrada.getText().equals("  /  /    ")) {
            Date data = new Date(System.currentTimeMillis());
            SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
            txtDataEntrada.setText(formatarDate.format(data));
        }
    }//GEN-LAST:event_txtDataEmissaoFocusLost

    private void txtFreteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFreteFocusLost
        // TODO add your handling code here:
        calculaValores();
    }//GEN-LAST:event_txtFreteFocusLost

    private void txtSeguroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSeguroFocusLost
        // TODO add your handling code here:
        calculaValores();
    }//GEN-LAST:event_txtSeguroFocusLost

    private void txtDespesasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDespesasFocusLost
        // TODO add your handling code here:
        calculaValores();
    }//GEN-LAST:event_txtDespesasFocusLost

    private void txtNotaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNotaFocusLost
        // TODO add your handling code here:
        if(txtFatura.getText().equals("")) txtFatura.setText(txtNota.getText());
    }//GEN-LAST:event_txtNotaFocusLost

    private void btnXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXMLActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser1 = new JFileChooser();
        jFileChooser1.setApproveButtonText("Selecionar XML");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("XML Files", "xml", "xml");
        jFileChooser1.addChoosableFileFilter(filter);
        jFileChooser1.setAcceptAllFileFilterUsed(false); 
        jFileChooser1.setCurrentDirectory(new File("c:/"));
    
        //   jFileChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = jFileChooser1.showDialog(null, null);
        //if (returnVal == JFileChooser.APPROVE_OPTION) {
        //JOptionPane.showMessageDialog(null, "Diretório selecionado: " + jFileChooser1.getSelectedFile().getAbsolutePath());
        //}
        String xml = "";
        xml = jFileChooser1.getSelectedFile().getAbsolutePath();
          
        funcoes.limparTodosCampos(rootPane);
         funcoes.HabilitaCampos(rootPane, true);
         Date data = new Date(System.currentTimeMillis());
         SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
         txtDataEntrada.setText(formatarDate.format(data));
         lbItem.setText("00");
         txtCodEmpresa.requestFocus();
         variaveis.status = "I";
        
        try{
        StringBuilder xmlNota = new StringBuilder();  
        String linhaLote = null;  
        BufferedReader inLote = new BufferedReader(new InputStreamReader(  
        new FileInputStream(xml), "ISO-8859-1"));  
        while ((linhaLote = inLote.readLine()) != null) {  
           xmlNota.append(linhaLote);  
        }  
        inLote.close();
       
        org.w3c.dom.Document document; 
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance(); 
        InputSource inStream = new InputSource();  
        inStream.setCharacterStream(new StringReader(xmlNota.toString())); 
        DocumentBuilder builder = null;  
        builder = factory.newDocumentBuilder();  
        builder.setErrorHandler(new SimpleErrorHandler());  
        document = builder.parse(inStream);
        
        org.w3c.dom.Element elem = document.getDocumentElement();
   
        org.w3c.dom.NodeList d = elem.getElementsByTagName("dEmi");
        String xTag = d.item(0).getTextContent();
        txtDataEmissao.setText(funcoes.formataData(xTag));

       
        d = elem.getElementsByTagName("CNPJ");
        xTag = d.item(0).getTextContent();
       
        MaskFormatter formatter = new MaskFormatter("##.###.###/####-##");  
        JFormattedTextField textField = new JFormattedTextField(formatter);  
        formatter.install(textField); 
        textField.setText(xTag);
        
        
        String Ret = funcoes.RetornaDados("Parceiros", "Par_Codigo_Id", " where par_cnpj_cpf = '" + textField.getText() + "'");
        txtCodCliente.setText(Ret);
        txtCodClienteFocusLost(null);
        
        txtCodEmpresa.setText("1");
        txtCodEmpresaFocusLost(null);
        
        
        d = elem.getElementsByTagName("nNF");
        xTag = d.item(0).getTextContent();
        txtNota.setText(xTag);
        
        d = elem.getElementsByTagName("serie");
        xTag = d.item(0).getTextContent();
        txtSerie.setText(xTag);
        
         
        //Produtos
        int item = 0;
        d = elem.getElementsByTagName("vProd");
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
            item++;
           }catch (Exception erro)
           {
             item = j - 1;
             break;
           }
        }
        
        for(int i=0; i<item; i++)  
        { 
            d = elem.getElementsByTagName("xProd");
            xTag = d.item(i).getTextContent();
            String xDescricaoProduto = xTag;
            
            d = elem.getElementsByTagName("uCom");
            xTag = d.item(i).getTextContent();
            String xUM = xTag;
            
            d = elem.getElementsByTagName("qCom");
            xTag = d.item(i).getTextContent();
            String xQtde = funcoes.formataMoeda(xTag,"BD");
            
            d = elem.getElementsByTagName("vUnCom");
            xTag = d.item(i).getTextContent();
            String xUnitario = funcoes.formataMoeda(xTag,"BD");
            
            d = elem.getElementsByTagName("CFOP");
            xTag = d.item(i).getTextContent();
            String xCfop = "";
            xCfop =  xTag.toString().substring(0,1) + ".";
            xCfop += xTag.toString().substring(1,4);
            
            String xCst = "";
            try
            {
            d = elem.getElementsByTagName("orig");
            xTag = d.item(i).getTextContent();
            xCst = xTag;
            d = elem.getElementsByTagName("CST");
            xTag = d.item(i).getTextContent();
            xCst += xTag;
            }catch(Exception xds)
            {
                
            }
            
            String xPercIcms ="";;
            try
            {
            d = elem.getElementsByTagName("pICMS");
            xTag = d.item(i).getTextContent();
            xPercIcms = funcoes.formataMoeda(xTag,"BD");
            }catch(Exception icms)
            {
                
            }
            
            String xIcms ="";
            try
            {
            d = elem.getElementsByTagName("vICMS");
            xTag = d.item(i).getTextContent();
            xIcms = funcoes.formataMoeda(xTag,"BD");
            }catch(Exception xds)
            {
                
            }


            String xPercIpi = "";
            try
            {
            d = elem.getElementsByTagName("pIPI");
            xTag = d.item(i).getTextContent();
            xPercIpi = funcoes.formataMoeda(xTag,"BD");
            }catch(Exception ipi)
            {
                
            }

            String xIpi = "";
            try
            {
            d = elem.getElementsByTagName("vIPI");
            xTag = d.item(i).getTextContent();
            xIpi = funcoes.formataMoeda(xTag,"BD");
            }catch(Exception xds)
            {
                
            }
            
            d = elem.getElementsByTagName("vProd");
            xTag = d.item(i).getTextContent();
            String xVProd = funcoes.formataMoeda(xTag,"BD");

            javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)grDados.getModel();
            dtm.addRow(new Object[]{"", //Id
                                    "", //Codigo Produto
                                    xDescricaoProduto,
                                    xUM,
                                    xQtde,
                                    xUnitario,
                                    "0",
                                    "", //cfop
                                    "", //cst,
                                    xPercIcms,
                                    xIcms,
                                    xPercIpi,
                                    xIpi,
                                    "0",
                                    xVProd,
                                    "",
                                    "0"});
           
        }
        
        lbItem.setText(funcoes.StrZero(item, Byte.parseByte("2")));
        //Totalização Nfe
        
        d = elem.getElementsByTagName("nNF");
        xTag = d.item(0).getTextContent();
        txtFatura.setText(xTag);
        
        d = elem.getElementsByTagName("vNF");
        xTag = d.item(0).getTextContent();
        txtTotalNota.setText(funcoes.formataMoeda(xTag,"BD"));
               

        int xx = 0;
        d = elem.getElementsByTagName("vBC");
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }
        xTag = d.item(xx).getTextContent();
        txtBaseICMS.setText(funcoes.formataMoeda(xTag,"BD"));
        
        d = elem.getElementsByTagName("vICMS");
        xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }
        xTag = d.item(xx).getTextContent();
        txtICMS.setText(funcoes.formataMoeda(xTag,"BD"));
       
        d = elem.getElementsByTagName("vBCST");
        xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }

        xTag = d.item(xx).getTextContent();
        txtBaseICMST.setText(funcoes.formataMoeda(xTag,"BD"));
        
        d = elem.getElementsByTagName("vST");
        xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }

        xTag = d.item(xx).getTextContent();
        txtICMST.setText(funcoes.formataMoeda(xTag,"BD"));
        
       
         d = elem.getElementsByTagName("vProd");
         xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }
         xTag = d.item(xx).getTextContent();
        txtTotalProdutos.setText(funcoes.formataMoeda(xTag,"BD"));
        
        d = elem.getElementsByTagName("vFrete");
        xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }

        xTag = d.item(xx).getTextContent();
        txtFrete.setText(funcoes.formataMoeda(xTag,"BD"));

         d = elem.getElementsByTagName("vSeg");
        xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }

         xTag = d.item(xx).getTextContent();
        txtSeguro.setText(funcoes.formataMoeda(xTag,"BD"));
        
         d = elem.getElementsByTagName("vDesc");
        xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }

         xTag = d.item(xx).getTextContent();
        txtDescontos.setText(funcoes.formataMoeda(xTag,"BD"));
        
         d = elem.getElementsByTagName("vIPI");
        xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }

         xTag = d.item(xx).getTextContent();
        txtIPI.setText(funcoes.formataMoeda(xTag,"BD"));
        
         d = elem.getElementsByTagName("vOutro");
        xx = 0;
        for(int j=0; j<300; j++)  
        { 
           try
           {
            xTag = d.item(j).getTextContent();
           }catch (Exception erro)
           {
             xx = j - 1;
             break;
            
           }
        }

         xTag = d.item(xx).getTextContent();
        txtDespesas.setText(funcoes.formataMoeda(xTag,"BD"));
        
        
        
        }catch(Exception erro)
        {
          
          JOptionPane.showMessageDialog(null,"Não foi possível importar XML." +
                                              "\n" + "- Arquivo XML pode estar corrompido" +
                                              "\n" + "- XML da NF-e Processada pode estar fora do padrão");
          funcoes.HabilitaCampos(rootPane, false);
            
        }
       
    }//GEN-LAST:event_btnXMLActionPerformed

    private void txtCodEmpresaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodEmpresaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 114) //tecla F3 para pesquisa
        {
            btnPesquisaEmpresaActionPerformed(null);
        }
    }//GEN-LAST:event_txtCodEmpresaKeyPressed

    private void txtCodClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodClienteKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 114) //tecla F3 para pesquisa
        {
            btnPesquisaClienteActionPerformed(null);
        }        
    }//GEN-LAST:event_txtCodClienteKeyPressed

    private void txtOCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOCFocusLost
        // TODO add your handling code here:
        if (!txtOC.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " where COT_codigo_id = " + txtOC.getText();
            try {
                rs = AcessoDados.Selecao("COTACAO", vmCampos, vmCondicao_Consulta);
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(null, "N° O.C não existe");
                    txtOC.setText(null);
                    txtOC.setText(null);
                    txtOC.requestFocus();
                    return;
                }
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_txtOCFocusLost
    public class SimpleErrorHandler implements ErrorHandler  
    {  
        public void error(SAXParseException exception) {  
             System.out.println("error: "+ exception.getMessage());  
             //txtRetorno.setText("error: "+exception.getMessage());
         }  
                
         public void fatalError(SAXParseException exception) {  
             System.out.println("fatalError: "+ exception.getMessage());  
             //txtRetorno.setText("fatalError: "+exception.getMessage());
         }  
                
         public void warning(SAXParseException exception) {  
             System.out.println("warning: "+ exception.getMessage());  
             //txtRetorno.setText("warning: "+ exception.getMessage());
         }  
    }  
   
    
    public String RetornaPesoProduto(String vCodigoProduto)
    {

        String VRetorno = "";
        String vmCampos = " prod_peso_liquido, prod_peso_bruto ";
        String vmCondicao_Consulta = " where prod_codigo_id = " + vCodigoProduto;
            try
            {
                rs = AcessoDados.Selecao("produtos", vmCampos, vmCondicao_Consulta);
                if (rs.next())
                {
                    VRetorno = rs.getString("prod_peso_liquido").replace(".", ",") + "," + rs.getString("prod_peso_bruto").replace(".", ",");
                }
                rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }

        return VRetorno;
    }
    public void MontaColunasGrid()
    {
        grDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {"","* Código","Produto","UM","QTDE","Vlr Unit.","Desc.%","* CFOP","CST","%","ICMS","%","IPI","Subst.","TOTAL","","lote"
            }) { boolean[]  canEdit = new boolean [] {
                false, true, false, false, true, true, true, true, true, true, false, true, false, true,false,true,false
            };
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

        });

        
        grDados.getColumnModel().getColumn(1).setPreferredWidth(45);  //Codigo Produto
        grDados.getColumnModel().getColumn(2).setPreferredWidth(230); //Produto
        grDados.getColumnModel().getColumn(3).setPreferredWidth(5);  //UM
        grDados.getColumnModel().getColumn(4).setPreferredWidth(30);  //Qtde
        grDados.getColumnModel().getColumn(5).setPreferredWidth(40);  //Valor Unitario
        grDados.getColumnModel().getColumn(6).setPreferredWidth(20);  //Desconto
        grDados.getColumnModel().getColumn(7).setPreferredWidth(20);  //Cfop
        grDados.getColumnModel().getColumn(8).setPreferredWidth(10);  //Cst
        grDados.getColumnModel().getColumn(9).setPreferredWidth(8);  //% Icms
        grDados.getColumnModel().getColumn(10).setPreferredWidth(30);  // Icms
        grDados.getColumnModel().getColumn(11).setPreferredWidth(8);  //%ipi
        grDados.getColumnModel().getColumn(12).setPreferredWidth(30);  //ipi
        grDados.getColumnModel().getColumn(13).setPreferredWidth(20); //icms sub
        grDados.getColumnModel().getColumn(14).setPreferredWidth(40); //Total
        grDados.getColumnModel().getColumn(15).setPreferredWidth(10); //Botao

        DefaultTableCellRenderer esquerda = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        
        TableColumn codigoColumn = grDados.getColumnModel().getColumn(0);
        TableColumn LoteColumn = grDados.getColumnModel().getColumn(16);

        codigoColumn.setMinWidth(0);
        codigoColumn.setMaxWidth(0);

        LoteColumn.setMinWidth(0);
        LoteColumn.setMaxWidth(0);

        esquerda.setHorizontalAlignment(SwingConstants.LEFT);
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        
        //grDados.getColumnModel().getColumn(1).setCellRenderer(esquerda);
        //grDados.getColumnModel().getColumn(4).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(5).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(6).setCellRenderer(direita);
        grDados.getColumnModel().getColumn(7).setCellRenderer(centralizado);
        grDados.getColumnModel().getColumn(8).setCellRenderer(centralizado);
        //grDados.getColumnModel().getColumn(9).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(10).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(11).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(12).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(13).setCellRenderer(direita);
        //grDados.getColumnModel().getColumn(14).setCellRenderer(direita);

        ButtonColumn buttonColumn = new ButtonColumn(grDados, 15);


    }

  public  void   TableEnterAction(final JTable ao_table) {
      
      InputMap
      im = ao_table.getInputMap(ao_table.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
      KeyStroke lo_key_enter = KeyStroke.getKeyStroke("ENTER");
      im.put(lo_key_enter, im.get(KeyStroke.getKeyStroke(KeyEvent.VK_GREATER, 0)));
      Action
      enterAction = new AbstractAction() {
                public  void    actionPerformed(ActionEvent e)
                {
                    // Faz o que quiser.
                    int Coluna = ao_table.getSelectedColumn();
                    int linha = ao_table.getSelectedRow();

                    int c =  ao_table.getSelectedRow();
                    int d = ao_table.getRowCount();

                    if(ao_table.getSelectedColumn() == 14)
                    {
                        int xx1 = linha + 1;
                        int xx2 = ao_table.getRowCount();
                        if(xx1 == xx2)
                        {
                        javax.swing.table.DefaultTableModel dtm = (javax.swing.table.DefaultTableModel)ao_table.getModel();
                           dtm.addRow(new Object[]{"","","","","","","","","","","","","","","","",""});
                           Coluna = ao_table.getSelectedColumn();
                           linha++;
                           ao_table.setCellSelectionEnabled(true);
                           //jTable1.setSurrendersFocusOnKeystroke(true);
                           ao_table.setRowSelectionInterval(linha, linha);
                           ao_table.setColumnSelectionInterval(1, 1);
                           //ao_table.editCellAt(linha, 1);
                        }else
                        {
                           ao_table.setCellSelectionEnabled(true);
                           //jTable1.setSurrendersFocusOnKeystroke(true);
                           ao_table.setRowSelectionInterval(linha + 1, linha + 1);
                           ao_table.setColumnSelectionInterval(1, 1);
                           //ao_table.editCellAt(linha + 1, 1);
                            
                        }

                    }else
                    {
                    ao_table.setCellSelectionEnabled(true);
                    ao_table.setColumnSelectionInterval(Coluna + 1, Coluna + 1);
                    
                    ao_table.editCellAt(linha, Coluna + 1);
                    String CodigoProduto = ao_table.getValueAt(linha, 1).toString();

                    if(ao_table.getSelectedColumn() == 5) //qtde coluna 4 saida 5
                    {
                        try
                        {
                           double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString().replace(".", "").replace(",", "."));
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("1", ao_table.getSelectedRow(), 4); // qtde
                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"T"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"T"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"T"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }

                    if(ao_table.getSelectedColumn() == 6) //valor unit coluna 5 saida 6
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString().replace(".", "").replace(",", "."));
                         String newValor = funcoes.formataMoeda(ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString(),"T");
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 5); // valor
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,01", ao_table.getSelectedRow(), 5); // valor

                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }


                    if(ao_table.getSelectedColumn() == 7) //DESCONTO unit coluna 6 saida 7
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString().replace(".", "").replace(",", "."));
                         String newValor = funcoes.formataPercentual(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString());
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 6); // desconto
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 6); // desconto
                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }

                    if(ao_table.getSelectedColumn() == 8) //cfop saida 7 / 8
                    {
                        String CFOP = ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString();
                        if(!CFOP.equals("") && !CFOP.equals("0"))
                        if(!ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString().contains("."))
                        {
                        try
                        {
                            CFOP = ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString().substring(0,1) + ".";
                            CFOP += ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString().substring(1,4);
                        }catch (Exception ercf)
                        {
                            CFOP = "";
                        }
                        }else
                        {
                            CFOP = ao_table.getValueAt(ao_table.getSelectedRow(), 7).toString();
                        }



                        if(CFOP.equals(""))
                        {
                            ao_table.setValueAt("1.102", ao_table.getSelectedRow(), 7); // cfop
                            CFOP = "1.102";
                        }
                        String vmCampos = "*";
                        String vmCondicao_Consulta = " WHERE cfop_cfop = '" + CFOP + "'";
                        try
                        {
                           rs = AcessoDados.Selecao("cfop", vmCampos, vmCondicao_Consulta);
                           if (!rs.next())
                           {
                              JOptionPane.showMessageDialog(null,"CFOP não cadastrado no sistema!");
                              ao_table.setValueAt("", linha, 7); //cfop
                              ao_table.setColumnSelectionInterval(7, 7);
                              ao_table.setRowSelectionInterval(linha, linha);
                              //ao_table.editCellAt(linha, 7);

                              return;
                           }
                           rs.close();
                           ao_table.setValueAt(CFOP, ao_table.getSelectedRow(), 7); // cfop
                           }catch (Exception ecfop) {
                              ecfop.printStackTrace();
                           }
                    }

                    if(ao_table.getSelectedColumn() == 9) //cst coluna 8 saida 9
                    {
                         String CST = ao_table.getValueAt(ao_table.getSelectedRow(), 8).toString();
                         if(CST.equals(""))
                             CST = "000";
                         if(!CST.equals("000")
                         && !CST.equals("010")
                         && !CST.equals("020")
                         && !CST.equals("030")
                         && !CST.equals("040")
                         && !CST.equals("041")
                         && !CST.equals("050")
                         && !CST.equals("051")
                         && !CST.equals("060")
                         && !CST.equals("070")
                         && !CST.equals("090")
                         && !CST.equals("100")
                         && !CST.equals("110")
                         && !CST.equals("120")
                         && !CST.equals("130")
                         && !CST.equals("140")
                         && !CST.equals("141")
                         && !CST.equals("150")
                         && !CST.equals("151")
                         && !CST.equals("160")
                         && !CST.equals("170")
                         && !CST.equals("190"))
                         {
                             JOptionPane.showMessageDialog(null,"CST Inválida.");
                             ao_table.setValueAt("", linha, 8); //cfop
                             ao_table.setColumnSelectionInterval(8, 8);
                             ao_table.setRowSelectionInterval(linha, linha);
                             //ao_table.editCellAt(linha, 8);
                             return;
                         }
                         ao_table.setValueAt(CST, linha, 8); //Cst
                    }


                    if(ao_table.getSelectedColumn() == 10) //%icms coluna 9 saida 10
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 9).toString().replace(",", "."));
                         String newValor = funcoes.formataPercentual(ao_table.getValueAt(ao_table.getSelectedRow(), 9).toString());
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 9); // %icms
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 9); // %icm
                        }
                        vmAliqICMS = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 9).toString().replace(",", "."));
                        try{
                          vmAliqIPI = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 11).toString().replace(",", "."));
                        }catch(Exception ipi)
                        {
                            vmAliqIPI = 0;
                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }

                    if(ao_table.getSelectedColumn() == 12) //%ipi coluna 11 saida 12
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 11).toString().replace(",", "."));
                         String newValor = funcoes.formataPercentual(ao_table.getValueAt(ao_table.getSelectedRow(), 11).toString());
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 11); // %icms
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 11); // %icm
                        }
                        vmAliqICMS = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 9).toString().replace(",", "."));
                        vmAliqIPI = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 11).toString().replace(",", "."));
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }


                    if(ao_table.getSelectedColumn() == 14) //subst coluna 13 saida 14
                    {
                        try
                        {
                         double xx = Double.parseDouble(ao_table.getValueAt(ao_table.getSelectedRow(), 13).toString().replace(".", "").replace(",", "."));
                         String newValor = funcoes.formataMoeda(ao_table.getValueAt(ao_table.getSelectedRow(), 13).toString(),"T");
                         ao_table.setValueAt(newValor, ao_table.getSelectedRow(), 13); // valor
                        }catch(Exception er)
                        {
                            ao_table.setValueAt("0,00", ao_table.getSelectedRow(), 13); // valor
                        }
                        CalculaImposto(ao_table.getValueAt(ao_table.getSelectedRow(), 6).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 4).toString(),ao_table.getValueAt(ao_table.getSelectedRow(), 5).toString());
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_ICMS),"BD"), ao_table.getSelectedRow(), 10);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_IPI),"BD"), ao_table.getSelectedRow(), 12);
                        ao_table.setValueAt(funcoes.formataMoeda(Double.toString(variaveis.vm_Total),"BD"), ao_table.getSelectedRow(), 14);
                        calculaValores();

                    }
                    
                    if(!CodigoProduto.equals(""))
                    {
                        if(ao_table.getSelectedColumn() == 2) //Produto
                        {
                               
                        //Buscando Produto
                        String vmCampos = "*";
                        String vmCondicao_Consulta = " inner join unidade_de_medida on (prod_unid_codigo_id = unid_codigo_id) WHERE prod_codigo_produto = '" + CodigoProduto + "'";
                        try
                        {
                          rs = AcessoDados.Selecao("produtos", vmCampos, vmCondicao_Consulta);
                          if (!rs.next())
                          {
                              JOptionPane.showMessageDialog(null,"Produto não cadastrado no sistema");
                              ao_table.setValueAt("", linha, 1); //Codigo Produto
                              ao_table.setValueAt("", linha, 2); // DescriçãoProduto
                              ao_table.setValueAt("", linha, 3); // Unidade Medida
                              ao_table.setValueAt("", linha, 0); // ID Produto
                              ao_table.setValueAt("", linha, 8); // cst
                              ao_table.setValueAt("", linha, 9); // %icm
                              ao_table.setValueAt("", linha, 11); // %ipi
                              ao_table.setValueAt("", linha, 5); // %venda
                              ao_table.setValueAt("", linha, 6); // %desconto
                              ao_table.setValueAt("", linha, 13); // substituicao
                              ao_table.setValueAt("", linha, 14); // total


                              ao_table.setColumnSelectionInterval(1, 1);
                              return;
                          }
                             ao_table.setValueAt("0", linha, 16); // Lote
                             ao_table.setValueAt(rs.getString("prod_codigo_produto"), linha, 1); // Codigo Produto
                             ao_table.setValueAt(rs.getString("prod_descricao"), linha, 2); // DescriçãoProduto
                             ao_table.setValueAt(rs.getString("unid_unidade"), linha, 3); // Unidade Medida
                             ao_table.setValueAt(rs.getString("prod_codigo_id"), linha, 0); // ID Produto
                             //ao_table.setValueAt(rs.getString("prod_cst"), linha, 8); // cst
                             //double pVenda = rs.getDouble("prod_preco_venda");
                             //if(pVenda > 0) ao_table.setValueAt(funcoes.formataMoeda(rs.getString("prod_preco_venda"),"T"), linha, 5); // perco venda
                             //ao_table.setValueAt(funcoes.formataPercentual(rs.getString("prod_icms").replace(".", ",")), linha, 9); // %icm
                             //ao_table.setValueAt(funcoes.formataPercentual(rs.getString("prod_aliq_de_ipi").replace(".", ",")), linha, 11); // %ipi

                             //vmAliqICMS = rs.getDouble("PROD_ICMS");
                             //vmAliqIPI = rs.getDouble("prod_aliq_de_ipi");
                             //vmAliqDDIF = rs.getDouble("prod_aliq_diferenciada_icms");
                             //vmREDUCAOICMS = rs.getDouble("prod_reducao_icms");

                             rs.close();
                         }catch (Exception r) {
                              r.printStackTrace();
                        }
                        }

                        int nCodigo = 0;
                        //verifica duplicidade de codigo
                        for(int i = 0; i <= grDados.getRowCount() - 1; i++)
                        {
                        String XCodigo = ao_table.getValueAt(i, 1).toString();
                        if(XCodigo.equals(CodigoProduto))
                        {
                            nCodigo++;
                        }
                        if(nCodigo > 1)
                        {
                              JOptionPane.showMessageDialog(null,"Produto já lançado...");
                              ao_table.setValueAt("", linha, 1); //Codigo Produto
                              ao_table.setValueAt("", linha, 2); // DescriçãoProduto
                              ao_table.setValueAt("", linha, 3); // Unidade Medida
                              ao_table.setValueAt("", linha, 0); // ID Produto
                              ao_table.setValueAt("", linha, 8); // cst
                              ao_table.setValueAt("", linha, 9); // %icm
                              ao_table.setValueAt("", linha, 11); // %ipi
                              ao_table.setValueAt("", linha, 5); // %venda
                              ao_table.setValueAt("", linha, 6); // %desconto
                              ao_table.setValueAt("", linha, 13); // substituicao
                              ao_table.setValueAt("", linha, 14); // total
                              ao_table.setColumnSelectionInterval(1, 1);
                              return;
                        }
                        }


                        }else
                        {
                          javax.swing.table.DefaultTableModel Ex = (javax.swing.table.DefaultTableModel)ao_table.getModel();
                          String CodigoP = ao_table.getValueAt(linha, 1).toString();
                          String DescP = ao_table.getValueAt(linha, 2).toString();
                          if(CodigoP.equals("") && DescP.equals("")) 
                          {Ex.removeRow(ao_table.getSelectedRow());
                           ao_table.transferFocus();
                          }
                          return;
                        }
                    }
                }
        };

        ao_table.getActionMap().put(im.get(lo_key_enter), enterAction);
    }

    public void CalculaParcelas()
    {
        vdiferenca =0.00;
        DefaultTableModel tableModel =(DefaultTableModel) grParcelas.getModel();
        tableModel.setNumRows(0);

        //Dados pagamento
        String vmCampos = " * ";
        String vmCondicao_Consulta = "";
        if(!txtCodCondicaoPagamento.getText().equals(""))
         vmCondicao_Consulta = " WHERE cpgto_codigo_id = " + txtCodCondicaoPagamento.getText();
        else
         vmCondicao_Consulta = " WHERE cpgto_codigo_id = -1" ;   
        try
        {
        rs = AcessoDados.Selecao("condicao_pagamento", vmCampos, vmCondicao_Consulta);
        if (rs.next())
        {
          int QtdeParcela = rs.getInt("cpgto_qtde_parcelas");
          int PrazoMedio = rs.getInt("cpgto_prazo_medio");
          int Prazo = 0;
          Double vTotalNota = Double.parseDouble(txtTotalNota.getText().replace(".", "").replace(",", "."));
          vTotalNota = vTotalNota / QtdeParcela;
          String valorParcela = funcoes.formataMoeda(Double.toString(vTotalNota),"BD");
          Double vSomaParcelas = QtdeParcela * Double.parseDouble(valorParcela.replace(".", "").replace(",", "."));
          String NovovalorParcela = funcoes.formataMoeda(Double.toString(vSomaParcelas),"BD");

          if(!NovovalorParcela.equals(txtTotalNota.getText()))
          {
            Double Vvalor1 = Double.parseDouble(NovovalorParcela.replace(".", "").replace(",", "."));
            Double Vvalor2 = Double.parseDouble(txtTotalNota.getText().replace(".", "").replace(",", "."));
            vdiferenca = Vvalor2 - Vvalor1;
            DecimalFormat nf = new DecimalFormat("#,##0.00");
            vdiferenca = Double.parseDouble(nf.format(vdiferenca).replace(",", "."));
            //if(vdiferenca < 0) vdiferenca = vdiferenca * -1;

          }
          for (int i = 0; i < QtdeParcela; i++) {
            //joga diferenca se existir para ultima parcela
            if(i == QtdeParcela -1)
            {
              vTotalNota = vTotalNota + vdiferenca;
            }
            Prazo += PrazoMedio;
            //int dia = Integer.parseInt(txtDataEmissao.getText().substring(0,2));
            //int ano = Integer.parseInt(txtDataEmissao.getText().substring(8,10));
            //int mes = Integer.parseInt(txtDataEmissao.getText().substring(3,5));

            String ddd = funcoes.formataDataCalculo(txtDataEmissao.getText());
            Date a = new Date(ddd);
            a.setDate(a.getDate() + Prazo);
            SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
            dtm = (javax.swing.table.DefaultTableModel)grParcelas.getModel();
            dtm.addRow(new Object[]{formatarDate.format(a),
                                   funcoes.formataMoeda(Double.toString(vTotalNota),"BD")});

        }
        }
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

    }
  

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmEntradaNotas dialog = new FrmEntradaNotas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisaBancoID;
    private javax.swing.JButton btnPesquisaCliente;
    private javax.swing.JButton btnPesquisaCondicaoPagamento;
    private javax.swing.JButton btnPesquisaEmpresa;
    private javax.swing.JButton btnPesquisaFormaPagamento;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvar1;
    private javax.swing.JButton btnXML;
    private javax.swing.JTable grDados;
    private javax.swing.JTable grParcelas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel lbID;
    private javax.swing.JLabel lbItem;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JTextField txtBancoDescricao;
    private javax.swing.JTextField txtBancoID;
    private javax.swing.JTextField txtBaseICMS;
    private javax.swing.JTextField txtBaseICMST;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCodCliente;
    private javax.swing.JTextField txtCodCondicaoPagamento;
    private javax.swing.JTextField txtCodEmpresa;
    private javax.swing.JTextField txtCodFormaPagamento;
    private javax.swing.JTextField txtCondicaoPagamento;
    private javax.swing.JFormattedTextField txtDataEmissao;
    private javax.swing.JFormattedTextField txtDataEntrada;
    private javax.swing.JTextField txtDescontos;
    private javax.swing.JTextField txtDespesas;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtFatura;
    private javax.swing.JTextField txtFormaPagamento;
    private javax.swing.JTextField txtFrete;
    private javax.swing.JTextField txtICMS;
    private javax.swing.JTextField txtICMST;
    private javax.swing.JTextField txtIPI;
    private javax.swing.JTextField txtNota;
    private javax.swing.JTextField txtOC;
    private javax.swing.JTextField txtSeguro;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtTotalNota;
    private javax.swing.JTextField txtTotalProdutos;
    // End of variables declaration//GEN-END:variables

}
