/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmFaturamento.java
 *
 * Created on 29/03/2010, 08:51:01
 */

package sae;
import Classes.*;
import java.awt.AWTKeyStroke;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableCellRenderer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import java.text.NumberFormat;
import java.text.DecimalFormat;

import javax.*;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.annotations.XStreamAlias;
import com.thoughtworks.xstream.io.xml.DomDriver;
import java.io.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.*;
import oracle.toplink.essentials.sessions.Connector;
import org.omg.CORBA.portable.ValueInputStream;
import org.xml.sax.ErrorHandler;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;

/**
 *
 * @author Thiago
 */
public class FrmFaturamento extends javax.swing.JDialog {
    claVariaveis variaveis = new claVariaveis();
    claAcessoDados AcessoDados = new claAcessoDados();
    claFuncoes funcoes = new claFuncoes();
    private ResultSet rs;
    private ResultSet rsTitulos;
    private ResultSet rsEstoque;
    private String vmCodigoPagamento;
    private String vmFormaPagamento;
    private String vmBanco;
    private DefaultTableModel dtm = new DefaultTableModel();
    Double vdiferenca = 0.00 ;
    Connection conn = new claConexao().getConexao();
    StringBuffer xml = new StringBuffer("<?xml version='1.0' encoding='UTF-8' ?>");
    Assinador AsinarXML = new Assinador();


    /** Creates new form FrmFaturamento */
    public FrmFaturamento(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        funcoes.F_AtribuirClasse(rootPane);
        btnSalvar.setFocusTraversalKeysEnabled(false);

        grParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {"Vencimento","Parcela"
            }) { boolean[]  canEdit = new boolean [] {
                false, false
            };
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbSituacao = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        txtNotaID = new javax.swing.JFormattedTextField();
        txtPedido = new javax.swing.JFormattedTextField();
        txtDataPedido = new javax.swing.JFormattedTextField();
        jLabel28 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        txtCodCliente = new javax.swing.JFormattedTextField();
        jLabel33 = new javax.swing.JLabel();
        txtCodFormaPagamento = new javax.swing.JTextField();
        btnPesquisaFormaPagamento = new javax.swing.JButton();
        txtFormaPagamento = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtBancoID = new javax.swing.JTextField();
        btnPesquisaBancoID = new javax.swing.JButton();
        txtBancoDescricao = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtEmissao = new javax.swing.JFormattedTextField();
        txtSaida = new javax.swing.JFormattedTextField();
        cbFrete = new javax.swing.JComboBox();
        cbIPI = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtTransportadoraID = new javax.swing.JTextField();
        btnPesquisaUnidade = new javax.swing.JButton();
        txtTransportadora = new javax.swing.JTextField();
        ddlFrete = new javax.swing.JComboBox();
        txtQtde = new javax.swing.JTextField();
        txtEspecie = new javax.swing.JTextField();
        txtPesoBruto = new javax.swing.JTextField();
        txtPesoLiquido = new javax.swing.JTextField();
        txtPlaca = new javax.swing.JFormattedTextField();
        jLabel29 = new javax.swing.JLabel();
        txtChaveNFE = new javax.swing.JTextField();
        txtProtocolo = new javax.swing.JTextField();
        txtSituacaoNFE = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtBaseICMS = new javax.swing.JTextField();
        txtICMS = new javax.swing.JTextField();
        txtBaseICMSSUB = new javax.swing.JTextField();
        txtICMSSUB = new javax.swing.JTextField();
        txtFrete = new javax.swing.JTextField();
        txtDespesas = new javax.swing.JTextField();
        txtIPI = new javax.swing.JTextField();
        txtPIS = new javax.swing.JTextField();
        txtCOFINS = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnSalvar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txtProdutos = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtTotalNota = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        grParcelas = new javax.swing.JTable();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInfComplementares = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Faturamento de Pedido de Venda");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel1.setText("Pedido:");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel2.setText("Data Pedido:");
        jLabel2.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel3.setText("Situação Nota:");
        jLabel3.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel4.setText("Série:");
        jLabel4.setToolTipText("");

        cbSituacao.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        cbSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Venda de Mercadorias", "Entrada de Mercadorias", "Devolução de Mercadorias", "Nota SImples Remessa", "Nota Cancelamento", "Nota de Bonificação" }));
        cbSituacao.setToolTipText("");
        cbSituacao.setName("not_tipo"); // NOI18N

        jLabel27.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel27.setText("Nota Fiscal:");
        jLabel27.setToolTipText("");

        txtSerie.setColumns(2);
        txtSerie.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtSerie.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSerie.setText("1");
        txtSerie.setToolTipText("Número");
        txtSerie.setName("not_serie"); // NOI18N

        txtNotaID.setBackground(new java.awt.Color(218, 228, 224));
        txtNotaID.setColumns(8);
        txtNotaID.setEditable(false);
        txtNotaID.setForeground(new java.awt.Color(0, 0, 0));
        txtNotaID.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNotaID.setToolTipText("Código");
        txtNotaID.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtNotaID.setEnabled(false);
        txtNotaID.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtNotaID.setName(""); // NOI18N

        txtPedido.setBackground(new java.awt.Color(218, 228, 224));
        txtPedido.setColumns(8);
        txtPedido.setEditable(false);
        txtPedido.setForeground(new java.awt.Color(0, 0, 0));
        txtPedido.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPedido.setToolTipText("Código");
        txtPedido.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtPedido.setEnabled(false);
        txtPedido.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtPedido.setName("not_ped_codigo_id"); // NOI18N

        txtDataPedido.setBackground(new java.awt.Color(218, 228, 224));
        txtDataPedido.setColumns(10);
        txtDataPedido.setEditable(false);
        txtDataPedido.setForeground(new java.awt.Color(0, 0, 0));
        txtDataPedido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataPedido.setToolTipText("");
        txtDataPedido.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtDataPedido.setEnabled(false);
        txtDataPedido.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDataPedido.setName(""); // NOI18N

        jLabel28.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel28.setText("Nome:");
        jLabel28.setToolTipText("");

        txtCliente.setBackground(new java.awt.Color(218, 228, 224));
        txtCliente.setEditable(false);
        txtCliente.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCliente.setToolTipText("");
        txtCliente.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtCliente.setEnabled(false);
        txtCliente.setName(""); // NOI18N

        txtCodCliente.setBackground(new java.awt.Color(218, 228, 224));
        txtCodCliente.setColumns(8);
        txtCodCliente.setEditable(false);
        txtCodCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtCodCliente.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCodCliente.setToolTipText("Código");
        txtCodCliente.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtCodCliente.setEnabled(false);
        txtCodCliente.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodCliente.setName("not_par_codigo_id"); // NOI18N

        jLabel33.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel33.setText("Forma de Pgto:");
        jLabel33.setToolTipText("");

        txtCodFormaPagamento.setColumns(8);
        txtCodFormaPagamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCodFormaPagamento.setToolTipText("Código");
        txtCodFormaPagamento.setName(""); // NOI18N
        txtCodFormaPagamento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodFormaPagamentoFocusLost(evt);
            }
        });
        txtCodFormaPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodFormaPagamentoKeyPressed(evt);
            }
        });

        btnPesquisaFormaPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaFormaPagamento.setToolTipText("Pesquisa Forma Pgto");
        btnPesquisaFormaPagamento.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaFormaPagamentoActionPerformed(evt);
            }
        });

        txtFormaPagamento.setEditable(false);
        txtFormaPagamento.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtFormaPagamento.setForeground(new java.awt.Color(102, 102, 255));
        txtFormaPagamento.setToolTipText("");
        txtFormaPagamento.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtFormaPagamento.setFocusable(false);
        txtFormaPagamento.setName(""); // NOI18N

        jLabel34.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel34.setText("Banco:");
        jLabel34.setToolTipText("");
        jLabel34.setName(""); // NOI18N

        txtBancoID.setColumns(8);
        txtBancoID.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtBancoID.setToolTipText("Código");
        txtBancoID.setDisabledTextColor(new java.awt.Color(153, 153, 153));
        txtBancoID.setName(""); // NOI18N
        txtBancoID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBancoIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBancoIDFocusLost(evt);
            }
        });
        txtBancoID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBancoIDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBancoIDKeyReleased(evt);
            }
        });

        btnPesquisaBancoID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaBancoID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaBancoID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaBancoIDActionPerformed(evt);
            }
        });
        btnPesquisaBancoID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnPesquisaBancoIDFocusLost(evt);
            }
        });

        txtBancoDescricao.setEditable(false);
        txtBancoDescricao.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtBancoDescricao.setForeground(new java.awt.Color(102, 102, 255));
        txtBancoDescricao.setToolTipText("");
        txtBancoDescricao.setFocusable(false);
        txtBancoDescricao.setName(""); // NOI18N
        txtBancoDescricao.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbSituacao, 0, 543, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNotaID, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCodFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisaFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtBancoID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisaBancoID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFormaPagamento)
                            .addComponent(txtBancoDescricao)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCliente)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtNotaID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtDataPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFormaPagamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCodFormaPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel33))
                    .addComponent(btnPesquisaFormaPagamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtBancoID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34))
                    .addComponent(btnPesquisaBancoID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBancoDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel5.setText("Emissão:");
        jLabel5.setToolTipText("");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Saída:");
        jLabel6.setToolTipText("");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel7.setText("Incorporar Frete:");
        jLabel7.setToolTipText("");

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel8.setText("Incorporar IPI:");
        jLabel8.setToolTipText("");

        txtEmissao.setBackground(new java.awt.Color(218, 228, 224));
        txtEmissao.setColumns(10);
        txtEmissao.setEditable(false);
        txtEmissao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEmissao.setText("00/00/0000");
        txtEmissao.setToolTipText("");
        txtEmissao.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtEmissao.setEnabled(false);
        txtEmissao.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtEmissao.setName("not_emissao"); // NOI18N

        txtSaida.setColumns(10);
        try {
            txtSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtSaida.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSaida.setToolTipText("");
        txtSaida.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtSaida.setName("not_saida"); // NOI18N
        txtSaida.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSaidaFocusLost(evt);
            }
        });

        cbFrete.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        cbFrete.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SIM", "NÃO" }));
        cbFrete.setSelectedIndex(1);
        cbFrete.setToolTipText("");
        cbFrete.setName("not_incorparar_frete"); // NOI18N

        cbIPI.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        cbIPI.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SIM", "NÃO" }));
        cbIPI.setSelectedIndex(1);
        cbIPI.setToolTipText("");
        cbIPI.setName("not_incorporar_ipi"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbFrete, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbIPI, 0, 102, Short.MAX_VALUE)
                    .addComponent(txtEmissao, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(txtSaida, 0, 1, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbIPI, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel9.setText("Tranportadora:");
        jLabel9.setToolTipText("");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel10.setText("Frete:");
        jLabel10.setToolTipText("");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel11.setText("Placa:");
        jLabel11.setToolTipText("");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel12.setText("Quantidade:");
        jLabel12.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel13.setText("Espécie:");
        jLabel13.setToolTipText("");

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel14.setText("Peso Bruto:");
        jLabel14.setToolTipText("");

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel15.setText("Peso Liquído:");
        jLabel15.setToolTipText("");

        txtTransportadoraID.setColumns(8);
        txtTransportadoraID.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtTransportadoraID.setToolTipText("Código");
        txtTransportadoraID.setName("not_tra_codigo_id"); // NOI18N
        txtTransportadoraID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTransportadoraIDFocusLost(evt);
            }
        });
        txtTransportadoraID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTransportadoraIDKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTransportadoraIDKeyReleased(evt);
            }
        });

        btnPesquisaUnidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Pesquisar.gif"))); // NOI18N
        btnPesquisaUnidade.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnPesquisaUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaUnidadeActionPerformed(evt);
            }
        });

        txtTransportadora.setEditable(false);
        txtTransportadora.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtTransportadora.setForeground(new java.awt.Color(102, 102, 255));
        txtTransportadora.setToolTipText("");
        txtTransportadora.setFocusable(false);
        txtTransportadora.setName(""); // NOI18N
        txtTransportadora.setRequestFocusEnabled(false);

        ddlFrete.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        ddlFrete.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0 - Emitente", "1 - Destinatário" }));
        ddlFrete.setToolTipText("");
        ddlFrete.setName("not_responsavel_frete"); // NOI18N
        ddlFrete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ddlFreteActionPerformed(evt);
            }
        });

        txtQtde.setBackground(new java.awt.Color(218, 228, 224));
        txtQtde.setColumns(13);
        txtQtde.setEditable(false);
        txtQtde.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtQtde.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtQtde.setToolTipText("Valor");
        txtQtde.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtQtde.setEnabled(false);
        txtQtde.setFocusable(false);
        txtQtde.setName("not_quantidade_tranportadora"); // NOI18N
        txtQtde.setRequestFocusEnabled(false);

        txtEspecie.setColumns(20);
        txtEspecie.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtEspecie.setToolTipText("");
        txtEspecie.setName("not_especie"); // NOI18N

        txtPesoBruto.setBackground(new java.awt.Color(218, 228, 224));
        txtPesoBruto.setColumns(13);
        txtPesoBruto.setEditable(false);
        txtPesoBruto.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtPesoBruto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPesoBruto.setToolTipText("Valor");
        txtPesoBruto.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtPesoBruto.setEnabled(false);
        txtPesoBruto.setName("not_peso_bruto"); // NOI18N

        txtPesoLiquido.setBackground(new java.awt.Color(218, 228, 224));
        txtPesoLiquido.setColumns(13);
        txtPesoLiquido.setEditable(false);
        txtPesoLiquido.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtPesoLiquido.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPesoLiquido.setToolTipText("Valor");
        txtPesoLiquido.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtPesoLiquido.setEnabled(false);
        txtPesoLiquido.setName("not_peso_liquido"); // NOI18N

        txtPlaca.setColumns(8);
        try {
            txtPlaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtPlaca.setToolTipText("");
        txtPlaca.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtPlaca.setName("not_placa_transportadora"); // NOI18N

        jLabel29.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel29.setText("Chave:");
        jLabel29.setToolTipText("");

        txtChaveNFE.setBackground(new java.awt.Color(218, 228, 224));
        txtChaveNFE.setColumns(70);
        txtChaveNFE.setEditable(false);
        txtChaveNFE.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtChaveNFE.setToolTipText("");
        txtChaveNFE.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtChaveNFE.setEnabled(false);
        txtChaveNFE.setName("not_chave_nfe"); // NOI18N

        txtProtocolo.setBackground(new java.awt.Color(218, 228, 224));
        txtProtocolo.setColumns(30);
        txtProtocolo.setEditable(false);
        txtProtocolo.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtProtocolo.setToolTipText("");
        txtProtocolo.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtProtocolo.setEnabled(false);
        txtProtocolo.setName("not_protocolo_nfe"); // NOI18N

        txtSituacaoNFE.setBackground(new java.awt.Color(218, 228, 224));
        txtSituacaoNFE.setColumns(30);
        txtSituacaoNFE.setEditable(false);
        txtSituacaoNFE.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtSituacaoNFE.setToolTipText("");
        txtSituacaoNFE.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtSituacaoNFE.setEnabled(false);
        txtSituacaoNFE.setName("not_situacao_nfe"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel12))
                        .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPlaca)
                    .addComponent(txtPesoLiquido, 0, 1, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtTransportadoraID, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisaUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPesoBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                    .addComponent(txtQtde, javax.swing.GroupLayout.Alignment.TRAILING, 0, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ddlFrete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEspecie, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)))
                    .addComponent(txtTransportadora, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSituacaoNFE, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtChaveNFE, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(txtTransportadoraID, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPesquisaUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTransportadora, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(txtEspecie, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(ddlFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtPesoBruto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(txtChaveNFE, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPesoLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSituacaoNFE)
                            .addComponent(txtProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(115, 115, 115))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel16.setText("Base ICMS:");
        jLabel16.setToolTipText("");

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel17.setText("Valor ICMS:");
        jLabel17.setToolTipText("");

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel18.setText("Base ICMS Sub.:");
        jLabel18.setToolTipText("");

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel19.setText("Valor ICMS Sub.:");
        jLabel19.setToolTipText("");

        jLabel20.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel20.setText("Valor Frete:");
        jLabel20.setToolTipText("");

        jLabel21.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel21.setText("Outras Despesas:");
        jLabel21.setToolTipText("");

        jLabel22.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel22.setText("Total IPI:");
        jLabel22.setToolTipText("");

        jLabel25.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel25.setText("PIS:");
        jLabel25.setToolTipText("");

        jLabel26.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel26.setText("COFINS:");
        jLabel26.setToolTipText("");

        txtBaseICMS.setBackground(new java.awt.Color(218, 228, 224));
        txtBaseICMS.setColumns(13);
        txtBaseICMS.setEditable(false);
        txtBaseICMS.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtBaseICMS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBaseICMS.setToolTipText("Valor");
        txtBaseICMS.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtBaseICMS.setEnabled(false);
        txtBaseICMS.setName("not_base_icms"); // NOI18N

        txtICMS.setBackground(new java.awt.Color(218, 228, 224));
        txtICMS.setColumns(13);
        txtICMS.setEditable(false);
        txtICMS.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtICMS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtICMS.setToolTipText("Valor");
        txtICMS.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtICMS.setEnabled(false);
        txtICMS.setName("not_valor_icms"); // NOI18N

        txtBaseICMSSUB.setBackground(new java.awt.Color(218, 228, 224));
        txtBaseICMSSUB.setColumns(13);
        txtBaseICMSSUB.setEditable(false);
        txtBaseICMSSUB.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtBaseICMSSUB.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBaseICMSSUB.setToolTipText("Valor");
        txtBaseICMSSUB.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtBaseICMSSUB.setEnabled(false);
        txtBaseICMSSUB.setName("not_base_icms_sub"); // NOI18N

        txtICMSSUB.setBackground(new java.awt.Color(218, 228, 224));
        txtICMSSUB.setColumns(13);
        txtICMSSUB.setEditable(false);
        txtICMSSUB.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtICMSSUB.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtICMSSUB.setToolTipText("Valor");
        txtICMSSUB.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtICMSSUB.setEnabled(false);
        txtICMSSUB.setName("not_valor_icms_sub"); // NOI18N

        txtFrete.setColumns(13);
        txtFrete.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtFrete.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFrete.setToolTipText("Valor");
        txtFrete.setName("not_valor_frete"); // NOI18N
        txtFrete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFreteFocusLost(evt);
            }
        });

        txtDespesas.setColumns(13);
        txtDespesas.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtDespesas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDespesas.setToolTipText("Valor");
        txtDespesas.setName("not_outras_despesas"); // NOI18N
        txtDespesas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDespesasFocusLost(evt);
            }
        });

        txtIPI.setBackground(new java.awt.Color(218, 228, 224));
        txtIPI.setColumns(13);
        txtIPI.setEditable(false);
        txtIPI.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtIPI.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIPI.setToolTipText("Valor");
        txtIPI.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtIPI.setEnabled(false);
        txtIPI.setName("not_total_ipi"); // NOI18N

        txtPIS.setBackground(new java.awt.Color(218, 228, 224));
        txtPIS.setColumns(13);
        txtPIS.setEditable(false);
        txtPIS.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtPIS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPIS.setToolTipText("Valor");
        txtPIS.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtPIS.setEnabled(false);
        txtPIS.setName("not_pis"); // NOI18N

        txtCOFINS.setBackground(new java.awt.Color(218, 228, 224));
        txtCOFINS.setColumns(13);
        txtCOFINS.setEditable(false);
        txtCOFINS.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        txtCOFINS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCOFINS.setToolTipText("Valor");
        txtCOFINS.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtCOFINS.setEnabled(false);
        txtCOFINS.setName("not_cofins"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel19)
                    .addComponent(jLabel18)
                    .addComponent(jLabel16)
                    .addComponent(jLabel22)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBaseICMSSUB, 0, 1, Short.MAX_VALUE)
                    .addComponent(txtPIS, 0, 0, Short.MAX_VALUE)
                    .addComponent(txtCOFINS, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(txtIPI, 0, 1, Short.MAX_VALUE)
                    .addComponent(txtDespesas, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                    .addComponent(txtFrete, 0, 0, Short.MAX_VALUE)
                    .addComponent(txtICMSSUB, 0, 0, Short.MAX_VALUE)
                    .addComponent(txtICMS, 0, 1, Short.MAX_VALUE)
                    .addComponent(txtBaseICMS, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtBaseICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtICMS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtBaseICMSSUB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(txtICMSSUB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtDespesas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtIPI, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25)
                    .addComponent(txtPIS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txtCOFINS, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/salvar.gif"))); // NOI18N
        btnSalvar.setToolTipText("Gerar Nota");
        btnSalvar.setBorderPainted(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Sair.gif"))); // NOI18N
        btnVoltar.setToolTipText("Voltar");
        btnVoltar.setBorderPainted(false);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(799, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, Short.MAX_VALUE)
            .addComponent(btnVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setForeground(new java.awt.Color(102, 102, 255));

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 51, 102));
        jLabel23.setText("Total Produtos:");
        jLabel23.setToolTipText("");

        txtProdutos.setBackground(new java.awt.Color(102, 102, 102));
        txtProdutos.setColumns(13);
        txtProdutos.setEditable(false);
        txtProdutos.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        txtProdutos.setForeground(new java.awt.Color(255, 255, 255));
        txtProdutos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtProdutos.setToolTipText("Valor");
        txtProdutos.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtProdutos.setEnabled(false);
        txtProdutos.setName("not_total_produtos"); // NOI18N

        jLabel24.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 51, 102));
        jLabel24.setText("Total Nota:");
        jLabel24.setToolTipText("");

        txtTotalNota.setBackground(new java.awt.Color(102, 102, 102));
        txtTotalNota.setColumns(13);
        txtTotalNota.setEditable(false);
        txtTotalNota.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        txtTotalNota.setForeground(new java.awt.Color(255, 255, 255));
        txtTotalNota.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalNota.setToolTipText("Valor");
        txtTotalNota.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtTotalNota.setEnabled(false);
        txtTotalNota.setName("not_total"); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTotalNota, 0, 1, Short.MAX_VALUE)
                    .addComponent(txtProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(txtProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txtTotalNota, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        grParcelas.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        grParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        grParcelas.setToolTipText("");
        grParcelas.setFocusable(false);
        grParcelas.setName(""); // NOI18N
        grParcelas.setRequestFocusEnabled(false);
        jScrollPane1.setViewportView(grParcelas);

        jLabel32.setBackground(new java.awt.Color(212, 220, 230));
        jLabel32.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(102, 102, 102));
        jLabel32.setText(" Parcelas                                                      Informações Complementares");
        jLabel32.setToolTipText("");
        jLabel32.setOpaque(true);

        txtInfComplementares.setColumns(400);
        txtInfComplementares.setRows(5);
        txtInfComplementares.setToolTipText("");
        txtInfComplementares.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        txtInfComplementares.setName("not_informacoes_complementares"); // NOI18N
        jScrollPane2.setViewportView(txtInfComplementares);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
                    .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
            //if (txtTransportadoraID.getText().equals(null) || (txtTransportadoraID.getText().equals("")))
            //{
            //    JOptionPane.showMessageDialog(null,"Transportadora não foi informada");
            //    txtTransportadoraID.requestFocus();
            //    return;
            //}
            //if (txtQtde.getText().equals("0") || txtQtde.getText().equals("0,00"))
            //{
            //    JOptionPane.showMessageDialog(null,"Quantidade tranportadora não informada");
            //    txtQtde.requestFocus();
            //    return;
            //}
            //if (txtEspecie.getText().equals("") || txtEspecie.getText().equals(null))
           // {
            //    JOptionPane.showMessageDialog(null,"Espécie tranportadora não informada");
            //    txtEspecie.requestFocus();
            //    return;
            //}
            if (txtSerie.getText().equals("") || txtSerie.getText().equals(null))
            {
                JOptionPane.showMessageDialog(null,"Série da nota não informada");
                txtSerie.requestFocus();
                return;
            }
            
            if (txtCodFormaPagamento.getText().equals(null) || (txtCodFormaPagamento.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Forma de Pagamento não informada!");
                txtCodFormaPagamento.requestFocus();
                return;
            }
            
            if (txtBancoID.getText().equals(null) || (txtBancoID.getText().equals("")))
            {
                JOptionPane.showMessageDialog(null,"Conta bancária não informada!");
                txtBancoID.requestFocus();
                return;
            }


            Object[] options = { " Sim ", " Não " };
            int confirmar = JOptionPane.showOptionDialog(null, "Confirma Faturamento", " Mensagem...",JOptionPane.DEFAULT_OPTION, JOptionPane. QUESTION_MESSAGE,null,options, options[0]);
            if(confirmar==1){
                txtSerie.requestFocus();
                return;
               }
            try
            {
             variaveis.vmCampos ="";
             funcoes.MontarCamposInsert(rootPane);
             variaveis.vmCampos= variaveis.vmCampos.substring(0, (variaveis.vmCampos.length()- 1));
             variaveis.vmParametros="";
             funcoes.MontarParametrosInsert(rootPane);
             variaveis.vmParametros = variaveis.vmParametros.substring(0, (variaveis.vmParametros.length()- 1));
             AcessoDados.Inserir("nota_fiscal", variaveis.vmCampos, variaveis.vmParametros);

             txtNotaID.setText(funcoes.RetornaId("Nota_Fiscal", "not_codigo_id"));

             rs = AcessoDados.Selecao("empresas", " * ", "  left join cidades on (cid_codigo_id = emp_cid_codigo_id) where emp_codigo_id = " + variaveis.vmEmpresaID);
             rs.next();
             String CodigoUF = rs.getString("cid_codigo_uf");
             String CNPJ     = funcoes.RemoveCaracter(rs.getString("emp_cnpj"));
             String DataAAMM = txtEmissao.getText().replace("/", "").substring(6,8);
             DataAAMM        += txtEmissao.getText().replace("/", "").substring(2,4);
             String Serie    =  funcoes.StrZero(Integer.parseInt(txtSerie.getText()), Byte.parseByte("3"));
             String Nota     =  funcoes.StrZero(Integer.parseInt(txtNotaID.getText()), Byte.parseByte("9"));
             int vmInt = (int) (1+Math.random()*10000);
             String Aleatorio = funcoes.StrZero(vmInt, Byte.parseByte("8"));
             String Chave = CodigoUF+DataAAMM+CNPJ+"55"+Serie+Nota+"1"+Aleatorio;  //1 - Normal 2 - Contigencia
             int dv = funcoes.getMod11(Chave, 9, 1);
             Chave = Chave + Integer.toString(dv);
             txtChaveNFE.setText(Chave);
             AcessoDados.Alterar("Nota_fiscal", " not_chave_nfe ='" + Chave + "', not_situacao_nfe ='Aguardando Envio'", " not_codigo_id = " +  txtNotaID.getText());
             AcertoEstoque();

             //Incluir Parcelas Contas a receber
            String vmCamposItem =   " cr_emp_codigo_id, " +
                                    " cr_par_codigo_id, " +
                                    " cr_nota_fiscal , " +
                                    " cr_serie_nota , " +
                                    " cr_documento , " +
                                    " cr_classificacao, " +
                                    " cr_parcela , " +
                                    " cr_data_emissao , " +
                                    " cr_data_vencimento , " +
                                    " cr_valor_documento , " +
                                    " cr_fpgto_codigo_id , " +
                                    " cr_cpgto_codigo_id , " +
                                    " cr_usuario, " +
                                    " cr_total_parcelas," +
                                    " cr_banc_codigo_id ";


             for(int i = 0; i <= grParcelas.getRowCount() - 1; i++)
             {
                String vmParametroItem = variaveis.vmEmpresaID + ",";
                vmParametroItem += txtCodCliente.getText() + ",";
                vmParametroItem += txtNotaID.getText() + ","; 
                vmParametroItem += "'" + txtSerie.getText() + "',";
                vmParametroItem += "'" + txtNotaID.getText() + "-" + Integer.toString(i+1) + "',";
                vmParametroItem += "'F',";// Classificação F de faturamento
                vmParametroItem += Integer.toString(i + 1) + ",";
                vmParametroItem += "'" +  txtEmissao.getText() + "',";
                vmParametroItem += "'" +  grParcelas.getValueAt(i, 0).toString() + "'," + //Vencimento
                                          grParcelas.getValueAt(i, 1).toString().replace(".", "").replace(",", ".") + ","; //Valor
                vmParametroItem += txtCodFormaPagamento.getText()  + ",";
                vmParametroItem += vmCodigoPagamento + ",";
                vmParametroItem += "'" + variaveis.nome_usuario + "',";
                vmParametroItem += grParcelas.getRowCount() + ",";
                vmParametroItem += txtBancoID.getText();

                AcessoDados.Inserir("contas_receber", vmCamposItem, vmParametroItem);

               //Inserir Contas Correntes
                rs = AcessoDados.Selecao("Contas_Receber", " max(cr_codigo_id) as id ", "");
                rs.next();
                String CRid = rs.getString("id");
                String vmCampos1 = "cc_descricao,"+
                                 "cc_banc_codigo_id,"+
                                 "cc_data_lancamento,"+
                                 "cc_documento,"+
                                 "cc_numero_cheque,"+
                                 "cc_historico,"+
                                 "cc_credito,"+
                                 "cc_debito,"+
                                 "cc_realizado,"+
                                 "cc_cp_codigo_id,"+
                                 "cc_cr_codigo_id, cc_nota, cc_data_vencimento";

               String vmParametros1 = "";
               vmParametros1 = "'" + txtCliente.getText() + "'," +
                                      txtBancoID.getText() + "," +
                                      "'" + txtEmissao.getText() + "'," +
                                      "'" + txtPedido.getText() + "-" + Integer.toString(i+1) + "'," +
                                      "''," +
                                      "'LANÇAMENTO GERADO POR FATURAMENTO'," +
                                      grParcelas.getValueAt(i, 1).toString().replace(".", "").replace(",", ".") + "," + //Valor
                                      "0," +
                                      "'NÃO'," +
                                      "Null," +
                                      CRid + "," + txtNotaID.getText() + ",'" + grParcelas.getValueAt(i, 0).toString()+ "'"  ;

            AcessoDados.Inserir("contas_corrente", vmCampos1, vmParametros1);

            }
            //Atualizar Tabela de Pedidos
            String vmCampos_Parametros = " ped_numero_nota_fiscal = "  + txtNotaID.getText() + "," +
                                         " ped_data_faturamento   = '" +  txtEmissao.getText() + "'," +
                                         " ped_banc_codigo_id     = "  + txtBancoID.getText() + "," +
                                         " ped_fpgto_codigo_id    = " + txtCodFormaPagamento.getText() + "," +
                                         " ped_tipo_pedido = 'F - Faturado'"; 

            String vmCondicao_Alteracao =" ped_codigo_id = " + txtPedido.getText() ;

            AcessoDados.Alterar("pedidos", vmCampos_Parametros, vmCondicao_Alteracao);

            }catch (Exception e) {
                e.printStackTrace();
            }
        
        //Gerar  XML
        GerarXML();

        try
        {
        String vmCampos = "PEDIDOS.*, FPGTO_DESCRICAO, CPGTO_DESCRICAO, par_nome_razao_social";
        String vmCondicao_Consulta = " LEFT JOIN PARCEIROS ON (PAR_CODIGO_ID = PED_PAR_CODIGO_ID) LEFT JOIN FORMA_DE_PAGAMENTO ON (FPGTO_CODIGO_ID = PED_FPGTO_CODIGO_ID) LEFT JOIN CONDICAO_PAGAMENTO ON (CPGTO_CODIGO_ID =  PED_CPGTO_CODIGO_ID)  WHERE ped_codigo_id = " + txtPedido.getText();
        funcoes.RetornarSelecao(rootPane,"PEDIDOS", vmCampos, vmCondicao_Consulta);
        formWindowOpened(null);


        }catch (Exception e) {
                e.printStackTrace();
        }
        
        if(variaveis.vmErrosXML.equals(""))
        {
        FrmNotaEletronica md = new FrmNotaEletronica(null, true);
        variaveis.Linha = txtNotaID.getText();
        md.setLocationRelativeTo(null);
        md.setVisible(true);
        }


    }//GEN-LAST:event_btnSalvarActionPerformed

    public void AcertoEstoque()
    {

        try
        {
        rs = AcessoDados.Selecao("ITEM_PEDIDO", "*", "WHERE ITEM_PED_PEDIDO_CODIGO_ID = " + txtPedido.getText());

        while(rs.next())
        {
             String vmParametros = "lot_qtde = lot_qtde - " +  rs.getString("item_ped_quantidade");
             String CondicaoConsulta = " lot_prod_codigo_id = "+rs.getString("item_ped_prod_codigo_id") + " and lot_numero_lot = '" + rs.getString("item_pedido_lote") +"'" ;
             AcessoDados.Alterar("lotes", vmParametros, CondicaoConsulta);
        }
        }catch (Exception e) {
               e.printStackTrace();
        }

    }
    private void txtTransportadoraIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTransportadoraIDFocusLost
        // TODO add your handling code here:
       if(!txtTransportadoraID.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE tran_codigo_id = " + txtTransportadoraID.getText();
          try
        {
        rs = AcessoDados.Selecao("transportadoras", vmCampos, vmCondicao_Consulta);
        if (!rs.next())
        {
            JOptionPane.showMessageDialog(null,"Transportadora não cadastrada no sistema");
            txtTransportadoraID.setText(null);
            txtTransportadora.setText(null);
            txtTransportadoraID.requestFocus();
            return;
        }
        txtTransportadora.setText(rs.getString("tran_nome_razao_social"));
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

       }
       else
           txtTransportadora.setText("");

      
    }//GEN-LAST:event_txtTransportadoraIDFocusLost

    private void txtTransportadoraIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTransportadoraIDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode()== 114) //tecla F3 para pesquisa
            btnPesquisaUnidadeActionPerformed(null);
    }//GEN-LAST:event_txtTransportadoraIDKeyPressed

    private void txtTransportadoraIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTransportadoraIDKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtTransportadoraIDKeyReleased

    private void btnPesquisaUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaUnidadeActionPerformed
        // TODO add your handling code here:
         variaveis.xColuna1 = "tran_codigo_id";
         variaveis.xColuna2 = "tran_nome_razao_social";
         variaveis.xColuna3 = "tran_nome_fantasia";
         variaveis.xColuna4 = "tran_cpf_cnpj";
         variaveis.xColuna5 = "''";
         variaveis.xColuna6 = "''";
         variaveis.xColuna7 = "''";
         variaveis.xColuna8 = "''";
         variaveis.xColuna9 = "''";
         
         variaveis.xColunaNome1 = "Código";
         variaveis.xColunaNome2 = "Nome / Razão Social";
         variaveis.xColunaNome3 = "Fantasia";
         variaveis.xColunaNome4 = "CPF / CNPJ";
         variaveis.xColunaNome5 = "";
         variaveis.xColunaNome6 = "";
         variaveis.xColunaNome7 = "";
         variaveis.xColunaNome8 = "";
         variaveis.xColunaNome9 = "";
         
         variaveis.xColunaTamanho1 = 60;
         variaveis.xColunaTamanho2 = 450;
         variaveis.xColunaTamanho3 = 260;
         variaveis.xColunaTamanho4 = 120;
         variaveis.xColunaTamanho5 = 0;
         variaveis.xColunaTamanho6 = 0;
         variaveis.xColunaTamanho7 = 0;
         variaveis.xColunaTamanho8 = 0;
         variaveis.xColunaTamanho9 = 0;
         
         variaveis.xColunaStart = "tran_nome_razao_social";
         variaveis.xColunaNomeStart = "Nome / Razão Social";
         variaveis.xTabela = "transportadoras";
         variaveis.xSql = ""; 
         
         FpesqPesquisa md = new FpesqPesquisa(null, true);
         Dimension d = new Dimension();   
         d.setSize(900, 480); 
         md.setSize(d);
         
         md.setTitle("Pesquisa Transportadora - ENTER ou DUPLO CLICK no registro retorna dados.");

         md.setLocationRelativeTo(null);
         md.setVisible(true);

        if(!md.getRetorno().trim().equals("") ||!md.getRetorno().equals(null))
        {
         txtTransportadoraID.setText((String) md.getRetorno());
        }
       txtTransportadoraID.requestFocus();
       if(!txtTransportadoraID.getText().equals(""))
       {
          String vmCampos = "*";
          String vmCondicao_Consulta = " WHERE tran_codigo_id = " + txtTransportadoraID.getText();
          try
        {
        rs = AcessoDados.Selecao("transportadoras", vmCampos, vmCondicao_Consulta);
        rs.next();
        txtTransportadora.setText(rs.getString("tran_nome_razao_social"));
        txtTransportadoraID.requestFocus();
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
          }
       }

    }//GEN-LAST:event_btnPesquisaUnidadeActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        funcoes.limparTodosCampos(rootPane);
        String vmCampos = "  SUM(item_pedido_base_calculo_icms) AS BASE_ICMS, " +
                          "  SUM(item_ped_icms) AS ICMS, " +
                          "  SUM(item_ped_icms_sub_trib) AS ICMSSUB, " +
                          "  SUM(item_ped_ipi) AS IPI, " +
                          "  SUM(item_ped_valor_total) AS TOT_PRODUTO, " +
                          "  SUM(item_ped_valor_total) AS TOT_NOTA, "+
                          "  SUM(item_ped_peso_liquido * item_ped_quantidade) AS PESO_LIQUIDO, "+
                          "  SUM(item_ped_peso_bruto * item_ped_quantidade) AS PESO_BRUTO, "+
                          "  SUM(item_ped_quantidade) AS qtde ";

        
        String vmCondicao_Consulta = " WHERE item_ped_pedido_codigo_id = " + variaveis.vm_Pedido;
          try
        {
        rs = AcessoDados.Selecao("item_pedido", vmCampos, vmCondicao_Consulta);
        if (rs.next())
        {
          txtPedido.setText(variaveis.vm_Pedido);
          txtBaseICMS.setText(funcoes.formataMoeda(rs.getString("BASE_ICMS"),"BD"));
          txtICMS.setText(funcoes.formataMoeda(rs.getString("ICMS"),"BD"));
          txtBaseICMSSUB.setText("0,00");
          txtICMSSUB.setText(funcoes.formataMoeda(rs.getString("ICMSSUB"),"BD"));
          txtIPI.setText(funcoes.formataMoeda(rs.getString("IPI"),"BD"));
          txtPIS.setText(funcoes.formataMoeda("0","T"));
          txtCOFINS.setText(funcoes.formataMoeda("0","T"));
          txtProdutos.setText(funcoes.formataMoeda(rs.getString("TOT_PRODUTO"),"BD"));
          txtTotalNota.setText(funcoes.formataMoeda(rs.getString("TOT_NOTA"),"BD"));
          txtPesoBruto.setText(funcoes.formataMoeda(rs.getString("PESO_BRUTO"),"BD"));
          txtPesoLiquido.setText(funcoes.formataMoeda(rs.getString("PESO_LIQUIDO"),"BD"));
          txtQtde.setText(funcoes.formataMoeda(rs.getString("qtde"),"BD"));
        }
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }
        //Dados do pedido
        vmCampos = " * ";

        vmCondicao_Consulta = " WHERE ped_codigo_id = " + variaveis.vm_Pedido;
          try
        {
        rs = AcessoDados.Selecao("pedidos", vmCampos, vmCondicao_Consulta);
        if (rs.next())
        {
          txtNotaID.setText(rs.getString("ped_numero_nota_fiscal"));
          txtDataPedido.setText(funcoes.formataData(rs.getString("ped_data_emissao")));
          txtCodCliente.setText(rs.getString("ped_par_codigo_id"));
          Date data = new Date(System.currentTimeMillis());
          SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
          txtEmissao.setText(formatarDate.format(data));

          vmCodigoPagamento = rs.getString("ped_cpgto_codigo_id");
          txtCodFormaPagamento.setText(rs.getString("ped_fpgto_codigo_id"));
          txtBancoID.setText(rs.getString("ped_banc_codigo_id"));
          String ped_dat_faturamento = rs.getString("ped_data_faturamento");
          buscaCliente();
          txtBancoIDFocusLost(null);
          txtCodFormaPagamentoFocusLost(null);

          if(!ped_dat_faturamento.equals(""))
          {
            vmCampos = "*";
            vmCondicao_Consulta = " wHERE NOT_codigo_id = " + txtNotaID.getText();
            try
            {
            funcoes.RetornarSelecao(rootPane,"Nota_fiscal", vmCampos, vmCondicao_Consulta);
                    calculaValores();
                    CalculaParcelas();

           }catch (Exception e) {
           e.printStackTrace();
           }

            txtEmissao.setText(funcoes.formataData(ped_dat_faturamento));
            funcoes.HabilitaCampos(rootPane, false);
            btnPesquisaUnidade.setEnabled(false);
            btnSalvar.setEnabled(false);
            btnVoltar.setEnabled(true);
          }
        }
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }
        calculaValores();
        CalculaParcelas();

        txtSerie.setText("1");
        


    }//GEN-LAST:event_formWindowOpened

    public void CalculaParcelas()
    {
        vdiferenca =0.00;
        DefaultTableModel tableModel =(DefaultTableModel) grParcelas.getModel();
        tableModel.setNumRows(0);

        //Dados pagamento
        String vmCampos = " * ";

        String vmCondicao_Consulta = " WHERE cpgto_codigo_id = " + vmCodigoPagamento;
          try
        {
        rs = AcessoDados.Selecao("condicao_pagamento", vmCampos, vmCondicao_Consulta);
        if (rs.next())
        {
          int QtdeParcela = rs.getInt("cpgto_qtde_parcelas");
          int PrazoMedio = rs.getInt("cpgto_prazo_medio");
          int Prazo = 0;
          Double vTotalNota = Double.parseDouble(txtTotalNota.getText().replace(".", "").replace(",", "."));
          vTotalNota = vTotalNota / QtdeParcela;
          String valorParcela = funcoes.formataMoeda(Double.toString(vTotalNota),"BD");
          Double vSomaParcelas = QtdeParcela * Double.parseDouble(valorParcela.replace(".", "").replace(",", "."));
          String NovovalorParcela = funcoes.formataMoeda(Double.toString(vSomaParcelas),"BD");

          if(!NovovalorParcela.equals(txtTotalNota.getText()))
          {
            Double Vvalor1 = Double.parseDouble(NovovalorParcela.replace(".", "").replace(",", "."));
            Double Vvalor2 = Double.parseDouble(txtTotalNota.getText().replace(".", "").replace(",", "."));
            vdiferenca = Vvalor2 - Vvalor1;
            DecimalFormat nf = new DecimalFormat("#,##0.00");
            vdiferenca = Double.parseDouble(nf.format(vdiferenca).replace(",", "."));
            //if(vdiferenca < 0) vdiferenca = vdiferenca * -1;

          }
          for (int i = 0; i < QtdeParcela; i++) {
            //joga diferenca se existir para ultima parcela
            if(i == QtdeParcela -1)
            {
              vTotalNota = vTotalNota + vdiferenca;
            }
            Prazo += PrazoMedio;

            Date a = new Date(System.currentTimeMillis());
            a.setDate(a.getDate() + Prazo);
            SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy");
            dtm = (javax.swing.table.DefaultTableModel)grParcelas.getModel();
            dtm.addRow(new Object[]{formatarDate.format(a),
                                   funcoes.formataMoeda(Double.toString(vTotalNota),"BD")});

        }
        }
        rs.close();
          }catch (Exception e) {
           e.printStackTrace();
        }

    }
    private void txtFreteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFreteFocusLost
        // TODO add your handling code here:
        if(txtFrete.getText().equals(""))txtFrete.setText("0");
        calculaValores();
        CalculaParcelas();
    }//GEN-LAST:event_txtFreteFocusLost

    private void txtDespesasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDespesasFocusLost
        // TODO add your handling code here:
        if(txtDespesas.getText().equals(""))txtDespesas.setText("0");
        calculaValores();
        CalculaParcelas();
        btnSalvar.requestFocus();
    }//GEN-LAST:event_txtDespesasFocusLost

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void txtCodFormaPagamentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodFormaPagamentoFocusLost
        // TODO add your handling code here:

        if (!txtCodFormaPagamento.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " WHERE fpgto_codigo_id = " + txtCodFormaPagamento.getText();
            try {
                rs = AcessoDados.Selecao("forma_de_pagamento", vmCampos, vmCondicao_Consulta);
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(null, "Forma de pagamento não cadastrado no sistema");
                    txtCodFormaPagamento.setText(null);
                    txtFormaPagamento.setText(null);
                    txtCodFormaPagamento.requestFocus();
                    return;
                }
                txtFormaPagamento.setText(rs.getString("fpgto_descricao"));
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            txtFormaPagamento.setText(null);
        }
    }
//GEN-LAST:event_txtCodFormaPagamentoFocusLost
        private void txtCodFormaPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodFormaPagamentoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 114) //tecla F3 para pesquisa
        {
            btnPesquisaFormaPagamentoActionPerformed(null);
        }
    }//GEN-LAST:event_txtCodFormaPagamentoKeyPressed

    private void btnPesquisaFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaFormaPagamentoActionPerformed
        // TODO add your handling code here:
        variaveis.xColuna1 = "fpgto_codigo_id";
        variaveis.xColuna2 = "fpgto_descricao";
        variaveis.xColuna3 = "''";
        variaveis.xColuna4 = "''";
        variaveis.xColuna5 = "''";
        variaveis.xColuna6 = "''";
        variaveis.xColuna7 = "''";
        variaveis.xColuna8 = "''";
        variaveis.xColuna9 = "''";

        variaveis.xColunaNome1 = "Código";
        variaveis.xColunaNome2 = "Descrição";
        variaveis.xColunaNome3 = "";
        variaveis.xColunaNome4 = "";
        variaveis.xColunaNome5 = "";
        variaveis.xColunaNome6 = "";
        variaveis.xColunaNome7 = "";
        variaveis.xColunaNome8 = "";
        variaveis.xColunaNome9 = "";

        variaveis.xColunaTamanho1 = 60;
        variaveis.xColunaTamanho2 = 400;
        variaveis.xColunaTamanho3 = 0;
        variaveis.xColunaTamanho4 = 0;
        variaveis.xColunaTamanho5 = 0;
        variaveis.xColunaTamanho6 = 0;
        variaveis.xColunaTamanho7 = 0;
        variaveis.xColunaTamanho8 = 0;
        variaveis.xColunaTamanho9 = 0;

        variaveis.xColunaStart = "fpgto_descricao";
        variaveis.xColunaNomeStart = "Descrição";
        variaveis.xTabela = "forma_de_pagamento";
        variaveis.xSql = "";

        FpesqPesquisa md = new FpesqPesquisa(null, true);
        Dimension d = new Dimension();
        d.setSize(470, 480);
        md.setSize(d);

        md.setTitle("Pesquisa Forma de Pgto - ENTER ou DUPLO CLICK no registro retorna dados.");

        md.setLocationRelativeTo(null);
        md.setVisible(true);

        txtFormaPagamento.setText(null);
        txtCodFormaPagamento.setText((String) md.getRetorno());
        txtCodFormaPagamento.requestFocus();
        if (!txtFormaPagamento.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " WHERE fpgto_codigo_id = " + txtFormaPagamento.getText();
            try {
                rs = AcessoDados.Selecao("forma_de_pagamento", vmCampos, vmCondicao_Consulta);
                rs.next();
                txtFormaPagamento.setText(rs.getString("fpgto_descricao"));
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }   


 }//GEN-LAST:event_btnPesquisaFormaPagamentoActionPerformed

    private void txtBancoIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBancoIDFocusGained
        // TODO add your handling code here:
        JTextField tf = (JTextField) evt.getComponent();
        tf.selectAll();
    }//GEN-LAST:event_txtBancoIDFocusGained

    private void txtBancoIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBancoIDFocusLost
        // TODO add your handling code here:
        if (!txtBancoID.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " WHERE banc_codigo_id = " + txtBancoID.getText();
            try {
                rs = AcessoDados.Selecao("Contas_bancarias", vmCampos, vmCondicao_Consulta);
                if (!rs.next()) {
                    JOptionPane.showMessageDialog(null, "Banco não cadastrado no sistema");
                    txtBancoID.setText(null);
                    txtBancoDescricao.setText(null);
                    txtBancoID.requestFocus();
                    return;
                }
                txtBancoDescricao.setText(rs.getString("banc_nome_banco"));
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        } else {
            txtBancoDescricao.setText(null);
        }
    }//GEN-LAST:event_txtBancoIDFocusLost

    private void txtBancoIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBancoIDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 114) //tecla F3 para pesquisa
        {
            btnPesquisaBancoIDActionPerformed(null);
        }
    }//GEN-LAST:event_txtBancoIDKeyPressed

    private void txtBancoIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBancoIDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBancoIDKeyReleased

    private void btnPesquisaBancoIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaBancoIDActionPerformed
        // TODO add your handling code here:
        variaveis.xColuna1 = "banc_codigo_id";
        variaveis.xColuna2 = "banc_nome_banco";
        variaveis.xColuna3 = "banc_numero_agencia";
        variaveis.xColuna4 = "banc_numero_conta";
        variaveis.xColuna5 = "''";
        variaveis.xColuna6 = "''";
        variaveis.xColuna7 = "''";
        variaveis.xColuna8 = "''";
        variaveis.xColuna9 = "''";

        variaveis.xColunaNome1 = "Código";
        variaveis.xColunaNome2 = "Descrição";
        variaveis.xColunaNome3 = "Agência";
        variaveis.xColunaNome4 = "C/C";
        variaveis.xColunaNome5 = "";
        variaveis.xColunaNome6 = "";
        variaveis.xColunaNome7 = "";
        variaveis.xColunaNome8 = "";
        variaveis.xColunaNome9 = "";

        variaveis.xColunaTamanho1 = 60;
        variaveis.xColunaTamanho2 = 250;
        variaveis.xColunaTamanho3 = 75;
        variaveis.xColunaTamanho4 = 75;
        variaveis.xColunaTamanho5 = 0;
        variaveis.xColunaTamanho6 = 0;
        variaveis.xColunaTamanho7 = 0;
        variaveis.xColunaTamanho8 = 0;
        variaveis.xColunaTamanho9 = 0;

        variaveis.xColunaStart = "banc_nome_banco";
        variaveis.xColunaNomeStart = "Descrição";
        variaveis.xTabela = "contas_bancarias";
        variaveis.xSql = "";

        FpesqPesquisa md = new FpesqPesquisa(null, true);
        Dimension d = new Dimension();
        d.setSize(470, 480);
        md.setSize(d);

        md.setTitle("Pesquisa Conta Bancária - ENTER ou DUPLO CLICK no registro retorna dados.");

        md.setLocationRelativeTo(null);
        md.setVisible(true);

        if (!md.getRetorno().trim().equals("") || !md.getRetorno().equals(null)) {
            txtBancoID.setText((String) md.getRetorno());
        }
        txtBancoID.requestFocus();
        if (!txtBancoID.getText().equals("")) {
            String vmCampos = "*";
            String vmCondicao_Consulta = " WHERE banc_codigo_id = " + txtBancoID.getText();
            try {
                rs = AcessoDados.Selecao("Contas_bancarias", vmCampos, vmCondicao_Consulta);
                rs.next();
                txtBancoDescricao.setText(rs.getString("banc_nome_banco"));
                rs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_btnPesquisaBancoIDActionPerformed

    private void btnPesquisaBancoIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnPesquisaBancoIDFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_btnPesquisaBancoIDFocusLost

    private void txtSaidaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSaidaFocusLost
        // TODO add your handling code here:
        txtTransportadoraID.requestFocus();
    }//GEN-LAST:event_txtSaidaFocusLost

    private void ddlFreteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddlFreteActionPerformed
        // TODO add your handling code here:
        if(ddlFrete.getSelectedIndex() == 1) txtFrete.requestFocus();
    }//GEN-LAST:event_ddlFreteActionPerformed

    public void buscaCliente()
    {
        if(!txtCodCliente.getText().equals(""))
        {
            String vmCampos = "*";
            String vmCondicao_Consulta = " where par_codigo_id = " + txtCodCliente.getText();
            try
            {
                rs = AcessoDados.Selecao("parceiros", vmCampos, vmCondicao_Consulta);
                    if (!rs.next())
                    {
                         //JOptionPane.showMessageDialog(null,"Parceiro não cadastrado no sistema");
                                txtCodCliente.setText(null);
                                txtCliente.setText(null);
                                txtCodCliente.requestFocus();
                                return;
                    }
                 rs.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
            try
            {
                rs = AcessoDados.Selecao("parceiros", vmCampos, vmCondicao_Consulta);
                while (rs.next())
                {
                    txtCliente.setText(rs.getString("par_nome_razao_social"));
                }
                rs.close();

            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }else
       {
        txtCliente.setText("");
       }

    }

       public void calculaValores()
  {
       Double vTotBruto = 0.00;
       Double vTotProduto = 0.00;
       Double vFrete = 0.00;
       Double vIPI = 0.00;
       Double vICMS = 0.00;


       vFrete = Double.parseDouble(txtFrete.getText().replace(".", "").replace(",", "."));
       vIPI = Double.parseDouble(txtIPI.getText().replace(".", "").replace(",", "."));
       vICMS = Double.parseDouble(txtICMS.getText().replace(".", "").replace(",", "."));
       double vm_total_prdutos = Double.parseDouble(txtProdutos.getText().replace(".", "").replace(",", "."));
       double vm_total_despesas = Double.parseDouble(txtDespesas.getText().replace(".", "").replace(",", "."));
       double vm_total_pedido = vm_total_prdutos + vm_total_despesas + vFrete + vIPI; //+ vICMS;
       txtTotalNota.setText(funcoes.formataMoeda(Double.toString(vm_total_pedido),"BD"));

  }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmFaturamento dialog = new FrmFaturamento(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void GerarXML()
    {
        ResultSet rsEmitente, rsDestinatario, rsItens;
        double tPIS = 0;
        double tCofins = 0;
        
        
        try
        {
            //xml.append("<enviNFe xmlns='http://www.portalfiscal.inf.br/nfe' versao='2.00'>");
            //xml.append("<idLote>0</idLote>"); //calcular lote

            xml.append("<NFe xmlns='http://www.portalfiscal.inf.br/nfe'>");

            xml.append("<infNFe Id='NFe" + txtChaveNFE.getText() + "' versao='2.00'>");
            xml.append("<ide>");
            //Buscar dados Emitente
            rsEmitente = AcessoDados.Selecao("Empresas", " * ", " LEFT JOIN CIDADES ON (EMP_CID_CODIGO_ID = CID_CODIGO_ID) WHERE emp_codigo_id = " + variaveis.vmEmpresaID);
            rsEmitente.next();
            xml.append("<cUF>"+rsEmitente.getString("CID_CODIGO_UF")+"</cUF>");
            xml.append("<cNF>"+txtChaveNFE.getText().substring(35,43)+"</cNF>");
            xml.append("<natOp>"+ cbSituacao.getSelectedItem().toString() +"</natOp>");
            xml.append("<indPag>0</indPag>"); //Condição de Pagamento - A vista, A prazo
            xml.append("<mod>55</mod>");
            xml.append("<serie>"+txtSerie.getText()+"</serie>");
            xml.append("<nNF>"+txtNotaID.getText()+"</nNF>");
            xml.append("<dEmi>"+funcoes.formataDataNFE(txtEmissao.getText())+"</dEmi>");
            xml.append("<dSaiEnt>"+funcoes.formataDataNFE(txtSaida.getText())+"</dSaiEnt>");
            xml.append("<tpNF>1</tpNF>"); //tipo de operação 0 - Entrada 1 - Saida
            xml.append("<cMunFG>"+rsEmitente.getString("cid_codigo_municipio")+"</cMunFG>");
            xml.append("<tpImp>1</tpImp>"); //Impressão Danfe 1 - Retrato 2 - Paisagem
            xml.append("<tpEmis>1</tpEmis>"); // Emissao NFe 1 - Normal, 2 - Contigencia
            xml.append("<cDV>"+txtChaveNFE.getText().substring(43,44)+"</cDV>");
            xml.append("<tpAmb>2</tpAmb>"); //1 - Produção 2 - Homologação
            xml.append("<finNFe>1</finNFe>");  //Finalidade da Emissão
            xml.append("<procEmi>0</procEmi>"); //Aplicativo do contribuinte
            xml.append("<verProc>2.0</verProc>");
            xml.append("</ide>");

            //Emitente da nota
            xml.append("<emit>");
            xml.append("<CNPJ>"+funcoes.RemoveCaracter(rsEmitente.getString("emp_cnpj"))+"</CNPJ>");
            xml.append("<xNome>"+funcoes.RemoveAcentos(rsEmitente.getString("emp_nome").replace("&", "&amp;"))+"</xNome>");
            xml.append("<xFant>"+funcoes.RemoveAcentos(rsEmitente.getString("emp_nome_fantasia").replace("&", "&amp;")) +"</xFant>");
            xml.append("<enderEmit>");
            xml.append("<xLgr>"+funcoes.RemoveAcentos(rsEmitente.getString("emp_endereco"))+"</xLgr>");
            xml.append("<nro>"+rsEmitente.getString("emp_numero")+"</nro>");
            xml.append("<xCpl>"+funcoes.RemoveAcentos(rsEmitente.getString("emp_complemento"))+"</xCpl>");
            xml.append("<xBairro>"+funcoes.RemoveAcentos(rsEmitente.getString("emp_bairro"))+"</xBairro>");
            xml.append("<cMun>"+rsEmitente.getString("cid_codigo_municipio")+"</cMun>");
            xml.append("<xMun>"+funcoes.RemoveAcentos(rsEmitente.getString("cid_municipio"))+"</xMun>");
            xml.append("<UF>"+rsEmitente.getString("cid_uf")+"</UF>");
            xml.append("<CEP>"+funcoes.RemoveCaracter(rsEmitente.getString("emp_cep"))+"</CEP>");
            xml.append("<cPais>1058</cPais>");
            xml.append("<xPais>Brasil</xPais>");
            xml.append("</enderEmit>");
            xml.append("<IE>"+funcoes.RemoveCaracter(rsEmitente.getString("emp_insc_estadual"))+"</IE>");
            xml.append("<CRT>3</CRT>");  //3 - Regime Normal 1 - Simples Nacional
            xml.append("</emit>");

            //Busca Destinatario
            rsDestinatario = AcessoDados.Selecao("Parceiros", " * ", " LEFT JOIN CIDADES ON (CID_CODIGO_ID = par_cidade_comercial_codigo_id) WHERE par_codigo_id = " + txtCodCliente.getText());
            rsDestinatario.next();

            xml.append("<dest>");
            if(rsDestinatario.getString("par_pessoa").equals("JURÍDICA"))
            {
            xml.append("<CNPJ>"+funcoes.RemoveCaracter(rsDestinatario.getString("par_cnpj_cpf"))+"</CNPJ>");
            }else
            {
            xml.append("<CPF>"+funcoes.RemoveCaracter(rsDestinatario.getString("par_cnpj_cpf"))+"</CPF>");
            }
            
            xml.append("<xNome>"+funcoes.RemoveAcentos(rsDestinatario.getString("par_nome_razao_social").replace("&", "&amp;"))+"</xNome>");
            xml.append("<enderDest>");
            xml.append("<xLgr>"+funcoes.RemoveAcentos(rsDestinatario.getString("par_rua_comercial"))+"</xLgr>");
            xml.append("<nro>"+rsDestinatario.getString("par_numero_comercial")+"</nro>");
            xml.append("<xBairro>"+funcoes.RemoveAcentos(rsDestinatario.getString("par_bairro_comercial"))+"</xBairro>");
            xml.append("<cMun>"+rsDestinatario.getString("cid_codigo_municipio")+"</cMun>");
            xml.append("<xMun>"+funcoes.RemoveAcentos(rsDestinatario.getString("cid_municipio"))+"</xMun>");
            xml.append("<UF>"+rsDestinatario.getString("cid_uf")+"</UF>");
            xml.append("<CEP>"+funcoes.RemoveCaracter(rsDestinatario.getString("par_cep_comercial"))+"</CEP>");
            xml.append("<cPais>1058</cPais>");  //tem de tratar - Tabela Bacen
            xml.append("<xPais>BRASIL</xPais>");
            xml.append("<fone>"+funcoes.RemoveCaracter(rsDestinatario.getString("par_telefone_comercial")).trim()+"</fone>");
            xml.append("</enderDest>");
            xml.append("<IE>"+funcoes.RemoveCaracter(rsDestinatario.getString("par_insc_estadual"))+"</IE>");
            xml.append("<email>"+rsDestinatario.getString("par_e_mail")+"</email>");
            xml.append("</dest>");


            xml.append("<retirada>");
            xml.append("<CNPJ>"+funcoes.RemoveCaracter(rsEmitente.getString("emp_cnpj"))+"</CNPJ>");
            xml.append("<xLgr>"+funcoes.RemoveAcentos(rsEmitente.getString("emp_endereco"))+"</xLgr>");
            xml.append("<nro>"+rsEmitente.getString("emp_numero")+"</nro>");
            xml.append("<xCpl>"+funcoes.RemoveAcentos(rsEmitente.getString("emp_complemento"))+"</xCpl>");
            xml.append("<xBairro>"+funcoes.RemoveAcentos(rsEmitente.getString("emp_bairro"))+"</xBairro>");
            xml.append("<cMun>"+rsEmitente.getString("cid_codigo_municipio")+"</cMun>");
            xml.append("<xMun>"+funcoes.RemoveAcentos(rsEmitente.getString("cid_municipio"))+"</xMun>");
            xml.append("<UF>"+rsEmitente.getString("cid_uf")+"</UF>");
            xml.append("</retirada>");

            xml.append("<entrega>");
            if(rsDestinatario.getString("par_pessoa").equals("JURÍDICA"))
            {
            xml.append("<CNPJ>"+funcoes.RemoveCaracter(rsDestinatario.getString("par_cnpj_cpf"))+"</CNPJ>");
            }else
            {
            xml.append("<CPF>"+funcoes.RemoveCaracter(rsDestinatario.getString("par_cnpj_cpf"))+"</CPF>");
            }
            
            xml.append("<xLgr>"+funcoes.RemoveAcentos(rsDestinatario.getString("par_rua_comercial"))+"</xLgr>");
            xml.append("<nro>"+funcoes.RemoveAcentos(rsDestinatario.getString("par_numero_comercial"))+"</nro>");
            xml.append("<xCpl>"+funcoes.RemoveAcentos(rsDestinatario.getString("par_complemento_comercial"))+"</xCpl>");
            xml.append("<xBairro>"+funcoes.RemoveAcentos(rsDestinatario.getString("par_bairro_comercial"))+"</xBairro>");
            xml.append("<cMun>"+rsDestinatario.getString("cid_codigo_municipio")+"</cMun>");
            xml.append("<xMun>"+funcoes.RemoveAcentos(rsDestinatario.getString("cid_municipio"))+"</xMun>");
            xml.append("<UF>"+rsDestinatario.getString("cid_uf")+"</UF>");
            xml.append("</entrega>");

            
            //Itens Nota Fiscal
            rsItens = AcessoDados.Selecao("ITEM_PEDIDO", " * ", " LEFT JOIN PRODUTOS ON (PROD_CODIGO_ID = item_ped_prod_codigo_id) LEFT JOIN UNIDADE_DE_MEDIDA ON (unid_codigo_id= PROD_CODIGO_ID) WHERE item_ped_pedido_codigo_id = " + txtPedido.getText());
            //rsItens.next();
            int xItem = 1;

            while (rsItens.next())
            {
              xml.append("<det nItem='"+Integer.toString(xItem)+"'>");
              xml.append("<prod>");
              xml.append("<cProd>"+rsItens.getString("prod_codigo_produto")+"</cProd>");
              xml.append("<cEAN />");
              xml.append("<xProd>"+funcoes.RemoveAcentos(rsItens.getString("prod_descricao"))+"</xProd>");
              xml.append("<NCM>"+rsItens.getString("prod_ncm")+"</NCM>");
              xml.append("<CFOP>"+funcoes.RemoveCaracter(rsItens.getString("item_ped_cfop"))+"</CFOP>");
              xml.append("<uCom>"+rsItens.getString("unid_unidade")+"</uCom>");
              xml.append("<qCom>"+funcoes.formataValorNFE(rsItens.getString("item_ped_quantidade"),"BD").replace(".", "").replace(",", ".") +"</qCom>");
              xml.append("<vUnCom>"+funcoes.formataMoeda(rsItens.getString("item_ped_valor_unitario"),"BD").replace(".", "").replace(",", ".")+"</vUnCom>");
              xml.append("<vProd>"+funcoes.formataMoeda(rsItens.getString("item_ped_valor_total"),"BD").replace(".", "").replace(",", ".")+"</vProd>");
              xml.append("<cEANTrib />");
              xml.append("<uTrib>"+rsItens.getString("unid_unidade")+"</uTrib>");
              xml.append("<qTrib>"+funcoes.formataValorNFE(rsItens.getString("item_ped_quantidade"),"BD").replace(".", "").replace(",", ".")+"</qTrib>");
              xml.append("<vUnTrib>"+funcoes.formataMoeda(rsItens.getString("item_ped_valor_unitario"),"BD").replace(".", "").replace(",", ".")+"</vUnTrib>");
              xml.append("<indTot>1</indTot>"); //1 - compoes valor tatal da nota 2 - não compoem valor total
              xml.append("</prod>");

              xml.append("<imposto>");
              String CST = rsItens.getString("item_ped_cst").substring(1,3);
              xml.append("<ICMS>");
              
              if(CST.equals("00"))
              {
              xml.append("<ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              xml.append("<orig>0</orig>");
              xml.append("<CST>"+rsItens.getString("item_ped_cst").substring(1,3)+"</CST>");
              xml.append("<modBC>1</modBC>");
              xml.append("<vBC>"+txtBaseICMS.getText().replace(".", "").replace(",", ".")+"</vBC>");
              xml.append("<pICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_aliquota_icms"),"BD").replace(".", "").replace(",", ".")+"</pICMS>");
              xml.append("<vICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_icms"),"BD").replace(".", "").replace(",", ".")+"</vICMS>");
              xml.append("</ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              }
              
              if(CST.equals("10"))
              {
              xml.append("<ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              xml.append("<orig>0</orig>");
              xml.append("<CST>"+rsItens.getString("item_ped_cst").substring(1,3)+"</CST>");
              xml.append("<modBC>1</modBC>");
              xml.append("<vBC>"+funcoes.formataValorNFE(rsItens.getString("item_ped_valor_total"),"BD").replace(".", "").replace(",", ".")+"</vBC>");
              xml.append("<pICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_aliquota_icms"),"BD").replace(".", "").replace(",", ".")+"</pICMS>");
              xml.append("<vICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_icms"),"BD").replace(".", "").replace(",", ".")+"</vICMS>");
              xml.append("</ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              }
              
              if(CST.equals("20"))
              {
              xml.append("<ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              xml.append("<orig>0</orig>");
              xml.append("<CST>"+rsItens.getString("item_ped_cst").substring(1,3)+"</CST>");
              xml.append("<modBC>1</modBC>");
              xml.append("<pRedBC>10.00</pRedBC>"); //tratar
              xml.append("<vBC>"+funcoes.formataValorNFE(rsItens.getString("item_ped_valor_total"),"BD").replace(".", "").replace(",", ".")+"</vBC>");
              xml.append("<pICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_aliquota_icms"),"BD").replace(".", "").replace(",", ".")+"</pICMS>");
              xml.append("<vICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_icms"),"BD").replace(".", "").replace(",", ".")+"</vICMS>");
              xml.append("</ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              }

              if(CST.equals("40") || CST.equals("41") || CST.equals("50"))
              {
              xml.append("<ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              xml.append("<orig>0</orig>");
              xml.append("<CST>"+rsItens.getString("item_ped_cst").substring(1,3)+"</CST>");
              //xml.append("<modBC>1</modBC>");
              //xml.append("<vBC>"+funcoes.formataValorNFE(rsItens.getString("item_ped_valor_total"),"BD").replace(".", "").replace(",", ".")+"</vBC>");
              //xml.append("<pICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_aliquota_icms"),"BD").replace(".", "").replace(",", ".")+"</pICMS>");
              //xml.append("<vICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_icms"),"BD").replace(".", "").replace(",", ".")+"</vICMS>");
              xml.append("</ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              }
              
              if(CST.equals("60"))
              {
              xml.append("<ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              xml.append("<orig>0</orig>");
              xml.append("<CST>"+rsItens.getString("item_ped_cst").substring(1,3)+"</CST>");
              //xml.append("<modBC>1</modBC>");
              //xml.append("<pRedBC>10.00</pRedBC>"); //tratar
              //xml.append("<vBC>"+funcoes.formataValorNFE(rsItens.getString("item_ped_valor_total"),"BD").replace(".", "").replace(",", ".")+"</vBC>");
              //xml.append("<pICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_aliquota_icms"),"BD").replace(".", "").replace(",", ".")+"</pICMS>");
              //xml.append("<vICMS>"+funcoes.formataValorNFE(rsItens.getString("item_ped_icms"),"BD").replace(".", "").replace(",", ".")+"</vICMS>");
              xml.append("</ICMS"+rsItens.getString("item_ped_cst").substring(1,3)+">");
              }
              

              xml.append("</ICMS>");

              xml.append("<IPI>");
              xml.append("<cSelo>0</cSelo>"); 
              xml.append("<qSelo>0</qSelo>"); 
              xml.append("<cEnq>999</cEnq>"); 
              xml.append("<IPITrib>");
              xml.append("<CST>50</CST>"); //saida  tributada
              xml.append("<vBC>"+txtIPI.getText().replace(".", "").replace(",", ".")+"</vBC>");
              xml.append("<pIPI>"+funcoes.formataValorNFE(rsItens.getString("item_ped_aliquota_ipi"),"BD").replace(".", "").replace(",", ".")+"</pIPI>");
              xml.append("<vIPI>"+funcoes.formataValorNFE(rsItens.getString("item_ped_ipi"),"BD").replace(".", "").replace(",", ".")+"</vIPI>");
              xml.append("</IPITrib>");
              xml.append("</IPI>");

              xml.append("<PIS>");
              xml.append("<PISAliq>");
              xml.append("<CST>01</CST>");
              xml.append("<vBC>"+funcoes.formataValorNFE(rsItens.getString("item_ped_valor_total"),"BD").replace(".", "").replace(",", ".")+"</vBC>");
              xml.append("<pPIS>1.65</pPIS>");
              double vPIS = (rsItens.getDouble("item_ped_valor_total") * 1.65) / 100;
              tPIS += vPIS;
              xml.append("<vPIS>"+ funcoes.formataValorNFE(Double.toString(vPIS),"BD").replace(".", "").replace(",", ".") +"</vPIS>");
              xml.append("</PISAliq>");
              xml.append("</PIS>");

              xml.append("<COFINS>");
              xml.append("<COFINSAliq>");
              xml.append("<CST>01</CST>");
              xml.append("<vBC>"+funcoes.formataValorNFE(rsItens.getString("item_ped_valor_total"),"BD").replace(".", "").replace(",", ".")+"</vBC>");
              xml.append("<pCOFINS>7.60</pCOFINS>");
              double vCofins = (rsItens.getDouble("item_ped_valor_total") * 7.60) / 100;
              tCofins += vCofins;
              xml.append("<vCOFINS>"+funcoes.formataValorNFE(Double.toString(vCofins),"BD").replace(".", "").replace(",", ".")+"</vCOFINS>");
              xml.append("</COFINSAliq>");
              xml.append("</COFINS>");

              xml.append("</imposto>");
              xml.append("</det>");
              xItem++;
              }

              xml.append("<total>");
              xml.append("<ICMSTot>");
              xml.append("<vBC>"+txtBaseICMS.getText().replace(".", "").replace(",", ".")+"</vBC>");
              xml.append("<vICMS>"+txtICMS.getText().replace(".", "").replace(",", ".")+"</vICMS>");
              xml.append("<vBCST>"+txtBaseICMSSUB.getText().replace(".", "").replace(",", ".")+"</vBCST>");
              xml.append("<vST>"+txtICMSSUB.getText().replace(".", "").replace(",", ".")+"</vST>");
              xml.append("<vProd>"+txtProdutos.getText().replace(".", "").replace(",", ".")+"</vProd>");
              xml.append("<vFrete>"+txtFrete.getText().replace(".", "").replace(",", ".")+"</vFrete>");
              xml.append("<vSeg>0.00</vSeg>");
              xml.append("<vDesc>0.00</vDesc>");  //tem de calcular
              xml.append("<vII>0.00</vII>");
              xml.append("<vIPI>"+txtIPI.getText().replace(".", "").replace(",", ".")+"</vIPI>");
              xml.append("<vPIS>"+funcoes.formataValorNFE(Double.toString(tPIS), "BD").replace(".", "").replace(",", ".") +"</vPIS>");
              xml.append("<vCOFINS>"+funcoes.formataValorNFE(Double.toString(tCofins), "BD").replace(".", "").replace(",", ".") +"</vCOFINS>");
              xml.append("<vOutro>"+txtDespesas.getText().replace(".", "").replace(",", ".")+"</vOutro>");
              xml.append("<vNF>"+txtTotalNota.getText().replace(".", "").replace(",", ".")+"</vNF>");
              xml.append("</ICMSTot>");
              //xml.append("<ISSQNtot />");
              //xml.append("<retTrib />");
              xml.append("</total>");
              xml.append("<transp>");
              xml.append("<modFrete>"+ddlFrete.getSelectedItem().toString().substring(0,1)+"</modFrete>");
              xml.append("</transp>");
              xml.append("<cobr>");
              xml.append("<fat />");
              xml.append("</cobr>");

            xml.append("</infNFe>");
            xml.append("</NFe>");
            //xml.append("</enviNFe>");
        }catch (Exception er)
        {
            er.printStackTrace();
        }

        PreparedStatement pstmt = null;
        String sql;
        try
        {
            pstmt = conn.prepareStatement("UPDATE NOTA_FISCAL SET NOT_XML = ? WHERE NOT_CHAVE_NFE = ? ");
            pstmt.setString(1, xml.toString());
            pstmt.setString(2, txtChaveNFE.getText());
            pstmt.executeUpdate();

           }catch (Exception e) {
           String vm_error = e.getMessage();
            JOptionPane.showMessageDialog(null,"Erro ao gerar XML "+vm_error);
        }
        variaveis.vmErrosXML = "";
        ValidarXML();
        if(!variaveis.vmErrosXML.equals(""))
        {
            FrmErroXml md = new FrmErroXml(null, true);
            md.setLocationRelativeTo(null);
            md.setVisible(true);
            try
            {

            String  vmCondicaoItem = " not_codigo_id = " + txtNotaID.getText();
            AcessoDados.Excluir("nota_fiscal", vmCondicaoItem);

            String  vmCondicao = "cr_nota_fiscal = " + txtNotaID.getText();
            AcessoDados.Excluir("contas_receber", vmCondicao);

            String  vmCondicaoCC = "cc_nota = " + txtNotaID.getText();
            AcessoDados.Excluir("contas_corrente", vmCondicaoCC);

            //Atualizar Tabela de Pedidos
            String vmCampos_Parametros = " ped_numero_nota_fiscal = NULL ," +
                                         " ped_data_faturamento = NULL ";

            String vmCondicao_Alteracao =" ped_codigo_id = " + txtPedido.getText() ;

            AcessoDados.Alterar("pedidos", vmCampos_Parametros, vmCondicao_Alteracao);
            
            try
            {
               String Nota = new File("NF-e/" + txtChaveNFE.getText()+"-nfe.xml").getAbsolutePath(); 
               File arquivo;  
               arquivo = new File(Nota);
               arquivo.delete();
            }catch(Exception exerr)
            {
                variaveis.vmErrosXML = "Erro ao gerar arquivo XML da nota.";
            }

            }catch (Exception e) {
                e.printStackTrace();
            }

        }

    }

    public void ValidarXML(){
       DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();  
       System.out.println("DocumentBuilderFactory: "+ factory.getClass().getName());  
       InputSource inStream = new InputSource();  
       inStream.setCharacterStream(new StringReader(xml.toString())); 
       String Nota = new File("NF-e/" + txtChaveNFE.getText()+"-nfe.xml").getAbsolutePath(); 
       String Schemas = new File("Schemas/nfe_v2.00.xsd").getAbsolutePath(); 
       try
       {
       File arquivo;  
       arquivo = new File(Nota);
       FileOutputStream fos = new FileOutputStream(arquivo);
       String texto = xml.toString();
       fos.write(texto.getBytes());
       fos.close();  
       }catch(Exception exerr)
       {
           variaveis.vmErrosXML = "Erro ao gerar arquivo XML da nota.";
       }
       
       try{
       AsinarXML.assinar(Nota, "D:/RUBBERPLAST IND COM LTDA.pfx", "12345678", Nota, "1");
       }catch(Exception ex1)
       {
           ex1.printStackTrace();
       }
              
            factory.setNamespaceAware(true);  
            factory.setValidating(true);  
            factory.setAttribute("http://java.sun.com/xml/jaxp/properties/schemaLanguage", "http://www.w3.org/2001/XMLSchema");  
            factory.setAttribute("http://java.sun.com/xml/jaxp/properties/schemaSource", Schemas);  
            DocumentBuilder builder = null;  
            try   
            {  
                builder = factory.newDocumentBuilder();  
                builder.setErrorHandler( new SimpleErrorHandler());  
            } catch (ParserConfigurationException ex)   
            {  
                ex.printStackTrace();  
                
            }  
            org.w3c.dom.Document document;  
            try   
            {  
                document = builder.parse(Nota);  
                org.w3c.dom.Node rootNode  = document.getFirstChild();  
                System.out.println("Root node: "+ rootNode.getNodeName()  );  
                
                
                
            } catch (IOException ex) {  
                ex.printStackTrace();  
            } catch (SAXException ex) {  
                ex.printStackTrace();  
            }  

    }          
    public class SimpleErrorHandler implements ErrorHandler  
    {  
        public void error(SAXParseException exception) {  
             variaveis.vmErrosXML +=  "error: "+ exception.getMessage() + "/n" ;  
            
         }  
                
         public void fatalError(SAXParseException exception) {  
             variaveis.vmErrosXML += "fatalError: "+ exception.getMessage() + "/n";  
            
         }  
                
         public void warning(SAXParseException exception) {  
             variaveis.vmErrosXML += "warning: "+ exception.getMessage() + "/n";  
            
         }  

    }  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisaBancoID;
    private javax.swing.JButton btnPesquisaFormaPagamento;
    private javax.swing.JButton btnPesquisaUnidade;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox cbFrete;
    private javax.swing.JComboBox cbIPI;
    private javax.swing.JComboBox cbSituacao;
    private javax.swing.JComboBox ddlFrete;
    private javax.swing.JTable grParcelas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtBancoDescricao;
    private javax.swing.JTextField txtBancoID;
    private javax.swing.JTextField txtBaseICMS;
    private javax.swing.JTextField txtBaseICMSSUB;
    private javax.swing.JTextField txtCOFINS;
    private javax.swing.JTextField txtChaveNFE;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JFormattedTextField txtCodCliente;
    private javax.swing.JTextField txtCodFormaPagamento;
    private javax.swing.JFormattedTextField txtDataPedido;
    private javax.swing.JTextField txtDespesas;
    private javax.swing.JFormattedTextField txtEmissao;
    private javax.swing.JTextField txtEspecie;
    private javax.swing.JTextField txtFormaPagamento;
    private javax.swing.JTextField txtFrete;
    private javax.swing.JTextField txtICMS;
    private javax.swing.JTextField txtICMSSUB;
    private javax.swing.JTextField txtIPI;
    private javax.swing.JTextArea txtInfComplementares;
    private javax.swing.JFormattedTextField txtNotaID;
    private javax.swing.JTextField txtPIS;
    private javax.swing.JFormattedTextField txtPedido;
    private javax.swing.JTextField txtPesoBruto;
    private javax.swing.JTextField txtPesoLiquido;
    private javax.swing.JFormattedTextField txtPlaca;
    private javax.swing.JTextField txtProdutos;
    private javax.swing.JTextField txtProtocolo;
    private javax.swing.JTextField txtQtde;
    private javax.swing.JFormattedTextField txtSaida;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtSituacaoNFE;
    private javax.swing.JTextField txtTotalNota;
    private javax.swing.JTextField txtTransportadora;
    private javax.swing.JTextField txtTransportadoraID;
    // End of variables declaration//GEN-END:variables

}
